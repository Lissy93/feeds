<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Alicia's Notes üöÄ</title>
    <author>Alicia's Notes üöÄ</author>
    <description>Thankful to be here üåç</description>
    <link>http://aliciasykes.com</link>
    <language>en</language>
    <item>
      <title>SvelteKit 1.0 - Building a Blog that fetches from RSS ü¶Ñ</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Mon, 20 Feb 2023 22:10:08 +0000</pubDate>
      <link>https://notes.aliciasykes.com/42764/sveltekit-1-0-building-a-blog-that-fetches-from-rss</link>
      <guid>https://notes.aliciasykes.com/42764/sveltekit-1-0-building-a-blog-that-fetches-from-rss</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;The aim of this post is to provide a whistle-stop tour of the latest version of SvelteKit. We're going to build a developer portfolio and blog website, that fetches data from your RSS feed, as well as the GitHub API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Contents&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro-to-sveltekit"&gt;Intro to SvelteKit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-were-going-to-build"&gt;What we're going to build&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#lets-get-started"&gt;Let's get Started!&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#step-0-prerequisites"&gt;Step #0 - Prerequisites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-1-project-setup"&gt;Step #1 - Project Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-2-finish-setup"&gt;Step #2 - Finish Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-3-components"&gt;Step #3 - Components&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-4-creating-a-route"&gt;Step #4 - Creating a Route&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-5-special-routes"&gt;Step #5 - Special Routes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-6-fetching-data"&gt;Step #6 - Fetching Data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-7-render-results"&gt;Step #7 - Render Results&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-8-serverside"&gt;Step #8 - Server-Side&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-9-build-the-post-page"&gt;Step #9 - The Post Route&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#step-10-deploy"&gt;Step #10 - Deploy!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#the-project"&gt;The Final Project&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#blog-page-fetched-from-rss"&gt;Blog Page (fetched from RSS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#projects-page-fetched-from-github"&gt;Projects Page (fetched from GitHub)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#social-media-links-stats-fetched-from-apis"&gt;Social Media Links (stats fetched from APIs)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Intro to SvelteKit&lt;/h2&gt;

&lt;p&gt;Svelte has pretty quickly taken the top spot for most loved web framework &lt;sup&gt;&lt;a href="https://insights.stackoverflow.com/survey/2021#web-frameworks" rel="noopener nofollow" target="_blank"&gt;[SO Survey]&lt;/a&gt;&lt;/sup&gt;, and with the recent release of SvelteKit 1.0, you should expect to see demand for Svelte + SvelteKit developers increase, as more projects adopt it.&lt;/p&gt;

&lt;p&gt;SvelteKit to Svelte, is sort of like what Next.js is to React - it handles routing, layouts, server-side rendering, deployment and makes developing quality web apps quicker, easier and much more fun.&lt;/p&gt;

&lt;p&gt;But why SvekteKit? ... You'll see! It's just so easy to get a fully-featured dynamic web application up and running, with all the quality metrics which would usually take days, or even weeks to implement in traditional frameworks. Think great performance, simple deployments, easy code structures and a sweet sweet developer experience.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;What we're going to build&lt;/h2&gt;

&lt;p&gt;Most of us have a blog, weather it's here on Dev.to, or on another platform. Today we're going to build and deploy you a personal blog, that aggregates all your posts from other platforms, into a single site.&lt;/p&gt;

&lt;p&gt;Since I don't know what blogging platforms you're using, I don't want to rely on individual APIs. But thankfully there's a simple solution to this - RSS! Almost all modern (and old) providers support RSS, and it'll let us easily fetch all your posts from a single URL. (For example, here on DEV: &lt;code class="prettyprint"&gt;https://dev.to/feed/[your-username]&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Here's a live demo: &lt;strong&gt;&lt;a href="https://devolio.netlify.app/blog" rel="noopener nofollow" target="_blank"&gt;devolio.netlify.app/blog&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;And here's the full source: &lt;strong&gt;&lt;a href="https://github.com/Lissy93/devolio" rel="noopener nofollow" target="_blank"&gt;@Lissy93/Devolio&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To deploy it yourself - just fork it, update the config with your RSS feed URL(s), and use one of the 1-click deploy options.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Let's get Started!&lt;/h2&gt;

&lt;h3&gt;Step #0 - Prerequisites&lt;/h3&gt;

&lt;p&gt;You'll need &lt;a href="https://nodejs.org/en/" rel="noopener nofollow" target="_blank"&gt;Node.js&lt;/a&gt; (LTS or latest) installed. It's also recommended to have &lt;a href="https://git-scm.com/" rel="noopener nofollow" target="_blank"&gt;Git&lt;/a&gt;, a code editor (like &lt;a href="https://code.visualstudio.com/" rel="noopener nofollow" target="_blank"&gt;VS Code&lt;/a&gt;), and access to a terminal. Alternatively, you can use a cloud service, like &lt;a href="https://github.com/codespaces/" rel="noopener nofollow" target="_blank"&gt;Codespaces&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Step #1 - Project Setup&lt;/h3&gt;

&lt;p&gt;We can easily create our project by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;npm create svelte@latest dev-blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When prompted, select SvelteKit, then decide weather you'd like TypeScript, ESLint, Prettier, Playwright, Vitest.&lt;/p&gt;

&lt;p&gt;Next, we need to navigate into our project (with &lt;code class="prettyprint"&gt;cd dev-blog&lt;/code&gt;), and install dependencies (with &lt;code class="prettyprint"&gt;npm install&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;To launch the app, with live reload enabled, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then open &lt;a href="http://localhost:5173/" rel="noopener nofollow" target="_blank"&gt;localhost:5173&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Step #2 - Finish Setup&lt;/h3&gt;

&lt;p&gt;To avoid the typical ugly &lt;code class="prettyprint"&gt;../../../&lt;/code&gt; in import statements, we're going to add an alias within our &lt;code class="prettyprint"&gt;svelte.config.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;This can be done by just adding &lt;code class="prettyprint"&gt;alias&lt;/code&gt; object under &lt;code class="prettyprint"&gt;config.sveltekit&lt;/code&gt;. Here's an example, where I'll map &lt;code class="prettyprint"&gt;./src/&lt;/code&gt; to &lt;code class="prettyprint"&gt;$src&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;adapter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/adapter-auto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;vitePreprocess&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/kit/vite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/** @type {import('@sveltejs/kit').Config} */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;preprocess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vitePreprocess&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="na"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;adapter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;adapter&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
    &lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$src/*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can come back to the svelte.config file later, as it's where we put adaptors to deploy to various platforms, like Netlify.&lt;/p&gt;

&lt;p&gt;If you'd like to use your own Prettier, ESLint or TypeScript config, you can update &lt;code class="prettyprint"&gt;.prettierrc&lt;/code&gt;, &lt;code class="prettyprint"&gt;.eslintrc.cjsprett&lt;/code&gt; and &lt;code class="prettyprint"&gt;tsconfig.json&lt;/code&gt; respectively. Run &lt;code class="prettyprint"&gt;npm run format&lt;/code&gt; to apply Prettier rules, and &lt;code class="prettyprint"&gt;npm run check&lt;/code&gt; to verify.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Step #3 - Components&lt;/h3&gt;

&lt;p&gt;Before we proceed, we need to know the basics of components.&lt;br&gt;
One of the reason that Svelte (and SvelteKit) is so easy to work with, is because pretty much everything is just a component. And the structure of components are really, really simple. Here's an example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;// All JavaScript logic and imports go here&lt;/span&gt;
&lt;span class="c1"&gt;// Append lang="ts" to use TypeScript&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="c"&gt;&amp;lt;!-- All markup goes here --&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Example Component&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;All&lt;/span&gt; &lt;span class="nt"&gt;styles&lt;/span&gt; &lt;span class="nt"&gt;go&lt;/span&gt; &lt;span class="nt"&gt;here&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;are&lt;/span&gt; &lt;span class="nt"&gt;scoped&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;current&lt;/span&gt; &lt;span class="nt"&gt;component&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Append&lt;/span&gt; &lt;span class="nt"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;"scss"&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;use&lt;/span&gt; &lt;span class="nt"&gt;SCSS&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;another&lt;/span&gt; &lt;span class="nt"&gt;pre-processor&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;p&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here's a real-world example, where we're making a re-usable heading component, with optional level (h1, h2, etc), color, size and font.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="c1"&gt;// Parameters&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;level&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h2&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h3&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h4&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h5&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h6&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;h1&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// The semantic heading level&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// An optional override color (defaults to accent)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// An optional override size (default depends on level)&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;string&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;undefined&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// An optional override font (defaults to FiraCode)&lt;/span&gt;

&lt;span class="c1"&gt;// Computed values, for reactivity&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;computedColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;color&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`--headingColor: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;computedSize&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;size&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`--headingSize: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;size&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;computedFont&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;font&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`--headingFont: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;font&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;''&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nl"&gt;$&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;computedStyles&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;computedColor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;computedSize&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;computedFont&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;svelte:element&lt;/span&gt; &lt;span class="na"&gt;this=&lt;/span&gt;&lt;span class="s"&gt;{level}&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;{computedStyles}&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/svelte:element&amp;gt;&lt;/span&gt;


&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"scss"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h6&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-weight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;700&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;transition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="m"&gt;.25s&lt;/span&gt; &lt;span class="n"&gt;ease-in-out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingFont&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingColor&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;h6&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0.5rem&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2.8rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;2rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h3&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.75rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h4&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.5rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h5&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1.25rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nt"&gt;h6&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nl"&gt;font-size&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--headingSize&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="m"&gt;1rem&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Couple of things to note:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We are defining props with &lt;code class="prettyprint"&gt;export let propName&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;We can make props optional, by giving them a default value&lt;/li&gt;
&lt;li&gt;We can access any of these variables within our component, just surround them in braces &lt;code class="prettyprint"&gt;{}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If we need attributes to be reactive, we use the &lt;code class="prettyprint"&gt;$: variabeName&lt;/code&gt; syntax&lt;/li&gt;
&lt;li&gt;We can specify what type of semantic element is used, with &lt;code class="prettyprint"&gt;&amp;lt;svelte:element this="div"&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;A method of passing styles from JS into CSS is to define CSS variables, and pass them into the style prop

&lt;ul&gt;
&lt;li&gt;(This isn't as bad as it sounds, as all styles are scoped only to the current component!)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h3&gt;Step #4 - Creating a Route&lt;/h3&gt;

&lt;p&gt;Next we're going to create a blog page, where all our posts will be displayed. (This could be done on the homepage, in &lt;code class="prettyprint"&gt;src/routes/+page.svelte&lt;/code&gt;, but this is a good opportunity to explain routeing)&lt;/p&gt;

&lt;p&gt;SvelteKit will automatically create routes based on the directory structure within the &lt;code class="prettyprint"&gt;routes&lt;/code&gt; directory. All you need is a directory named after the route name, containing a Svelte file names &lt;code class="prettyprint"&gt;+page.svelte&lt;/code&gt;. So let's create that route, with: &lt;code class="prettyprint"&gt;touch src/routes/blog/+page.svelte&lt;/code&gt; - the contents of this file will just be a normal Svelte component, like what we saw above.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Blog Page&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;svelte:head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{title}&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/svelte:head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;{title}&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"scss"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;h2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="no"&gt;hotpink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We'll also need a route that can render individual posts, but we want that URL path to be dynamic, maybe based on the posts title. For this we can create a directory called &lt;code class="prettyprint"&gt;[slug]&lt;/code&gt; that the user will land on when they visit &lt;code class="prettyprint"&gt;example.com/blog/example-post&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Step #5 - Special Routes&lt;/h3&gt;

&lt;p&gt;Now's a good time to mention that we can have our routed inherit certain components that will appear on all pages, like a navbar and footer. For this, we can create a layout file, which needs to be called &lt;code class="prettyprint"&gt;+layout.svelte&lt;/code&gt;, and since we want this on all pages, we'll put it into &lt;code class="prettyprint"&gt;src/routes&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Populate this with something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;NavBar&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$src/components/NavBar.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Footer&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$src/components/Footer.svelte&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;fade&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;svelte/transition&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$app/stores&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;svelte:head&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{$page.url.pathname.replaceAll('-', ' ')}&lt;span class="nt"&gt;&amp;lt;/title&amp;gt;&lt;/span&gt; 
&lt;span class="nt"&gt;&amp;lt;/svelte:head&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;NavBar&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;in:fade&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;slot&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;Footer&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;style &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"scss"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"$src/styles/color-palette.scss"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"$src/styles/media-queries.scss"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"$src/styles/typography.scss"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s1"&gt;"$src/styles/dimensions.scss"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="nd"&gt;:global&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="py"&gt;scroll-behavior&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;smooth&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="nd"&gt;:global&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;::selection&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;background-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--accent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nl"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;--background&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A couple of things to note here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The main site content will be rendered where &lt;code class="prettyprint"&gt;&amp;lt;slot /&amp;gt;&lt;/code&gt; is placed&lt;/li&gt;
&lt;li&gt;We're adding a page transition animation, by importing &lt;code class="prettyprint"&gt;svelte/transition&lt;/code&gt; and setting &lt;code class="prettyprint"&gt;in:fade&lt;/code&gt; on the part of the page which will change&lt;/li&gt;
&lt;li&gt;We can get information about the current page (like path), by using the &lt;code class="prettyprint"&gt;page&lt;/code&gt; object (imported from &lt;code class="prettyprint"&gt;$app/stores&lt;/code&gt;) - precede it with a &lt;code class="prettyprint"&gt;$&lt;/code&gt; to keep the value updated&lt;/li&gt;
&lt;li&gt;If we need to set any tags within the &lt;code class="prettyprint"&gt;&amp;lt;head&amp;gt;&lt;/code&gt; we can use &lt;code class="prettyprint"&gt;&amp;lt;svelte:head&amp;gt;&lt;/code&gt; to do so&lt;/li&gt;
&lt;li&gt;We can also pop any global style, like a reset or import CSS variables&lt;/li&gt;
&lt;li&gt;Global styles can be applied using &lt;code class="prettyprint"&gt;:global(body)&lt;/code&gt; (or whatever selector you're targeting) - but use this sparingly!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Another special route within SvelteKit, is &lt;code class="prettyprint"&gt;+error.svelte&lt;/code&gt;, which will be rendered in place of the current route if an error is thrown within the &lt;code class="prettyprint"&gt;load()&lt;/code&gt; function of any route.&lt;/p&gt;

&lt;p&gt;Again, let's create that file in &lt;code class="prettyprint"&gt;src/routes/+error.svelte&lt;/code&gt; and populate it with something like this. (Again, we can get info about the current route, including error code from the &lt;code class="prettyprint"&gt;$page&lt;/code&gt; object)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;page&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$app/stores&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;emojis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// TODO add the rest!&lt;/span&gt;
        &lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üß±&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;420&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;ü´†&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;üí•&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
    &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;{$page.status} {$page.error.message}&lt;span class="nt"&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;style=&lt;/span&gt;&lt;span class="s"&gt;"font-size: 10em"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    {emojis[$page.status] ?? emojis[500]}
&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It's also worth noting, that you can create layout and error pages that are specific to certain routes, by nesting them within the correct route directory. If you need several layout pages, which share characteristics, you can extract those elements out into their own component, to make them more reusable.&lt;/p&gt;

&lt;p&gt;By now, our routes directory structure should look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;src/routes
‚îú‚îÄ‚îÄ +error.svelte
‚îú‚îÄ‚îÄ +layout.svelte
‚îú‚îÄ‚îÄ +page.svelte
‚îú‚îÄ‚îÄ about
‚îÇ  ‚îî‚îÄ‚îÄ +page.svelte
‚îî‚îÄ‚îÄ blog
   ‚îú‚îÄ‚îÄ +page.svelte
   ‚îú‚îÄ‚îÄ +page.ts
   ‚îî‚îÄ‚îÄ [slug]
      ‚îú‚îÄ‚îÄ +page.svelte
      ‚îî‚îÄ‚îÄ +page.ts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Step #6 - Fetching Data&lt;/h3&gt;

&lt;p&gt;Now it's time to get into the good stuff! We're going to fetch the list of blog posts, from the users RSS feed.&lt;/p&gt;

&lt;p&gt;Now is a good time to mention, that within the path directory for each route, we can also have a &lt;code class="prettyprint"&gt;+page.js&lt;/code&gt; / &lt;code class="prettyprint"&gt;+page.ts&lt;/code&gt; file (alongside the &lt;code class="prettyprint"&gt;+page.svelte&lt;/code&gt;). This is where we'll do our data fetching. &lt;/p&gt;

&lt;p&gt;To keep things simple, we're going to use &lt;a href="https://www.npmjs.com/package/fast-xml-parser" rel="noopener nofollow" target="_blank"&gt;fast-xml-parser&lt;/a&gt; to parse the XML response, into JSON.&lt;/p&gt;

&lt;p&gt;The following script simply fetches and parses feeds from a given XML RSS feed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;XMLParser&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;fast-xml-parser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parseXml&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rawRssData&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;parser&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;XMLParser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;parser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rawRssData&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/** @type {import('./$types').PageLoad} */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;RSS_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`https://notes.aliciasykes.com/feed`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;RSS_URL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;rawXml&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;parseXml&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;rawXml&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;rss&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;posts&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Step #7 - Render Results&lt;/h3&gt;

&lt;p&gt;Rendering the results from the returned data is really easy. In the &lt;code class="prettyprint"&gt;blog/+page.svelte&lt;/code&gt; component (next to the &lt;code class="prettyprint"&gt;+page.ts&lt;/code&gt; file), simply include &lt;code class="prettyprint"&gt;export let data&lt;/code&gt; - this will be the result returned by our fetch function. We can now reference this data in the markup.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;"ts"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="cm"&gt;/** @type {import('./$types').PageData} */&lt;/span&gt;
  &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

Blog

{#each data.posts as post}
  &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;{post.link}&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;"noreferrer"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
      {post.title}
    &lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{/each}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You'll notice we're using &lt;code class="prettyprint"&gt;{#each data.posts as post}&lt;/code&gt; - this is just a for loop, as the data returned is an array.&lt;/p&gt;

&lt;p&gt;This is part of Svelte's &lt;a href="https://svelte.dev/docs#template-syntax" rel="noopener nofollow" target="_blank"&gt;template syntax&lt;/a&gt;. There are other properties also, like &lt;code class="prettyprint"&gt;{#if expression}...{/if}&lt;/code&gt; for conditionals, or &lt;code class="prettyprint"&gt;{#await expression}...{:then name}...{/await}&lt;/code&gt; for promises, as well as a whole host of other useful features.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Step #8 - Server-Side&lt;/h3&gt;

&lt;p&gt;What we've got so far works great, but there are a few issues we may encounter with it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Load times - RSS feeds are large, and fetching them client-side on each load isn't efficient&lt;/li&gt;
&lt;li&gt;SEO - Dynamically loaded content isn't going to be crawlable by most search engine bots&lt;/li&gt;
&lt;li&gt;CORS - Some RSS feeds won't allow client-side requests from cross-origin hosts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thankfully, there's an easy fix for this. Renaming &lt;code class="prettyprint"&gt;+page.ts&lt;/code&gt; to &lt;code class="prettyprint"&gt;+page.server.ts&lt;/code&gt; will cause it to be rendered server-side, instead of on the users browser. This should fix those issues, and won't require any code changes. &lt;/p&gt;

&lt;p&gt;Note that for server-side code, we cannot use any of the browser APIs. Since a lot of our code will be capable of being run both server and client-side, we will need to check certain features are available before attempting to use them. We can do this, by importing &lt;code class="prettyprint"&gt;browser&lt;/code&gt; from &lt;code class="prettyprint"&gt;$app/environment&lt;/code&gt;, then using &lt;code class="prettyprint"&gt;if (browser) { /* Can access browser API here */ }&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Step #9 - Build the Post Page&lt;/h3&gt;

&lt;p&gt;Finally, when the user clicks on a post, we'd like to render it. This is pretty straitforward, as the RSS response is already in HTML format, so it's just a case of using the &lt;code class="prettyprint"&gt;@html&lt;/code&gt; directive, then styling it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;main&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"article-content"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  {@html content}
&lt;span class="nt"&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Step #10 - Deploy!&lt;/h3&gt;

&lt;p&gt;Now, let's get deploys setup. This is another reason why SvelteKit is so awesome, as deploying to pretty much any provider is just so easy!&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install the adapter for your desired provider

&lt;ul&gt;
&lt;li&gt;E.g. for Netlify: &lt;code class="prettyprint"&gt;npm i --save-dev @sveltejs/adapter-netlify&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Import said adaptor in your &lt;code class="prettyprint"&gt;svelte.config.js&lt;/code&gt; file

&lt;ul&gt;
&lt;li&gt;E.g. &lt;code class="prettyprint"&gt;import netlifyAdapter from '@sveltejs/adapter-netlify';&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Initiate the adaptor, within the config object, under &lt;code class="prettyprint"&gt;kit&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;kit: &lt;code class="prettyprint"&gt;{ adapter: netlifyAdapter() }&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Deploy! Now just head to your Netlify dashboard, and import the project&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you wish to run your project on a VPS, we can use the &lt;code class="prettyprint"&gt;@sveltejs/adapter-node&lt;/code&gt;. Repeat the process above, then run &lt;code class="prettyprint"&gt;yarn build&lt;/code&gt;, and start the node server by running &lt;code class="prettyprint"&gt;node build/index.js&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We may want to use multiple adapters, so that our project is compatible with several different hosting providers. Here's an example of my config file which does just this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;autoAdapter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/adapter-auto&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;netlifyAdapter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/adapter-netlify&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;vercelAdapter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/adapter-vercel&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;nodeAdapter&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/adapter-node&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;vitePreprocess&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@sveltejs/kit/vite&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;multiAdapter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;adapters&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;async&lt;/span&gt; &lt;span class="nx"&gt;adapt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;await&lt;/span&gt; &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;adapters&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class="nb"&gt;Promise&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;resolve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resolved&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="nx"&gt;resolved&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;adapt&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;argument&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="cm"&gt;/** @type {import('@sveltejs/kit').Config} */&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;preprocess&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;vitePreprocess&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="na"&gt;kit&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;adapter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;multiAdapter&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;autoAdapter&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;netlifyAdapter&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;vercelAdapter&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="nx"&gt;nodeAdapter&lt;/span&gt;&lt;span class="p"&gt;()]),&lt;/span&gt;
    &lt;span class="na"&gt;alias&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;$src/*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;src/*&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;config&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(don't forget to npm i any adapters before using!)&lt;/p&gt;

&lt;p&gt;Finally, let's talk about Docker. As it's a popular deployment method, here's a multi-arch &lt;strong&gt;&lt;a href="https://github.com/Lissy93/devolio/blob/master/Dockerfile" rel="noopener nofollow" target="_blank"&gt;Dockerfile&lt;/a&gt;&lt;/strong&gt; I've written, with a build stage, deploy stage, and some healthchecks.&lt;/p&gt;

&lt;p&gt;It's also published to DockerHub (under &lt;a href="https://hub.docker.com/r/lissy93/devolio" rel="noopener nofollow" target="_blank"&gt;lissy93/devolio&lt;/a&gt;), so you should be able to use it with &lt;code class="prettyprint"&gt;docker run -p 3000:80 lissy93/devolio&lt;/code&gt; - or use the &lt;a href="https://github.com/Lissy93/devolio/blob/master/docker-compose.yml" rel="noopener nofollow" target="_blank"&gt;docker-compose.yml&lt;/a&gt; as an template for your own container.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;The Project&lt;/h2&gt;

&lt;p&gt;I've had to skip over a few details for the sake of brevity, but all &lt;a href="https://github.com/Lissy93/devolio" rel="noopener nofollow" target="_blank"&gt;the code is available on GitHub&lt;/a&gt;, so that should clear up anything that doesn't yet make sense - if it's still not, feel free to ask below :)&lt;/p&gt;

&lt;p&gt;There's a few extra features that I also added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Extracted all data into a config file, for easy usage, and made it stylable with custom colors and themes&lt;/li&gt;
&lt;li&gt;I used a store to keep track of posts (in &lt;a href="https://github.com/Lissy93/devolio/blob/master/src/store/BlogStore.ts" rel="noopener nofollow" target="_blank"&gt;BlogStore.ts&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added functionality for loading and combining multiple RSS feeds, as well as sorting and filtering results&lt;/li&gt;
&lt;li&gt;Added internationalization functionality (in &lt;a href="https://github.com/Lissy93/devolio/blob/master/src/store/Language.ts" rel="noopener nofollow" target="_blank"&gt;Language.ts&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;I built a page to showcase your projects, with data fetched from your GitHub, via their API&lt;/li&gt;
&lt;li&gt;And a contact page, with an email form, social media links and GPG keys&lt;/li&gt;
&lt;li&gt;Added more adapters for deploying to various cloud services, and wrote a Dockerfile&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here's some screenshots (with just the plain theme)&lt;/p&gt;

&lt;h5&gt;Blog Page (fetched from RSS)&lt;/h5&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/XVC9YZy/blog-page-gif.gif" alt="Blog Page"&gt;&lt;/p&gt;

&lt;h5&gt;Projects Page (fetched from GitHub)&lt;/h5&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/nmwLZTr/projects-page.gif" alt="Projects Page"&gt;&lt;/p&gt;

&lt;h5&gt;Social Media Links (stats fetched from APIs)&lt;/h5&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/xSvJRbZ/social-previews.gif" alt="Social Media Links"&gt;&lt;/p&gt;

&lt;p&gt;I do plan on expanding the project, add some features and make it into an easily configurable, themeable developer portfolio website, that anyone can easily use. If you'd like to see the updates, drop the repo a star on GitHub :)&lt;/p&gt;

&lt;p&gt;And if you'd like to contribute to the source, it's &lt;a href="https://github.com/Lissy93/devolio" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt; (&lt;code class="prettyprint"&gt;MIT&lt;/code&gt;) on GitHub, and I'll drop you a mention in the credits if you're able to submit a PR!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Thanks for sticking by this far! I know this post has been quite long, and is a little different from my usual format. If you've got any feedback, questions, suggestions, or comments - drop them below and I'll reply :)&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;small&gt;If you like this kind of stuff&lt;/small&gt;,&lt;br&gt;&lt;small&gt;consider following for more :)&lt;/small&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/Lissy93"&gt;&lt;img src="https://img.shields.io/badge/-Lissy93-3a3a3a?style=flat&amp;amp;logo=GitHub&amp;amp;logoColor=white" alt="Follow Lissy93 on GitHub"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/Lissy_Sykes"&gt;&lt;img src="https://img.shields.io/badge/-@Lissy_Sykes-00acee?style=flat&amp;amp;logo=Twitter&amp;amp;logoColor=white" alt="Follow Lissy_Sykes on Twitter"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>20 Amazing Collections for Self-Taught Developers üéì</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Fri, 27 Jan 2023 17:45:35 +0000</pubDate>
      <link>https://notes.aliciasykes.com/42310/20-amazing-collections-for-self-taught-developers</link>
      <guid>https://notes.aliciasykes.com/42310/20-amazing-collections-for-self-taught-developers</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;A collection of the best free developer resources, from GitHub and beyond&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Developer Curriculum&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/kamranahmedse/developer-roadmap" rel="noopener nofollow" target="_blank"&gt;Developer Roadmaps&lt;/a&gt; - Complete roadmaps for developers &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/learn/" rel="noopener nofollow" target="_blank"&gt;FreeCodeCamp Curriculum&lt;/a&gt; - Full and free learning curriculum  to become a developer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Comp Sci University&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ossu/computer-science#curriculum" rel="noopener nofollow" target="_blank"&gt;Open Source Uni&lt;/a&gt; - Collection of everything you need for a Comp Sci degree &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university#lets-get-started" rel="noopener nofollow" target="_blank"&gt;CompSci Study Plan&lt;/a&gt; - Full study plan for computer science &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Learn by Doing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/codecrafters-io/build-your-own-x" rel="noopener nofollow" target="_blank"&gt;Build your own X&lt;/a&gt; - Tutorials to recreate common technologies&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/practical-tutorials/project-based-learning" rel="noopener nofollow" target="_blank"&gt;Project Tutorials&lt;/a&gt; - Tutorials for project-based learning &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners" rel="noopener nofollow" target="_blank"&gt;Web Dev projects&lt;/a&gt; - Projects and tutorials to take you from zero to hero &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/florinpop17/app-ideas" rel="noopener nofollow" target="_blank"&gt;App Ideas&lt;/a&gt; - Big list of app ideas you can build to learn &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/public-apis/public-apis" rel="noopener nofollow" target="_blank"&gt;APIs for Projects&lt;/a&gt; - Public APIs you can build projects around &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/awesomedata/awesome-public-datasets" rel="noopener nofollow" target="_blank"&gt;Public Data Sets&lt;/a&gt; - Public datasets you can build projects around &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Algorithms&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms" rel="noopener nofollow" target="_blank"&gt;JavaScript&lt;/a&gt; - Common algorithms + data structures, implemented in JS &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TheAlgorithms/Python/blob/master/DIRECTORY.md" rel="noopener nofollow" target="_blank"&gt;Python&lt;/a&gt; - Common algorithms + data structures, implemented in Python &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/iluwatar/java-design-patterns" rel="noopener nofollow" target="_blank"&gt;Java Design Patterns&lt;/a&gt; - Common design patterns + data structures, implemented in Java&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/labuladong/fucking-algorithm/tree/english" rel="noopener nofollow" target="_blank"&gt;Cracking LeetCode&lt;/a&gt; - Resources for learning algorithms for LeetCode&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Content&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/EbookFoundation/free-programming-books/blob/main/books/free-programming-books-subjects.md" rel="noopener nofollow" target="_blank"&gt;Free Programming Books&lt;/a&gt; - Massive list of free programming books &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/papers-we-love/papers-we-love" rel="noopener nofollow" target="_blank"&gt;Papers&lt;/a&gt; - Collection of interesting programming research papers &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Developer-Y/cs-video-courses" rel="noopener nofollow" target="_blank"&gt;CS Video Courses&lt;/a&gt; - Compiled list of free Comp Sci lecture videos &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mtdvio/every-programmer-should-know" rel="noopener nofollow" target="_blank"&gt;Things&lt;/a&gt; - Things every programmer should know &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ripienaar/free-for-dev" rel="noopener nofollow" target="_blank"&gt;Free Services&lt;/a&gt; - List of SaaS websites you can use for free &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Misc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/donnemartin/system-design-primer" rel="noopener nofollow" target="_blank"&gt;System Design Primer&lt;/a&gt; - Introduction to system designs &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.techinterviewhandbook.org/" rel="noopener nofollow" target="_blank"&gt;Tech Interview Handbook&lt;/a&gt; - Full guide to technical interviews &lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sindresorhus/awesome/#contents" rel="noopener nofollow" target="_blank"&gt;Awesome&lt;/a&gt; - A list of awesome lists (your gateway to endless awesomeness!)&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>CLI tools you can't live without üîß</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 19 Jan 2023 17:42:01 +0000</pubDate>
      <link>https://notes.aliciasykes.com/41983/cli-tools-you-can-t-live-without</link>
      <guid>https://notes.aliciasykes.com/41983/cli-tools-you-can-t-live-without</guid>
      <description>&lt;p&gt;&lt;p&gt;As developers, we spend a lot of our time in the terminal. There's a lot of helpful CLI tools, which can make your life in the command line easier, faster and generally more fun.&lt;/p&gt;

&lt;p&gt;This post outlines my top 50 must-have CLI tools, which I've come to rely on. If there's anything I'm missing - do let me know in the comments :)&lt;/p&gt;

&lt;p&gt;At the end of the article, I've included some scripts to help you automate the installation and updating of these tools on various systems/ distros.&lt;/p&gt;

&lt;h2&gt;Utils&lt;/h2&gt;

&lt;h3&gt;&lt;a href="https://github.com/nvbn/thefuck" rel="noopener nofollow" target="_blank"&gt;thefuck&lt;/a&gt; -  Auto-correct miss-typed commands&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;thefuck&lt;/code&gt; is one of those utilities you won't be able to live without once you've tried it. Whenever you mis-type a command and get an error, just run &lt;code class="prettyprint"&gt;fuck&lt;/code&gt; and it'll auto-correct it. Use up/down to choose a correction, or just run &lt;code class="prettyprint"&gt;fuck --yeah&lt;/code&gt; to just execute the most likely immediately.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/J55hWKX/thefuck.gif" alt="the-fuck-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nvbn/thefuck"&gt;&lt;img src="https://img.shields.io/github/stars/nvbn/thefuck?color=232323&amp;amp;label=thefuck&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View thefuck on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/nvbn"&gt;&lt;img src="https://img.shields.io/badge/nvbn-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author nvbn"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install thefuck

# Arch Linux
sudo pacman -S thefuck

# FreeBSD
pkg install thefuck
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/ajeetdsouza/zoxide" rel="noopener nofollow" target="_blank"&gt;zoxide&lt;/a&gt; - Easy navigation &lt;em&gt;(better cd)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;z&lt;/code&gt; lets you jump to any directory without needing to remember or specify its full path. It remembers which directories you've visited, so you can jump around quickly - you don't even need to type the full folder name. It also has an interactive selection option, using &lt;code class="prettyprint"&gt;fzf&lt;/code&gt; so you can live-filter directory results&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/6Z960jq/zoxide.gif" alt="zoxide-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ajeetdsouza/zoxide"&gt;&lt;img src="https://img.shields.io/github/stars/ajeetdsouza/zoxide?color=232323&amp;amp;label=zoxide&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View zoxide on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/ajeetdsouza"&gt;&lt;img src="https://img.shields.io/badge/ajeetdsouza-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author ajeetdsouza"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install zoxide

# Arch Linux
sudo pacman -S zoxide

# Debian / Ubuntu
sudo apt install zoxide

# FreeBSD
pkg install zoxide

# Other (via Rust Creates)
cargo install zoxide --locked
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/tldr-pages/tldr" rel="noopener nofollow" target="_blank"&gt;tldr&lt;/a&gt; - Community-maintained docs &lt;em&gt;(better &lt;code class="prettyprint"&gt;man&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;tldr&lt;/code&gt; is a huge collection of community-maintained man pages. Unlike traditional man pages, they're summarized, contain useful usage examples and nicely colourized for easy reading&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/jTW9knx/tlfr.gif" alt="tldr-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tldr-pages/tldr"&gt;&lt;img src="https://img.shields.io/github/stars/tldr-pages/tldr?color=232323&amp;amp;label=tldr&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View tldr on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/tldr-pages"&gt;&lt;img src="https://img.shields.io/badge/tldr-pages-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author tldr-pages"&gt;&lt;/a&gt; &lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install tldr

# Other (via NPM)
npm install -g tldr
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/boyter/scc" rel="noopener nofollow" target="_blank"&gt;scc&lt;/a&gt; -  Count lines of code &lt;em&gt;(better &lt;code class="prettyprint"&gt;cloc&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;scc&lt;/code&gt; gives you a breakdown of number of lines of code written in each language for a specific directory. It also shows some fun stats, like estimated cost to develop and complexity info. It's incredibly fast, very accurate and has support for a wide range of languages&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/NygHWXt/scc.png" alt="scc-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/boyter/scc"&gt;&lt;img src="https://img.shields.io/github/stars/boyter/scc?color=232323&amp;amp;label=scc&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View scc on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/boyter"&gt;&lt;img src="https://img.shields.io/badge/boyter-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author boyter"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install scc

# Other (via go)
go install github.com/boyter/scc/v3@latest
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/ogham/exa" rel="noopener nofollow" target="_blank"&gt;exa&lt;/a&gt; - Listing Files &lt;em&gt;(better &lt;code class="prettyprint"&gt;ls&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;exa&lt;/code&gt; is a modern Rust-based replacement for the &lt;code class="prettyprint"&gt;ls&lt;/code&gt; command, for listing files. It can display file-type icons, colors, file/folder info and has several output formats - tree, grid or list&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/cTs0wQ5/exa.png" alt="exa-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ogham/exa"&gt;&lt;img src="https://img.shields.io/github/stars/ogham/exa?color=232323&amp;amp;label=exa&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View exa on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/ogham"&gt;&lt;img src="https://img.shields.io/badge/ogham-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author ogham"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install exa

# Arch Linux
sudo pacman -S exa

# Debian / Ubuntu
sudo apt install exa
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/muesli/duf" rel="noopener nofollow" target="_blank"&gt;duf&lt;/a&gt; - Disk Usage &lt;em&gt;(better &lt;code class="prettyprint"&gt;df&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;duf&lt;/code&gt; is great for showing info about mounted disks and checking free space. It produces a clear and colorful output, and includes options for sorting and customizing results.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/sP59DKd/duf.png" alt="duf-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/muesli/duf"&gt;&lt;img src="https://img.shields.io/github/stars/muesli/duf?color=232323&amp;amp;label=duf&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View duf on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/muesli"&gt;&lt;img src="https://img.shields.io/badge/muesli-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author muesli"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install duf

# Arch Linux
sudo pacman -S duf

# Debian / Ubuntu
sudo apt install duf

# FreeBSD
pkg install duf
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/aria2/aria2" rel="noopener nofollow" target="_blank"&gt;aria2&lt;/a&gt; - Download Utility &lt;em&gt;(better &lt;code class="prettyprint"&gt;wget&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;aria2&lt;/code&gt; is a lightweight, multi-protocol, resuming download utility for HTTP/HTTPS, FTP, SFTP, BitTorrent and Metalink, with support for controlling via an RPC interface. It's incredibly &lt;a href="https://aria2.github.io/manual/en/html/README.html" rel="noopener nofollow" target="_blank"&gt;feature rich&lt;/a&gt;, and has tons of &lt;a href="https://aria2.github.io/manual/en/html/aria2c.html" rel="noopener nofollow" target="_blank"&gt;options&lt;/a&gt;. There's also &lt;a href="https://github.com/ziahamza/webui-aria2" rel="noopener nofollow" target="_blank"&gt;ziahamza/webui-aria2&lt;/a&gt; - a nice web interface companion.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/pJkkX6x/aria2c.png" alt="aria2c-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aria2/aria2"&gt;&lt;img src="https://img.shields.io/github/stars/aria2/aria2?color=232323&amp;amp;label=aria2&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View aria2 on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/aria2"&gt;&lt;img src="https://img.shields.io/badge/aria2-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author aria2"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C++&amp;amp;color=00599C&amp;amp;logo=cplusplus&amp;amp;logoColor=FFFFFF" alt="Written in C++"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install aria2

# Arch Linux
sudo pacman -S aria2

# Debian / Ubuntu
sudo apt install aria2
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/sharkdp/bat" rel="noopener nofollow" target="_blank"&gt;bat&lt;/a&gt; - Reading Files &lt;em&gt;(better &lt;code class="prettyprint"&gt;cat&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;bat&lt;/code&gt; is a clone of &lt;code class="prettyprint"&gt;cat&lt;/code&gt; with syntax highlighting and git integration. Written in Rust, it's very performant, and has several options for customizing output and theming. There's support for automatic piping and file concatenation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/VND3Y9s/bat.png" alt="bat-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sharkdp/bat"&gt;&lt;img src="https://img.shields.io/github/stars/sharkdp/bat?color=232323&amp;amp;label=bat&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View bat on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/sharkdp"&gt;&lt;img src="https://img.shields.io/badge/sharkdp-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author sharkdp"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install bat

# Arch Linux
sudo pacman -S bat

# Debian / Ubuntu
sudo apt install bat
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/so-fancy/diff-so-fancy" rel="noopener nofollow" target="_blank"&gt;diff-so-fancy&lt;/a&gt; - File Comparisons &lt;em&gt;(better &lt;code class="prettyprint"&gt;diff&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;diff-so-fancy&lt;/code&gt; gives you better looking diffs for comparing strings, files, directories and git changes. The change highlighting makes spotting changes much easier, and you can customize the output layout and colors&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/RGKLhQk/diff-so-fancy.png" alt="diff-so-fancy-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/so-fancy/diff-so-fancy"&gt;&lt;img src="https://img.shields.io/github/stars/so-fancy/diff-so-fancy?color=232323&amp;amp;label=diff-so-fancy&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View diff-so-fancy on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/so-fancy"&gt;&lt;img src="https://img.shields.io/badge/so-fancy-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author so-fancy"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Perl&amp;amp;color=39457E&amp;amp;logo=perl&amp;amp;logoColor=FFFFFF" alt="Written in Perl"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install diff-so-fancy

# Arch Linux
sudo pacman -S diff-so-fancy

# Debian / Ubuntu
sudo apt install diff-so-fancy
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/eradman/entr" rel="noopener nofollow" target="_blank"&gt;entr&lt;/a&gt; - Watch for changes&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;entr&lt;/code&gt; lets you run an arbitrary command whenever file changes. You can pass a file, directory, symlink or regex to specify which files it should watch. It's really useful for automatically rebuilding projects, reacting to logs, automated testing, etc. Unlike similar projects, it uses kqueue(2) or inotify(7) to avoid polling, and improve performance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/HHKQx2H/entr.png" alt="entr-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/eradman/entr"&gt;&lt;img src="https://img.shields.io/github/stars/eradman/entr?color=232323&amp;amp;label=entr&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View entr on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/eradman"&gt;&lt;img src="https://img.shields.io/badge/eradman-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author eradman"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install entr

# Arch Linux
sudo pacman -S entr

# Debian / Ubuntu
sudo apt install entr
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/exiftool/exiftool" rel="noopener nofollow" target="_blank"&gt;exiftool&lt;/a&gt; - Reading + writing metadata&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;ExifTool is handy utility for reading, writing, stripping and creating meta information for a wide variety of file types. Never accidentally leak your location when sharing a photo again!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Gv5PN6v/exiftool.png" alt="exiftool-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/exiftool/exiftool"&gt;&lt;img src="https://img.shields.io/github/stars/exiftool/exiftool?color=232323&amp;amp;label=exiftool&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View exiftool on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/exiftool"&gt;&lt;img src="https://img.shields.io/badge/exiftool-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author exiftool"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Perl&amp;amp;color=39457E&amp;amp;logo=perl&amp;amp;logoColor=FFFFFF" alt="Written in Perl"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/jbruchon/jdupes" rel="noopener nofollow" target="_blank"&gt;fdupes&lt;/a&gt; - Duplicate file finder&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;jdupes&lt;/code&gt; is used for identifying and/or deleting duplicate files within specified directories. It's useful for freeing up disk space when you've got two or more identical files&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/jhSY2Nn/fdupes.png" alt="fdupes-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jbruchon/jdupes"&gt;&lt;img src="https://img.shields.io/github/stars/jbruchon/jdupes?color=232323&amp;amp;label=jdupes&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View jdupes on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/jbruchon"&gt;&lt;img src="https://img.shields.io/badge/jbruchon-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author jbruchon"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/junegunn/fzf" rel="noopener nofollow" target="_blank"&gt;fzf&lt;/a&gt; - Fuzzy file finder &lt;em&gt;(better &lt;code class="prettyprint"&gt;find&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;fzf&lt;/code&gt; is an extremely powerful, and easy to use fuzzy file finder and filtering tool. It lets you search for a string or pattern across files. fzf also has &lt;a href="https://github.com/junegunn/fzf/wiki/Related-projects" rel="noopener nofollow" target="_blank"&gt;plugins&lt;/a&gt; available for most  shells and IDEs, for showing instant results while searching. This &lt;a href="https://www.freecodecamp.org/news/fzf-a-command-line-fuzzy-finder-missing-demo-a7de312403ff/" rel="noopener nofollow" target="_blank"&gt;post&lt;/a&gt; by Alexey Samoshkin highlights some of it's use cases.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/LNcwjWm/fzf.gif" alt="fzf-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;&lt;img src="https://img.shields.io/github/stars/junegunn/fzf?color=232323&amp;amp;label=fzf&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View fzf on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/junegunn"&gt;&lt;img src="https://img.shields.io/badge/junegunn-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author junegunn"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install fzf

# Arch Linux
sudo pacman -S fzf

# Debian / Ubuntu
sudo apt install fzf
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/sharkdp/hyperfine" rel="noopener nofollow" target="_blank"&gt;hyperfine&lt;/a&gt; - Command benchmarking&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;hyperfine&lt;/code&gt; makes it easy to accurately benchmark and compare arbitrary commands or scripts. It takes care of warm-up runs, clearing the cache for accurate results and preventing interference from other programs. It can also export results as raw data and generate charts.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/tKNR5gr/hyperfine.png" alt="hyperfine-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sharkdp/hyperfine"&gt;&lt;img src="https://img.shields.io/github/stars/sharkdp/hyperfine?color=232323&amp;amp;label=hyperfine&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View hyperfine on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/sharkdp"&gt;&lt;img src="https://img.shields.io/badge/sharkdp-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author sharkdp"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install hyperfine

# Arch Linux
sudo pacman -S hyperfine

# Debian / Ubuntu
sudo apt install hyperfine
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/casey/just" rel="noopener nofollow" target="_blank"&gt;just&lt;/a&gt; - Modern command runner &lt;em&gt;(better &lt;code class="prettyprint"&gt;make&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;just&lt;/code&gt; is similar to &lt;code class="prettyprint"&gt;make&lt;/code&gt; but with some nice additions. It let's you group your projects commands together into recopies, which can be easily listed and run. Supports aliases, positional arguments, different shells, dot env integration, string interprulation, and pretty much everything else you could need&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/casey/just"&gt;&lt;img src="https://img.shields.io/github/stars/casey/just?color=232323&amp;amp;label=just&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View just on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/casey"&gt;&lt;img src="https://img.shields.io/badge/casey-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author casey"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;details&gt;
&lt;summary&gt;Install&lt;/summary&gt;

```bash
# MacOS (via Homebrew)
brew install just

# Arch Linux
sudo pacman -S just

# Debian / Ubuntu
sudo apt install just
```

&lt;/details&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/stedolan/jq" rel="noopener nofollow" target="_blank"&gt;jq&lt;/a&gt; - JSON processor&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;jq&lt;/code&gt; is like &lt;code class="prettyprint"&gt;sed&lt;/code&gt;, but for JSON -  you can use it to slice and filter and map and transform structured data with ease. It can be used to write complex queries to extract or manipulate JSON data. There's also a &lt;a href="https://jqplay.org/" rel="noopener nofollow" target="_blank"&gt;jq playground&lt;/a&gt; that you can use to try it out, or formulate queries with live feedback&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/stedolan/jq"&gt;&lt;img src="https://img.shields.io/github/stars/stedolan/jq?color=232323&amp;amp;label=jq&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View jq on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/stedolan"&gt;&lt;img src="https://img.shields.io/badge/stedolan-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author stedolan"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://www.jedsoft.org/most/" rel="noopener nofollow" target="_blank"&gt;most&lt;/a&gt; - Multi-window scroll pager &lt;em&gt;(better less)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;most&lt;/code&gt; is a pager, for reading through long files or command outputs. &lt;code class="prettyprint"&gt;most&lt;/code&gt; supports multi-windows and has the option to not wrap text &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://www.jedsoft.org/aboutme.html"&gt;&lt;img src="https://img.shields.io/badge/jed-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author Jed"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=S_Lang&amp;amp;color=000000&amp;amp;logo=simkl&amp;amp;logoColor=FFFFFF" alt="Written in S-Lang"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/dalance/procs" rel="noopener nofollow" target="_blank"&gt;procs&lt;/a&gt; - Process viewer &lt;em&gt;(better ps)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;procs&lt;/code&gt; is an easy to navigate process viewer, it has colored highlighting, makes sorting and searching for processes easy, has tree view and updates in real-time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/y6qhgDX/procs-demo.gif" alt="procs-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dalance/procs"&gt;&lt;img src="https://img.shields.io/github/stars/dalance/procs?color=232323&amp;amp;label=procs&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View procs on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/dalance"&gt;&lt;img src="https://img.shields.io/badge/dalance-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author dalance"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/nivekuil/rip" rel="noopener nofollow" target="_blank"&gt;rip&lt;/a&gt; - Deletion tool &lt;em&gt;(better rm)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;rip&lt;/code&gt; is a safe, ergonomic and performant deletion tool. It let's you intuitively remove files and directories, and easily restore deleted files&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/10DTvT2/rip.gif" alt="rip-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nivekuil/rip"&gt;&lt;img src="https://img.shields.io/github/stars/nivekuil/rip?color=232323&amp;amp;label=rip&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View rip on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/nivekuil"&gt;&lt;img src="https://img.shields.io/badge/nivekuil-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author nivekuil"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/BurntSushi/ripgrep" rel="noopener nofollow" target="_blank"&gt;ripgrep&lt;/a&gt; - Search within files &lt;em&gt;(better &lt;code class="prettyprint"&gt;grep&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;ripgrep&lt;/code&gt; is a line-oriented search tool that recursively searches the current directory for a regex pattern. It can ignore the contents of &lt;code class="prettyprint"&gt;.gitignore&lt;/code&gt; and skip binary files. It's able to search within compressed archives, or only search specific extension, and understands files using various encoding methods&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/qkMgQm9/ripgrep.png" alt="ripgrep-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/BurntSushi/ripgrep"&gt;&lt;img src="https://img.shields.io/github/stars/BurntSushi/ripgrep?color=232323&amp;amp;label=ripgrep&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View ripgrep on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/BurntSushi"&gt;&lt;img src="https://img.shields.io/badge/BurntSushi-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author BurntSushi"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://rsync.samba.org/" rel="noopener nofollow" target="_blank"&gt;rsync&lt;/a&gt; -  Fast, incremental file transfer&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;rsync&lt;/code&gt; lets you copy large files locally or to or from remote hosts or external drives. It can be used to keep files across multiple locations synced, and is perfect for creating, updating and restoring backups&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/WayneD/rsync"&gt;&lt;img src="https://img.shields.io/github/stars/WayneD/rsync?color=232323&amp;amp;label=rsync&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View rsync on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/WayneD"&gt;&lt;img src="https://img.shields.io/badge/WayneD-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author WayneD"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/chmln/sd" rel="noopener nofollow" target="_blank"&gt;sd&lt;/a&gt; -  Find and replace &lt;em&gt;(better &lt;code class="prettyprint"&gt;sed&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;sd&lt;/code&gt; is an easy, fast and intuitive find and replace tool, based on string literals. It can be executed on a file, an entire directory, or  any piped text&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/G9CfcGS/sd.png" alt="sd-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/chmln/sd"&gt;&lt;img src="https://img.shields.io/github/stars/chmln/sd?color=232323&amp;amp;label=sd&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View sd on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/chmln"&gt;&lt;img src="https://img.shields.io/badge/chmln-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author chmln"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/dduan/tre" rel="noopener nofollow" target="_blank"&gt;tre&lt;/a&gt; - Directory hierarchy &lt;em&gt;(better &lt;code class="prettyprint"&gt;tree&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;tre&lt;/code&gt; outputs a tree stye list of files for your current or a specified directory, with colors. When running with the &lt;code class="prettyprint"&gt;-e&lt;/code&gt; option, it numbers each item, and creates a temporary alias that you can use to quickly jump to that location&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/CmMrZLB/tre.png" alt="tre-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dduan/tre"&gt;&lt;img src="https://img.shields.io/github/stars/dduan/tre?color=232323&amp;amp;label=tre&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View tre on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/dduan"&gt;&lt;img src="https://img.shields.io/badge/dduan-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author dduan"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/kfish/xsel" rel="noopener nofollow" target="_blank"&gt;xsel&lt;/a&gt; - Access the clipboard&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;xsel&lt;/code&gt; let's you read and write to the X Selection clipboard via the command line. It's useful for piping command output to the clipboard, or a copied data into a command &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/kfish/xsel"&gt;&lt;img src="https://img.shields.io/github/stars/kfish/xsel?color=232323&amp;amp;label=xsel&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View xsel on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/kfish"&gt;&lt;img src="https://img.shields.io/badge/kfish-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author kfish"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h2&gt;CLI Monitoring and Performance Apps&lt;/h2&gt;

&lt;h3&gt;&lt;a href="https://github.com/imsnif/bandwhich" rel="noopener nofollow" target="_blank"&gt;bandwhich&lt;/a&gt; - Bandwidth utilization monitor&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Show bandwidth usage, connection information, outgoing hosts and DNS queries in real-time&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/8jHHBD3/Screenshot-from-2023-01-18-22-45-32.png" alt="bandwhich-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/imsnif/bandwhich"&gt;&lt;img src="https://img.shields.io/github/stars/imsnif/bandwhich?color=232323&amp;amp;label=bandwhich&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View bandwhich on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/imsnif"&gt;&lt;img src="https://img.shields.io/badge/imsnif-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author imsnif"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/bcicen/ctop" rel="noopener nofollow" target="_blank"&gt;ctop&lt;/a&gt; - Container metrics and monitoring&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Like &lt;code class="prettyprint"&gt;top&lt;/code&gt;, but for monitoring resource usage for running (Docker and runC) containers. It shows real-time CPU, memory and network bandwidth as well as the name, status and ID of each container. There's also a built-in log viewer, and options to manage (stop, start, exec, etc) containers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/xGjyzZ2/ctop.gif" alt="ctop-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/bcicen/ctop"&gt;&lt;img src="https://img.shields.io/github/stars/bcicen/ctop?color=232323&amp;amp;label=ctop&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View ctop on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/bcicen"&gt;&lt;img src="https://img.shields.io/badge/bcicen-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author bcicen"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/aristocratos/bpytop" rel="noopener nofollow" target="_blank"&gt;bpytop&lt;/a&gt; - Resource monitoring &lt;em&gt;(better &lt;code class="prettyprint"&gt;htop&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;bpytop&lt;/code&gt; is a fast, interactive, visual resource monitor. It shows top running processes, recent CPU, mem, disk and network history. From the interface you can navigate, sort and search - there's also support for custom color themes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/nj9jrhr/bpytop.gif" alt="bpytop-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/aristocratos/bpytop"&gt;&lt;img src="https://img.shields.io/github/stars/aristocratos/bpytop?color=232323&amp;amp;label=bpytop&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View bpytop on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/aristocratos"&gt;&lt;img src="https://img.shields.io/badge/aristocratos-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author aristocratos"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/nicolargo/glances" rel="noopener nofollow" target="_blank"&gt;glances&lt;/a&gt; - Resource monitor + web and API&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;glances&lt;/code&gt; is another resource monitor, but with a different feature set. It includes a fully responsive web view, a REST API and historical monitoring. It's easily extendable, and can be integrated with other services&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/6g65Qy4/glances.gif" alt="glances-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/nicolargo/glances"&gt;&lt;img src="https://img.shields.io/github/stars/nicolargo/glances?color=232323&amp;amp;label=glances&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View glances on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/nicolargo"&gt;&lt;img src="https://img.shields.io/badge/nicolargo-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author nicolargo"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/orf/gping" rel="noopener nofollow" target="_blank"&gt;gping&lt;/a&gt; - Interactive ping tool &lt;em&gt;(better &lt;code class="prettyprint"&gt;ping&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;gping&lt;/code&gt; can run ping tests on multiple hosts, while showing results in real-time graph. It can also be used to monitor execution time, when used with the &lt;code class="prettyprint"&gt;--cmd&lt;/code&gt; flag&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/CvG6xt0/gping.gif" alt="gping-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/orf/gping"&gt;&lt;img src="https://img.shields.io/github/stars/orf/gping?color=232323&amp;amp;label=gping&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View gping on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/orf"&gt;&lt;img src="https://img.shields.io/badge/orf-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author orf"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/Byron/dua-cli" rel="noopener nofollow" target="_blank"&gt;dua-cli&lt;/a&gt; - Disk usage analyzer and monitor &lt;em&gt;(better &lt;code class="prettyprint"&gt;du&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;dua-cli&lt;/code&gt; let's you interactively view used and available disk space for each mounted drive, and makes freeing up storage easy&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/x3NbDLR/dua.gif" alt="dua-cli-usage-example"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Byron/dua-cli"&gt;&lt;img src="https://img.shields.io/github/stars/Byron/dua-cli?color=232323&amp;amp;label=dua-cli&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View dua-cli on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/Byron"&gt;&lt;img src="https://img.shields.io/badge/Byron-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author Byron"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/sivel/speedtest-cli" rel="noopener nofollow" target="_blank"&gt;speedtest-cli&lt;/a&gt; - Command line speed test utility&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;speedtest-cli&lt;/code&gt; just runs an internet speed test, via speedtest.net - but straight from the terminal :)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/25QCbdF/speedtest-cli.gif" alt="speedtest-cli-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/sivel/speedtest-cli"&gt;&lt;img src="https://img.shields.io/github/stars/sivel/speedtest-cli?color=232323&amp;amp;label=speedtest-cli&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View speedtest-cli on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/sivel"&gt;&lt;img src="https://img.shields.io/badge/sivel-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author sivel"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/ogham/dog" rel="noopener nofollow" target="_blank"&gt;dog&lt;/a&gt;  - DNS lookup client &lt;em&gt;(better &lt;code class="prettyprint"&gt;dig&lt;/code&gt;)&lt;/em&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;dog&lt;/code&gt; is an easy-to-use DNS lookup client, with support for DoT and DoH, nicely coloured outputs and the option to emit JSON&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/48n617Q/dog.png" alt="dog-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/ogham/dog"&gt;&lt;img src="https://img.shields.io/github/stars/ogham/dog?color=232323&amp;amp;label=dog&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View dog on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/ogham"&gt;&lt;img src="https://img.shields.io/badge/ogham-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author ogham"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h2&gt;CLI Productivity Apps&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Surf the web, play music, check emails, manage calendars, read the news and more, all without leaving the terminal!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;&lt;a href="https://github.com/browsh-org/browsh" rel="noopener nofollow" target="_blank"&gt;browsh&lt;/a&gt; - CLI web browser&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;browsh&lt;/code&gt; is a fully interactive, real-time, and modern text-based browser rendered to TTYs and browsers. It supports both mouse and keyboard navigation, and is surprisingly feature rich for a purely terminal based application. It also mitigates battery drain issues that plague modern browsers, and with support for MoSH, you can experience faster load times due to reduced bandwidth&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/S7nLFX5/browsh.gif" alt="browsh-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/browsh-org/browsh"&gt;&lt;img src="https://img.shields.io/github/stars/browsh-org/browsh?color=232323&amp;amp;label=browsh&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View browsh on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/browsh-org"&gt;&lt;img src="https://img.shields.io/badge/browsh-org-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author browsh-org"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=JavaScript&amp;amp;color=F7DF1E&amp;amp;logo=javascript&amp;amp;logoColor=FFFFFF" alt="Written in JavaScript"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/jarun/buku" rel="noopener nofollow" target="_blank"&gt;buku&lt;/a&gt; - Bookmark manager&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;buku&lt;/code&gt; is a terminal-based bookmark manager, with tons of configuration, storage and usage options. There's also an optional &lt;a href="https://github.com/jarun/buku/tree/master/bukuserver#screenshots" rel="noopener nofollow" target="_blank"&gt;web UI&lt;/a&gt; and &lt;a href="https://github.com/samhh/bukubrow-webext#installation" rel="noopener nofollow" target="_blank"&gt;browser plugin&lt;/a&gt;, for accessing your bookmarks outside of the terminal&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/CWQsf1x/buku.png" alt="buku-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jarun/buku"&gt;&lt;img src="https://img.shields.io/github/stars/jarun/buku?color=232323&amp;amp;label=buku&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View buku on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/jarun"&gt;&lt;img src="https://img.shields.io/badge/jarun-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author jarun"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/cmus/cmus" rel="noopener nofollow" target="_blank"&gt;cmus&lt;/a&gt; - Music browser / player&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;cmus&lt;/code&gt; is terminal music player, controlled with keyboard shortcuts. It has support for a wide range of audio formats and codecs, and allows organising tracks into playlists and applying playback settings&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/dP6b3bd/cmus.png" alt="cmus-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cmus/cmus"&gt;&lt;img src="https://img.shields.io/github/stars/cmus/cmus?color=232323&amp;amp;label=cmus&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View cmus on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/cmus"&gt;&lt;img src="https://img.shields.io/badge/cmus-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author cmus"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/cointop-sh/cointop" rel="noopener nofollow" target="_blank"&gt;cointop&lt;/a&gt; - Track crypto prices&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;cointop&lt;/code&gt; show current crypto prices, and track the price history of your portfolio. Supports price alerts, historical charts, currency conversion, fuzzy searching, and much more. You can try the demo via the web at &lt;a href="https://cointop.sh/" rel="noopener nofollow" target="_blank"&gt;cointop.sh&lt;/a&gt;, or by running &lt;code class="prettyprint"&gt;ssh cointop.sh&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/JBf9y4y/cointop.png" alt="cointop-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cointop-sh/cointop"&gt;&lt;img src="https://img.shields.io/github/stars/cointop-sh/cointop?color=232323&amp;amp;label=cointop&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View cointop on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/cointop-sh"&gt;&lt;img src="https://img.shields.io/badge/cointop-sh-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author cointop-sh"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/jarun/ddgr" rel="noopener nofollow" target="_blank"&gt;ddgr&lt;/a&gt; - Search the web from the terminal&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;ddgr&lt;/code&gt; is like &lt;a href="https://github.com/jarun/googler" rel="noopener nofollow" target="_blank"&gt;googler&lt;/a&gt;, but for DuckDuckGo. It's fast, clean and easy, with support for instant answers, search completion, search bangs, and advanced search. It respects your privacy by default, and also has HTTPS proxy support, and works with Tor&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/S0H21QH/dggr.png" alt="dggr-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jarun/ddgr"&gt;&lt;img src="https://img.shields.io/github/stars/jarun/ddgr?color=232323&amp;amp;label=ddgr&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View ddgr on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/jarun"&gt;&lt;img src="https://img.shields.io/badge/jarun-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author jarun"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/pimutils/khal" rel="noopener nofollow" target="_blank"&gt;khal&lt;/a&gt; - Calendar client&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;khal&lt;/code&gt; is a terminal calendar app, which shows upcoming events, month and agenda views. You can sync it with any CalDAV calendar, and add, edit and remove events directly&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/hLCdjZW/khal.png" alt="khal-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/pimutils/khal"&gt;&lt;img src="https://img.shields.io/github/stars/pimutils/khal?color=232323&amp;amp;label=khal&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View khal on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/pimutils"&gt;&lt;img src="https://img.shields.io/badge/pimutils-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author pimutils"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://gitlab.com/muttmua/mutt" rel="noopener nofollow" target="_blank"&gt;mutt&lt;/a&gt; - Email client&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;mut&lt;/code&gt; is a classic, a terminal based mail client for sending, reading and managing emails. It supports all mainstream email protocols and mailbox formats, allows for attachments, BCC/CC, threads, mailing lists and delivery status notifications&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/zVVsG3s/mutt.webp" alt="mutt-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gitlab.com/muttmua/mutt"&gt;&lt;img src="https://img.shields.io/github/stars/muttmua/mutt?color=232323&amp;amp;label=mutt&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View mutt on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/muttmua"&gt;&lt;img src="https://img.shields.io/badge/muttmua-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author muttmua"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/newsboat/newsboat" rel="noopener nofollow" target="_blank"&gt;newsboat&lt;/a&gt; - RSS / ATOM news reader&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;newsboat&lt;/code&gt; is an RSS feed reader and aggregator, for reading the news, blogs and following updates directly from the terminal&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fvT4YzD/newsboat.png" alt="newsboat-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/newsboat/newsboat"&gt;&lt;img src="https://img.shields.io/github/stars/newsboat/newsboat?color=232323&amp;amp;label=newsboat&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View newsboat on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/newsboat"&gt;&lt;img src="https://img.shields.io/badge/newsboat-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author newsboat"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C++&amp;amp;color=00599C&amp;amp;logo=cplusplus&amp;amp;logoColor=FFFFFF" alt="Written in C++"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/rclone/rclone" rel="noopener nofollow" target="_blank"&gt;rclone&lt;/a&gt; - Manage cloud storage&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;rclone&lt;/code&gt; is a handy utility for syncing files and folders to various cloud storage providers. It can be either invoked directly from the command line, or easily integrated into a script as a replacement for heavy desktop sync apps&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/rclone/rclone"&gt;&lt;img src="https://img.shields.io/github/stars/rclone/rclone?color=232323&amp;amp;label=rclone&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View rclone on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/rclone"&gt;&lt;img src="https://img.shields.io/badge/rclone-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author rclone"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/GothenburgBitFactory/taskwarrior" rel="noopener nofollow" target="_blank"&gt;taskwarrior&lt;/a&gt; - Todo + task management&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;task&lt;/code&gt; is a CLI task management/ todo app. It's both simple and unobtrusive, but also incredibly powerful and scalable, with advanced organisation and query features built in. There's also a lot (700+!) of extra &lt;a href="https://taskwarrior.org/tools/" rel="noopener nofollow" target="_blank"&gt;plugins&lt;/a&gt; for extending it's functionality and integrating with third-party services&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/7k6M37g/taskwarrior.jpg" alt="task-warrior-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/GothenburgBitFactory/taskwarrior"&gt;&lt;img src="https://img.shields.io/github/stars/GothenburgBitFactory/taskwarrior?color=232323&amp;amp;label=taskwarrior&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View taskwarrior on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/GothenburgBitFactory"&gt;&lt;img src="https://img.shields.io/badge/GothenburgBitFactory-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author GothenburgBitFactory"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C++&amp;amp;color=00599C&amp;amp;logo=cplusplus&amp;amp;logoColor=FFFFFF" alt="Written in C++"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://gitlab.com/ajak/tuir" rel="noopener nofollow" target="_blank"&gt;tuir&lt;/a&gt; - Terminal UI for Reddit&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;tuir&lt;/code&gt; is a great one if you want to look like you're working, while actually browsing Reddit! It's got intuitive keybindings, custom themes, and can render images and multi-media content too. There's also &lt;a href="https://github.com/donnemartin/haxor-news" rel="noopener nofollow" target="_blank"&gt;haxor&lt;/a&gt; for hacker news&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/vzSw7s5/tuir.png" alt="tuir-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://gitlab.com/ajak/tuir"&gt;&lt;img src="https://img.shields.io/gitlab/stars/ajak/tuir?color=fc6d26&amp;amp;label=tuir&amp;amp;logo=gitlab&amp;amp;labelColor=232323" alt="View tuir on GitLab"&gt;&lt;/a&gt;&lt;a href="https://github.com/ajak"&gt;&lt;img src="https://img.shields.io/badge/ajak-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author ajak"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h2&gt;CLI Dev Suits&lt;/h2&gt;

&lt;h3&gt;&lt;a href="https://github.com/httpie/httpie" rel="noopener nofollow" target="_blank"&gt;httpie&lt;/a&gt; - HTTP / API testing testing client&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;httpie&lt;/code&gt; is a HTTP client, for testing, debugging and using APIs. It supports everything you'd expect - HTTPS, proxies, authentication, custom headers, persistent sessions, JSON parsing. Usage is simple with an expressive syntax and colourized output. Like other HTTP clients (Postman, Hopscotch, Insomnia, etc) HTTPie also includes a web UI&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Wk5S19g/httpie.png" alt="httpie-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/httpie/httpie"&gt;&lt;img src="https://img.shields.io/github/stars/httpie/httpie?color=232323&amp;amp;label=httpie&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View httpie on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/httpie"&gt;&lt;img src="https://img.shields.io/badge/httpie-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author httpie"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/jesseduffield/lazydocker" rel="noopener nofollow" target="_blank"&gt;lazydocker&lt;/a&gt; - Full Docker management app&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;lazydocker&lt;/code&gt; is a Docker management app, that lets you view all containers and images, manage their state, read logs, check resource usage, restart/ rebuild, analyse layers, prune unused containers, images and volumes, and so much more. It saves you from needing remember, type and chain multiple Docker commands.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/MD8MWNH/lazydocker.png" alt="lazy-docker-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://img.shields.io/github/stars/jesseduffield/lazydocker?color=232323&amp;amp;label=lazydocker&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View lazydocker on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/jesseduffield"&gt;&lt;img src="https://img.shields.io/badge/jesseduffield-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author jesseduffield"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/jesseduffield/lazygit" rel="noopener nofollow" target="_blank"&gt;lazygit&lt;/a&gt; - Full Git management app&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;lazygit&lt;/code&gt; is a visual git client, on the command line. Easily add, commit and puch files, resolve conflicts, compare diffs, manage logs, and do complex operations like squashes and rewinds. There's keybindings for everything, colors, and it's easily configurable and extenable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/KLF3C6s/lazygit.png" alt="lazy-git-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/jesseduffield/lazygit"&gt;&lt;img src="https://img.shields.io/github/stars/jesseduffield/lazygit?color=232323&amp;amp;label=lazygit&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View lazygit on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/jesseduffield"&gt;&lt;img src="https://img.shields.io/badge/jesseduffield-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author jesseduffield"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/kdash-rs/kdash/" rel="noopener nofollow" target="_blank"&gt;kdash&lt;/a&gt; - Kubernetes dashboard app&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;kdash&lt;/code&gt; is an all-in-one Kubernetes management tool. View node metrics, watch resources, stream container logs, analyse contexts and manage nodes, pods and namespaces&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/kdash-rs/kdash/"&gt;&lt;img src="https://img.shields.io/github/stars/kdash-rs/kdash?color=232323&amp;amp;label=kdash&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View kdash on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/kdash-rs"&gt;&lt;img src="https://img.shields.io/badge/kdash-rs-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author kdash-rs"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/cyrus-and/gdb-dashboard" rel="noopener nofollow" target="_blank"&gt;gdp-dashboard&lt;/a&gt; - Visual GDP debugger&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;gdp-dashboard&lt;/code&gt; adds a visual element to the GNU Debugger, for debugging C and C++ programs. Easily analyse memory, step through breakpoints, and view registers&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/2g2hVLh/gdp-dashboard.png" alt="gdp-dashboard-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cyrus-and/gdb-dashboard"&gt;&lt;img src="https://img.shields.io/github/stars/cyrus-and/gdb-dashboard?color=232323&amp;amp;label=gdb-dashboard&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View gdb-dashboard on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/cyrus-and"&gt;&lt;img src="https://img.shields.io/badge/cyrus-and-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author cyrus-and"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h2&gt;CLI External Sercvices&lt;/h2&gt;

&lt;h3&gt;&lt;a href="https://ngrok.com/" rel="noopener nofollow" target="_blank"&gt;ngrok&lt;/a&gt; - Reverse proxy for sharing localhost&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;ngrok&lt;/code&gt; safely* exposes your localhost to the internet behind a unique URL. This lets you share what you're working on with you're remote colleagues, in real-time. Usage is &lt;a href="https://notes.aliciasykes.com/p/RUi22QSyWe"&gt;very simple&lt;/a&gt;, but it's also got a lot of advanced features for things like authentication, webhooks, firewalls, traffic inspection, custom/ wildcard domains and much more&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/4WPZNGx/ngrok.png" alt="ngrok-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/inconshreveable/ngrok"&gt;&lt;img src="https://img.shields.io/github/stars/inconshreveable/ngrok?color=232323&amp;amp;label=ngrok&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View ngrok on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/inconshreveable"&gt;&lt;img src="https://img.shields.io/badge/inconshreveable-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author inconshreveable"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://tmate.io/" rel="noopener nofollow" target="_blank"&gt;tmate&lt;/a&gt; - Share a terminal session via internet&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;tmate&lt;/code&gt; let's you instantly share a live terminal session with someone elsewhere in the world. It works across different systems, supports access control/ auth, can be self-hosted, and has all the features of Tmux&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://github.com/tmate-io/tmate"&gt;&lt;img src="https://img.shields.io/github/stars/tmate-io/tmate?color=232323&amp;amp;label=tmate&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View tmate on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/tmate-io"&gt;&lt;img src="https://img.shields.io/badge/tmate-io-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author tmate-io"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://asciinema.org/" rel="noopener nofollow" target="_blank"&gt;asciinema&lt;/a&gt; - Recording + sharing terminal sessions&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;asciinema&lt;/code&gt; is very useful for easily recording, sharing and embedding a terminal session. Great to showcase something you've built, or to show the command-line steps for a tutorial. Unlike screenrecording videos, the user can copy-paste the content, change the theme on the fly and control playback&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;{% embed &lt;a href="https://asciinema.org/a/335480?speed=3" rel="noopener nofollow" target="_blank"&gt;https://asciinema.org/a/335480?speed=3&lt;/a&gt; %}&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/asciinema/asciinema"&gt;&lt;img src="https://img.shields.io/github/stars/asciinema/asciinema?color=232323&amp;amp;label=asciinema&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View asciinema on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/asciinema"&gt;&lt;img src="https://img.shields.io/badge/asciinema-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author asciinema"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/denisidoro/navi" rel="noopener nofollow" target="_blank"&gt;navi&lt;/a&gt; - Interactive cheat sheet&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;navi&lt;/code&gt; allows you to browse through cheatsheets and execute commands. Suggested values for arguments are dynamically displayed in a list. Type less, reduce mistakes and save yourself from having to memorise thousands of commands. It integrates with &lt;a href="https://github.com/tldr-pages/tldr" rel="noopener nofollow" target="_blank"&gt;tldr&lt;/a&gt; and &lt;a href="https://github.com/chubin/cheat.sh" rel="noopener nofollow" target="_blank"&gt;cheat.sh&lt;/a&gt; to get content, but you can also import other cheatsheets, or even write your own&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;{% embed &lt;a href="https://asciinema.org/a/406461?speed=2" rel="noopener nofollow" target="_blank"&gt;https://asciinema.org/a/406461?speed=2&lt;/a&gt; %}&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/denisidoro/navi"&gt;&lt;img src="https://img.shields.io/github/stars/denisidoro/navi?color=232323&amp;amp;label=navi&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View navi on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/denisidoro"&gt;&lt;img src="https://img.shields.io/badge/denisidoro-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author denisidoro"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Rust&amp;amp;color=e86243&amp;amp;logo=rust&amp;amp;logoColor=FFFFFF" alt="Written in Rust"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/dutchcoders/transfer.sh/" rel="noopener nofollow" target="_blank"&gt;transfer.sh&lt;/a&gt; - Fast file sharing&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;transfer&lt;/code&gt; makes uploading and sharing files really easy, directly from the command line. It's free, supports encryption, gives you a unique URL, and can also be self-hosted.&lt;br&gt;
I've written a Bash helper function to make usage a bit easier, you can &lt;a href="https://github.com/Lissy93/dotfiles/blob/master/utils/transfer.sh" rel="noopener nofollow" target="_blank"&gt;find it here&lt;/a&gt; or try it out by running &lt;code class="prettyprint"&gt;bash &amp;lt;(curl -L -s https://alicia.url.lol/transfer)&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/cCqDb1k/transfer-sh.png" alt="transfer-sh-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dutchcoders/transfer.sh"&gt;&lt;img src="https://img.shields.io/github/stars/dutchcoders/transfer.sh?color=232323&amp;amp;label=transfer.sh&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View transfer.sh on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/dutchcoders"&gt;&lt;img src="https://img.shields.io/badge/dutchcoders-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author dutchcoders"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Go%20Lang&amp;amp;color=00ADD8&amp;amp;logo=go&amp;amp;logoColor=FFFFFF" alt="Written in Go"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://surge.sh/" rel="noopener nofollow" target="_blank"&gt;surge&lt;/a&gt; - Deploy a site in seconds&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;surge&lt;/code&gt; is a free static hosting provider, that you can deploy to directly from the terminal in a single command, just run &lt;code class="prettyprint"&gt;surge&lt;/code&gt; from within your &lt;code class="prettyprint"&gt;dist&lt;/code&gt; directory! It supports custom domains, auto SSL certs, pushState support, cross-origin resource support - and it's free!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/NynprxZ/surge-sh.png" alt="surge-sh-example-usage"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/chubin/wttr.in" rel="noopener nofollow" target="_blank"&gt;wttr.in&lt;/a&gt; - Check the weather&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;wttr.in&lt;/code&gt; is a service that displays the weather in a format that's digestible in the command line. Just run &lt;code class="prettyprint"&gt;curl wttr.in&lt;/code&gt; or &lt;code class="prettyprint"&gt;curl wttr.in/London&lt;/code&gt; to try it out. There's URL parameters to customise what data is returned, as well as the format&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/J2JWnYT/Screenshot-from-2023-01-18-21-10-54.png" alt="wrrt-in-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/chubin/wttr.in"&gt;&lt;img src="https://img.shields.io/github/stars/chubin/wttr.in?color=232323&amp;amp;label=wttr.in&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View wttr.in on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/chubin"&gt;&lt;img src="https://img.shields.io/badge/chubin-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author chubin"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Python&amp;amp;color=3C78A9&amp;amp;logo=python&amp;amp;logoColor=FFFFFF" alt="Written in Python"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h2&gt;CLI Fun&lt;/h2&gt;

&lt;h3&gt;&lt;a href="https://en.wikipedia.org/wiki/Cowsay" rel="noopener nofollow" target="_blank"&gt;cowsay&lt;/a&gt; - Have an ASCII cow say your message&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;cowsay&lt;/code&gt;  is a configurable talking cow. It's based off the &lt;a href="https://github.com/tnalpgge/rank-amateur-cowsay" rel="noopener nofollow" target="_blank"&gt;original&lt;/a&gt; by Tony Monroe&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/TRqW3jD/cowsay.png" alt="cowsay-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/piuccio/cowsay"&gt;&lt;img src="https://img.shields.io/github/stars/piuccio/cowsay?color=232323&amp;amp;label=cowsay&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View cowsay on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/piuccio"&gt;&lt;img src="https://img.shields.io/badge/piuccio-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author piuccio"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=JavaScript&amp;amp;color=F7DF1E&amp;amp;logo=javascript&amp;amp;logoColor=FFFFFF" alt="Written in JavaScript"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="http://www.figlet.org/" rel="noopener nofollow" target="_blank"&gt;figlet&lt;/a&gt; - Output text as big ASCII art text&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;figlet&lt;/code&gt; outputs text as ASCII art&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fk4T7D0/figlet.png" alt="figlet-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/cmatsuoka/figlet"&gt;&lt;img src="https://img.shields.io/github/stars/cmatsuoka/figlet?color=232323&amp;amp;label=figlet&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View figlet on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/cmatsuoka"&gt;&lt;img src="https://img.shields.io/badge/cmatsuoka-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author cmatsuoka"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=C&amp;amp;color=A8B9CC&amp;amp;logo=c&amp;amp;logoColor=FFFFFF" alt="Written in C"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/busyloop/lolcat" rel="noopener nofollow" target="_blank"&gt;lolcat&lt;/a&gt; - Make console output raibow colored&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;lolcat&lt;/code&gt; makes any text passed to it rainbow coloured&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/nfp9Ycx/lolcat.png" alt="lolcat-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/busyloop/lolcat"&gt;&lt;img src="https://img.shields.io/github/stars/busyloop/lolcat?color=232323&amp;amp;label=lolcat&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View lolcat on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/busyloop"&gt;&lt;img src="https://img.shields.io/badge/busyloop-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author busyloop"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Ruby&amp;amp;color=CC342D&amp;amp;logo=ruby&amp;amp;logoColor=FFFFFF" alt="Written in Ruby"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;&lt;a href="https://github.com/dylanaraps/neofetch" rel="noopener nofollow" target="_blank"&gt;neofetch&lt;/a&gt; - Show system data and ditstro info&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;code class="prettyprint"&gt;neofetch&lt;/code&gt; prints distro and system info (so you can flex that you use Arch btw on r/unixporn)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/x1PHpFC/Screenshot-from-2023-01-18-22-44-28.png" alt="neofetch-example-usage"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/dylanaraps/neofetch"&gt;&lt;img src="https://img.shields.io/github/stars/dylanaraps/neofetch?color=232323&amp;amp;label=neofetch&amp;amp;logo=github&amp;amp;labelColor=232323" alt="View neofetch on GitHub"&gt;&lt;/a&gt;&lt;a href="https://github.com/dylanaraps"&gt;&lt;img src="https://img.shields.io/badge/dylanaraps-b820f9?labelColor=b820f9&amp;amp;logo=githubsponsors&amp;amp;logoColor=fff" alt="Author dylanaraps"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=Bash&amp;amp;color=green&amp;amp;logo=gnubash&amp;amp;logoColor=FFFFFF" alt="Written in Bash"&gt;&lt;/p&gt;

&lt;p&gt;As an example, I'm using &lt;code class="prettyprint"&gt;cowsay&lt;/code&gt;, &lt;code class="prettyprint"&gt;figlet&lt;/code&gt;, &lt;code class="prettyprint"&gt;lolcat&lt;/code&gt; and &lt;code class="prettyprint"&gt;neofetch&lt;/code&gt; to create a custom time-based MOTD shown to the user when they first log in. It greets them by their name, shows server info and time, date, weather and IP. &lt;a href="https://github.com/Lissy93/dotfiles/blob/master/utils/welcome-banner.sh" rel="noopener nofollow" target="_blank"&gt;Here's the source code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/cTg0jyn/Screenshot-from-2023-01-18-22-59-28.png" alt="welcome"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;hr&gt;

&lt;h2&gt;Installations and Management&lt;/h2&gt;

&lt;p&gt;Most of us have a core set of CLI apps and utils that we rely upon. Setting up a new machine, and individually installing each program would get tiresome very quickly. So the task of installing and updating your terminal apps is the perfect candidate for automation. &lt;a href="https://github.com/Lissy93/dotfiles/tree/master/scripts/installs" rel="noopener nofollow" target="_blank"&gt;Here&lt;/a&gt; are some example scripts I've written, which can be easily dropped into your dotfiles or just run independently to ensure you're never missing an app. &lt;/p&gt;

&lt;p&gt;For MacOS users, the easiest method is using &lt;a href="https://brew.sh/" rel="noopener nofollow" target="_blank"&gt;Homebrew&lt;/a&gt;. Just create a Brewfile (with &lt;code class="prettyprint"&gt;touch ~/.Brewfile&lt;/code&gt;), then list each of your apps, and run &lt;code class="prettyprint"&gt;brew bundle&lt;/code&gt;. You can keep your package list backed up, by putting it in a Git repo. Here's an example one, to get you started: &lt;a href="https://github.com/Lissy93/Brewfile" rel="noopener nofollow" target="_blank"&gt;https://github.com/Lissy93/Brewfile&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On Linux, you usually want to use the native package manager (e.g. &lt;code class="prettyprint"&gt;pacman&lt;/code&gt;, &lt;code class="prettyprint"&gt;apt&lt;/code&gt;). As an example, &lt;a href="https://github.com/Lissy93/dotfiles/blob/master/scripts/installs/arch-pacman.sh" rel="noopener nofollow" target="_blank"&gt;here's a script&lt;/a&gt; to install the above apps on Arch Linux systems&lt;/p&gt;

&lt;p&gt;Desktop apps on Linux can be managed in a similar way, via Flatpak. Again, &lt;a href="https://github.com/Lissy93/dotfiles/blob/master/scripts/installs/flatpak.sh" rel="noopener nofollow" target="_blank"&gt;here's an example script&lt;/a&gt; :)&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;... So that's it - a list of handy CLI apps, and a method for installing and keeping them up-to-date across your systems.&lt;/p&gt;

&lt;p&gt;Hopefully some of these will be useful to some of you :)&lt;/p&gt;

&lt;h4&gt;What wasn't included&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;This list doesn't include the basics, like Vim, Tmux, Ranger, ZSH, Git, etc - which you're likely already using&lt;/li&gt;
&lt;li&gt;I've also not included anything too niche, or only specific to a small number of users&lt;/li&gt;
&lt;li&gt;Nothing system-specific, or that isn't cross-platform (Linux/ Unix, MacOS) is included&lt;/li&gt;
&lt;li&gt;And I've not included apps which relate to the terminal, but are not CLI apps (like terminal emulators)&lt;/li&gt;
&lt;li&gt;For most of the projects listed, there's a plethora of alternatives that achieve similar things, for brevity those also weren't included&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Credit&lt;/h4&gt;

&lt;p&gt;Huge kudos to the authors, and communities behind each of these apps. Without them and their hard work, our life in the command line would be much less awesome. Where possible, I've tried to credit the authors, but if I've missed any - let me know below, and I'll push an update&lt;/p&gt;

&lt;h4&gt;Find More&lt;/h4&gt;

&lt;p&gt;If you were enjoying this, I recommend also checking out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/k4m4/terminals-are-sexy" rel="noopener nofollow" target="_blank"&gt;terminals-are-sexy&lt;/a&gt;&lt;/strong&gt; by  Nikolaos Kamarinakis&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/alebcay/awesome-shell" rel="noopener nofollow" target="_blank"&gt;awesome-shell&lt;/a&gt;&lt;/strong&gt; by Caleb Xu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/agarrharr/awesome-cli-apps" rel="noopener nofollow" target="_blank"&gt;awesome-cli-apps&lt;/a&gt;&lt;/strong&gt; by Adam Garrett-Harris&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're new to the command line, then &lt;strong&gt;&lt;a href="https://github.com/jlevy/the-art-of-command-line" rel="noopener nofollow" target="_blank"&gt;The Art of Command Line&lt;/a&gt;&lt;/strong&gt; by  Joshua Levy is an excellent resource, as is the &lt;strong&gt;&lt;a href="https://github.com/Idnan/bash-guide" rel="noopener nofollow" target="_blank"&gt;Bash Guide&lt;/a&gt;&lt;/strong&gt; by  Adnan Ahmed.&lt;/p&gt;

&lt;p&gt;And if you are looking for inspiration, you'll love &lt;strong&gt;&lt;a href="https://www.reddit.com/r/unixporn/" rel="noopener nofollow" target="_blank"&gt;r/unixporn&lt;/a&gt;&lt;/strong&gt; ‚ö°&lt;/p&gt;

&lt;table&gt;&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;small&gt;If you like this kind of stuff&lt;/small&gt;,&lt;br&gt;&lt;small&gt;consider following for more :)&lt;/small&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href="https://github.com/Lissy93"&gt;&lt;img src="https://img.shields.io/badge/-Lissy93-3a3a3a?style=flat&amp;amp;logo=GitHub&amp;amp;logoColor=white" alt="Follow Lissy93 on GitHub"&gt;&lt;/a&gt;&lt;a href="https://twitter.com/Lissy_Sykes"&gt;&lt;img src="https://img.shields.io/badge/-@Lissy_Sykes-00acee?style=flat&amp;amp;logo=Twitter&amp;amp;logoColor=white" alt="Follow Lissy_Sykes on Twitter"&gt;&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;&lt;tbody&gt;
&lt;/tbody&gt;&lt;/table&gt;

&lt;style&gt;
.post-body.p1 img,
.post-body.p1 small,
.post-body.p1 blockquote {
    max-width: 600px !important;
    margin: 0.25rem auto;
    border-radius: 5px;
}

.post-body.p1 blockquote {
    margin: 1rem auto;
}
.post-body.p1 img {
    box-shadow: 1px 2px 4px 2px #090909cf;
}
.post-body.p1 h2 {
    font-size: 1.8rem !important;
    max-width: 800px;
    margin: 1rem auto 0.25rem auto;
    text-align: center;
}
.post-body.p1 h3 {
    font-size: 1.5rem !important;
    border-top: 3px solid var(--post-code-border-color);
    padding: 1rem 0 0;
    max-width: 600px;
    margin: 1rem auto;
}
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>20 Git Commands you (probably) didn't know üßô‚Äç‚ôÇÔ∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 17 Dec 2022 20:46:47 +0000</pubDate>
      <link>https://notes.aliciasykes.com/41171/20-git-commands-you-probably-didn-t-know</link>
      <guid>https://notes.aliciasykes.com/41171/20-git-commands-you-probably-didn-t-know</guid>
      <description>&lt;p&gt;&lt;p&gt;A collection of 20 under-used git command to upgrade your development experience.&lt;/p&gt;

&lt;p&gt;If you've ever browsed the &lt;a href="https://git-scm.com/docs" rel="noopener nofollow" target="_blank"&gt;git manual&lt;/a&gt; (or run &lt;code class="prettyprint"&gt;man git&lt;/code&gt;), then you'll have noticed there's a whole lot more to git than what most of us use on a daily basis. A lot of these commands are incredibly powerful and can make your life a lot easier (others are a bit niche, but still good to know).&lt;br&gt;
This post outlines 20 of my favourite under-used git features, which you can use to level up your development process, impress your colleagues, help you answer git interview questions, and most importantly - have fun with!&lt;/p&gt;

&lt;h3&gt;Contents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Web&lt;/a&gt; - &lt;em&gt;Open builtin GUI&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Notes&lt;/a&gt; - &lt;em&gt;Attach extra info to commits&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Bisect&lt;/a&gt; - &lt;em&gt;Debug like a pro&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Grep&lt;/a&gt; - &lt;em&gt;Search for anything&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Archive&lt;/a&gt; - &lt;em&gt;Compress project for sharing&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Submodules&lt;/a&gt; - &lt;em&gt;Import other repos into yours&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Bugreport&lt;/a&gt; - &lt;em&gt;Compile bug report with system info&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Fsck&lt;/a&gt; - &lt;em&gt;Verify and recover unreachable objects&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Stripspace&lt;/a&gt; - &lt;em&gt;Remove trailing whitespaces&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Diff&lt;/a&gt; - &lt;em&gt;Compare changes between two files&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Hooks&lt;/a&gt; - &lt;em&gt;Execute script when a git command is run&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Blame&lt;/a&gt; - &lt;em&gt;Show who wrote a given line&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Large File Storage&lt;/a&gt; - &lt;em&gt;Store big files in git&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Garbage Collection&lt;/a&gt; - &lt;em&gt;Optimize your git repo&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Show&lt;/a&gt; - &lt;em&gt;Easily inspect any git object&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Describe&lt;/a&gt; - &lt;em&gt;Give readable name based on last tag&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Tag&lt;/a&gt; - &lt;em&gt;Create version tags at specific points&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Reflog&lt;/a&gt; - &lt;em&gt;List all git actions made on a repo&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Log&lt;/a&gt; - &lt;em&gt;View commit log, and branch diagrams&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;Git Cherry Pick&lt;/a&gt; - &lt;em&gt;Pull a feature or fix into your branch&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Git Web&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Run &lt;a href="https://git-scm.com/docs/git-instaweb" rel="noopener nofollow" target="_blank"&gt;git instaweb&lt;/a&gt; to instantly browse your working repository in gitweb&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Git has a built-in &lt;a href="https://git-scm.com/docs/gitweb" rel="noopener nofollow" target="_blank"&gt;web-based visualiser&lt;/a&gt; for browsing local repositories, which lets you view and manage your repo via a GUI in the browser. It's packed with useful features, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Browsing and stepping through revisions and inspecting diffs, file contents and metadata&lt;/li&gt;
&lt;li&gt;Viewing commit logs, branches, directories, file history, and attached data visually&lt;/li&gt;
&lt;li&gt;Generating RSS or Atom feeds of commits and repository activity logs&lt;/li&gt;
&lt;li&gt;Searching commits, files, changes and diffs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To open it, just run &lt;code class="prettyprint"&gt;git instaweb&lt;/code&gt; from within your repo. Your browser should pop open, and load &lt;code class="prettyprint"&gt;http://localhost:1234&lt;/code&gt;. If you don't have Lighttpd installed, you can specify an alternative web server with the &lt;code class="prettyprint"&gt;-d&lt;/code&gt; flag. Other options can be configured either via flags (like &lt;code class="prettyprint"&gt;-p&lt;/code&gt; for port, &lt;code class="prettyprint"&gt;-b&lt;/code&gt; for the browser to open, etc), or under the &lt;code class="prettyprint"&gt;[instaweb]&lt;/code&gt; block in your git config.&lt;/p&gt;

&lt;p&gt;There's also the &lt;code class="prettyprint"&gt;git gui&lt;/code&gt; command, which can open up a GUI-based git app&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/0DrmcWG/Screenshot-from-2022-12-17-20-26-30.png" alt="Screenshot of Git GUI" width="400"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Notes&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-notes" rel="noopener nofollow" target="_blank"&gt;git notes&lt;/a&gt; to add extra info to commits&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes you need to attach additional data to a git commit (beyond just the changes, message, date-time and author info).&lt;/p&gt;

&lt;p&gt;The notes are stored within &lt;code class="prettyprint"&gt;.git/refs/notes&lt;/code&gt;, and since that's separate from the commit object data, you can modify the notes associated with a commit at anytime, without the SHA-1 hash changing.&lt;/p&gt;

&lt;p&gt;You can view notes with &lt;code class="prettyprint"&gt;git log&lt;/code&gt;, using most git GUI apps, or with the &lt;code class="prettyprint"&gt;git notes show&lt;/code&gt; command. Some git hosts also show notes in the commit view (although &lt;a href="https://github.blog/2010-08-25-git-notes-display/" rel="noopener nofollow" target="_blank"&gt;GH no longer displays notes&lt;/a&gt;).&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Bisect&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;With &lt;a href="https://git-scm.com/docs/git-bisect" rel="noopener nofollow" target="_blank"&gt;git bisect&lt;/a&gt; you can find the commit that introduced a bug using binary search&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is one of the most powerful, yet easy to use git commands- bisect is an absolute life saver when it comes to debugging. After starting a bisect, it checks out commits for you, and you tell it weather that commit is &lt;code class="prettyprint"&gt;good&lt;/code&gt; (no bug), or &lt;code class="prettyprint"&gt;bad&lt;/code&gt; (bug introduced), which lets you narrow down the the earliest commit where the bug is present.&lt;/p&gt;

&lt;p&gt;To get started, run &lt;code class="prettyprint"&gt;git bisect start&lt;/code&gt; then pass it a known good commit with &lt;code class="prettyprint"&gt;git bisect good &amp;lt;commit-hash&amp;gt;&lt;/code&gt; and a known bad one (defaults to current) with &lt;code class="prettyprint"&gt;git bisect bad &amp;lt;optional-hash&amp;gt;&lt;/code&gt;. It will then checkout the commit in-between the good and bad commits, then you specify weather the bug is present with either &lt;code class="prettyprint"&gt;git bisect good&lt;/code&gt; or &lt;code class="prettyprint"&gt;git bisect bad&lt;/code&gt;. It will then repeat the process, checking out a commit in the center of the bad and good, all the way until you've found the exact commit that introduced the bug. Cancel anytime with &lt;code class="prettyprint"&gt;git bisect reset&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There's much more to the bisect command, including replays, viewing commits, skipping, so it's worth checking out the docs next time your debugging.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Grep&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-grep" rel="noopener nofollow" target="_blank"&gt;git grep&lt;/a&gt; to search for  code, files, commits or anything else across your repo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ever find yourself needing to search for a string anywhere within a git project? With git grep you can easily search for any string, or RegEx throughout your project, and across branches (like a more powerful &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;F&lt;/kbd&gt;!). &lt;/p&gt;

&lt;p&gt;&lt;code class="prettyprint"&gt;git grep &amp;lt;regexp&amp;gt; &amp;lt;ref&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It includes plenty of &lt;a href="https://git-scm.com/docs/git-grep#_options" rel="noopener nofollow" target="_blank"&gt;options&lt;/a&gt; to narrow down your search, or specify results format. For example, use &lt;code class="prettyprint"&gt;-l&lt;/code&gt; to only return file names, &lt;code class="prettyprint"&gt;-c&lt;/code&gt; to specify number of matches per file to return, &lt;code class="prettyprint"&gt;-e&lt;/code&gt; to exclude results matching a condition, &lt;code class="prettyprint"&gt;--and&lt;/code&gt; to specify multiple conditions, &lt;code class="prettyprint"&gt;-n&lt;/code&gt; to search with line number.&lt;/p&gt;

&lt;p&gt;Since git grep is regex-compatible, you can get much more advanced with the string your searching for.&lt;br&gt;
You can also use it to specify a file extension, like &lt;code class="prettyprint"&gt;git grep 'console.log' *.js&lt;/code&gt; which will show all console.logs from within JavaScript files&lt;/p&gt;

&lt;p&gt;The second parameter is a ref, and can be a branch name, commit, range of commits, or anything else. E.g. &lt;code class="prettyprint"&gt;git grep "foo" HEAD~1&lt;/code&gt; will search the previous commit.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Archive&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-archive" rel="noopener nofollow" target="_blank"&gt;git archive&lt;/a&gt; to combine an entire repo into a single file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When sharing or backing up a repository, it's often preferred to store it as a single file. Using git archive will include all repo history, so it can be easily extracted back to it's original form. The command also includes a lot of additional options, so you can customise exactly what files are and aren't included in the archive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git archive &lt;span class="nt"&gt;--format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;--output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;./my-archive HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Git Submodules&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-submodule" rel="noopener nofollow" target="_blank"&gt;git submodule&lt;/a&gt; to pull any other repository into yours&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In git, &lt;a href="https://git-scm.com/docs/gitsubmodules" rel="noopener nofollow" target="_blank"&gt;submodules&lt;/a&gt; let you mount one repo into another, and is commonly used for core dependencies or splitting components into separate repositories. For more info, see &lt;a href="https://notes.aliciasykes.com/17996/quick-tip-git-submodules"&gt;this post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Running the following command will pull a module into the specified location, and also create a &lt;code class="prettyprint"&gt;.gitmodules&lt;/code&gt; file so that it's always downloaded when the repo is cloned. Use the &lt;code class="prettyprint"&gt;--recursive&lt;/code&gt; flag to include sub-modules when cloning the repo.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git submodule add https://github.com/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt; &amp;lt;path/to/save/at&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There's also &lt;a href="https://www.atlassian.com/git/tutorials/git-subtree" rel="noopener nofollow" target="_blank"&gt;git subtree&lt;/a&gt;, which does a similar thing, but without the need for metadata files.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Bug Report&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-bugreport" rel="noopener nofollow" target="_blank"&gt;git bugreport&lt;/a&gt; to compose a bug ticket, including git and system info&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This command will capture system info, and then open up a standard bug template (steps to reproduce, actual + expected output, etc). The completed file should be a very complete bug report, with all necessary info captured.&lt;/p&gt;

&lt;p&gt;This is very handy if your a maintainer for an open source package and asking a user (developer) to raise a bug report, as it ensures all necessary data is included.&lt;/p&gt;

&lt;p&gt;And if you are raising a bug report to the core git system, you can also run the &lt;a href="https://git-scm.com/docs/git-diagnose" rel="noopener nofollow" target="_blank"&gt;git diagnose&lt;/a&gt; command, and then raise your issue &lt;a href="https://github.com/git/git" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Fsck&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-fsck" rel="noopener nofollow" target="_blank"&gt;git fsck&lt;/a&gt; to check all objects, or recover unreachable ones&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Although not often needed, sometimes you may have to verify the objects stored by git. This is where fsck (or File System ChecK) comes in, it tests the object database and verifies the SHA-1 ID of all objects and the connections they make.&lt;/p&gt;

&lt;p&gt;It can also be used alongside the &lt;code class="prettyprint"&gt;--unreachable&lt;/code&gt; flag to find objects that are no longer reachable from any named reference (since unlike other commands, it includes everything in &lt;code class="prettyprint"&gt;.git/objects&lt;/code&gt;).&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Stripspace&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-stripspace" rel="noopener nofollow" target="_blank"&gt;git stripspace&lt;/a&gt; to format whitespaces within a given file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Best practice is to avoid trailing whitespaces at the end of lines, avoid having multiple consecutive blank lines, avoid empty lines from beginning and end of an input, and end each file with a new line. There's plenty of language-specific tools which do this automatically for you (like prettier), but Git also has this functionality builtin.&lt;/p&gt;

&lt;p&gt;It's intended for metadata (commit messages, tags, branch descriptions, etc), but also works if you pipe a file to it, then pipe the response back to a file. E.g. &lt;code class="prettyprint"&gt;cat ./path-to-file.txt | git stripspace&lt;/code&gt; or &lt;code class="prettyprint"&gt;git stripspace &amp;lt; dirty-file.txt &amp;gt; clean-file.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can also use this to remove comments (with &lt;code class="prettyprint"&gt;--strip-comments&lt;/code&gt;), or even comment out lines (with &lt;code class="prettyprint"&gt;--comment-lines&lt;/code&gt;).&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Diff&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;With &lt;a href="https://git-scm.com/docs/git-diff" rel="noopener nofollow" target="_blank"&gt;git diff&lt;/a&gt; you can compare the difference between 2 sets of code&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You're probably aware that you you can run &lt;code class="prettyprint"&gt;git diff&lt;/code&gt; to show all changes since the last commit, or use &lt;code class="prettyprint"&gt;git diff &amp;lt;commit-sha&amp;gt;&lt;/code&gt; to compare either 2 commits, or 1 commit to the HEAD. But there's much more you can do with the diff command.&lt;/p&gt;

&lt;p&gt;You can also use it to compare any two arbitrary files, with &lt;code class="prettyprint"&gt;diff  file-1.txt file-2.txt&lt;/code&gt; (no more visiting &lt;a href="https://www.diffchecker.com/compare/" rel="noopener nofollow" target="_blank"&gt;diffchecker.com&lt;/a&gt;!)&lt;/p&gt;

&lt;p&gt;Or compare 2 branches, or refs with each other, using &lt;code class="prettyprint"&gt;git diff branch1..branch2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note that a double dot (&lt;code class="prettyprint"&gt;..&lt;/code&gt;) is the same as a space and indicates the diff input should be the tip of the branches, but you can also use a triple dot (&lt;code class="prettyprint"&gt;...&lt;/code&gt;)  to convert the first parameter into a ref of the shared common ancestor commit between the two diff inputs - very useful! If you want to only compare a single file across branches, just pass the files name in as the third argument. &lt;/p&gt;

&lt;p&gt;You may want to see all changes made within a given date range, for this use &lt;code class="prettyprint"&gt;git diff HEAD@{7.day.ago} HEAD@{0}&lt;/code&gt; (for the last week), again this can be paired up with a filename, branch names, specific commits or any other ref.&lt;/p&gt;

&lt;p&gt;There's also the &lt;a href="https://www.git-scm.com/docs/git-range-diff" rel="noopener nofollow" target="_blank"&gt;git range-diff&lt;/a&gt; command, which provides a simple interface for comparing commit ranges.&lt;/p&gt;

&lt;p&gt;There's much more to the git diff tool (as well as the option of using your own diff checker), so I recommend checking out  &lt;a href="https://git-scm.com/docs/git-diff#_description" rel="noopener nofollow" target="_blank"&gt;the docs&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Hooks&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/githooks" rel="noopener nofollow" target="_blank"&gt;hooks&lt;/a&gt; to execute command or run scripts when a given get action occurs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Hooks let you automate pretty much anything. For example: ensuring standards are met (commit message, branch name, patch size), code quality (tests, lint), appending additional info to a commit (user, device, ticket ID), calling a webhook to record an event or run a pipeline, etc.&lt;/p&gt;

&lt;p&gt;There's pre and post &lt;a href="https://git-scm.com/docs/githooks" rel="noopener nofollow" target="_blank"&gt;hooks available&lt;/a&gt; for most git events, like commit, rebase, merge, push, update, applypatch, etc.&lt;/p&gt;

&lt;p&gt;Hooks are stored in &lt;code class="prettyprint"&gt;.git/hooks&lt;/code&gt; (unless you configure them elsewhere with &lt;code class="prettyprint"&gt;git config core.hooksPath&lt;/code&gt;), and can be tested with the &lt;a href="https://git-scm.com/docs/git-hook" rel="noopener nofollow" target="_blank"&gt;git hook&lt;/a&gt; command. Since they're just shell files, they can be used to run any command.&lt;/p&gt;

&lt;p&gt;Hooks aren't pushed to the remote repository, so to share and manage them across your team, you'll need to use a &lt;a href="https://github.com/aitemr/awesome-git-hooks#tools" rel="noopener nofollow" target="_blank"&gt;hook manager&lt;/a&gt;, like &lt;a href="https://github.com/evilmartians/lefthook" rel="noopener nofollow" target="_blank"&gt;lefthook&lt;/a&gt; or &lt;a href="https://github.com/typicode/husky" rel="noopener nofollow" target="_blank"&gt;husky&lt;/a&gt;.  There's also several &lt;a href="https://githooks.com/#projects" rel="noopener nofollow" target="_blank"&gt;3rd-party tools&lt;/a&gt;, which make managing hooks easier, I recommend &lt;a href="https://github.com/sds/overcommit" rel="noopener nofollow" target="_blank"&gt;overcommit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Remember, hooks can always be skipped (with the &lt;code class="prettyprint"&gt;--no-verify&lt;/code&gt; flag), so never rely purely on hooks, especially for anything security related. &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Blame&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-blame" rel="noopener nofollow" target="_blank"&gt;git blame&lt;/a&gt; to show author info for a specific revision and line&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A classic, quickly find out who wrote a specific line of code (aka which of your co-workers to blame for the bug!). But it's also useful to determine at which point in time something changed and inspect that commit and associated metadata.&lt;/p&gt;

&lt;p&gt;For example, to view author and commit info for line 400 to 420 of index.rs, you'd run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;git blame &lt;span class="nt"&gt;-L&lt;/span&gt; 400,420 index.rs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Git LFS&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Store large files using &lt;a href="https://git-lfs.github.com/" rel="noopener nofollow" target="_blank"&gt;git lfs&lt;/a&gt; to not bog down your repo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Often your project will contain larger files (such as databases, binary assets, archives or media files), which would slow down the git workflow and max out usage limits. That's where &lt;a href="https://git-lfs.github.com/" rel="noopener nofollow" target="_blank"&gt;Large File Storage&lt;/a&gt; comes in - it enables you to store these large assets elsewhere, while keeping them trackable with git and maintaining the same access controls/ permissions. LFS works by replacing these larger files with text pointers that are tracked within git.&lt;/p&gt;

&lt;p&gt;To use it, just run &lt;code class="prettyprint"&gt;git lfs track &amp;lt;file glob&amp;gt;&lt;/code&gt;, which will update your &lt;code class="prettyprint"&gt;.gitattributes&lt;/code&gt; file. You can specify files by their extension (e.g. &lt;code class="prettyprint"&gt;*.psd&lt;/code&gt;), directory, or individually. Running &lt;code class="prettyprint"&gt;git lfs ls-files&lt;/code&gt; to view a list of tracked LFS files.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git GC&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-gc" rel="noopener nofollow" target="_blank"&gt;git gc&lt;/a&gt; to optimize your repository&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Over time git repos accumulate various types of garbage, which take up disk space, and slow down actions. That's where the built-in garbage collector comes in. Running &lt;code class="prettyprint"&gt;git gc&lt;/code&gt; will remove orphaned and inaccessible commits (with &lt;a href="https://git-scm.com/docs/git-prune" rel="noopener nofollow" target="_blank"&gt;git prune&lt;/a&gt;), compress file revisions and stored git objects, as well as some other general house keeping tasks like packing refs, pruning reflog, revere metadata or stale working trees and updating indexes.&lt;/p&gt;

&lt;p&gt;Adding the &lt;code class="prettyprint"&gt;--aggressive&lt;/code&gt; flag will &lt;a href="https://git-scm.com/docs/git-gc#_aggressive" rel="noopener nofollow" target="_blank"&gt;aggressively optimize&lt;/a&gt; the repository, throwing away any existing deltas and re-computing them, this takes much longer to run but may be needed if you've got a large repository.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Show&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-show" rel="noopener nofollow" target="_blank"&gt;git show&lt;/a&gt; to easily inspect any git object&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Outputs objects (blobs, treees, tags or commits) in an easily readable form. To use, just run &lt;code class="prettyprint"&gt;git show &amp;lt;object&amp;gt;&lt;/code&gt;. You'll likely also want to append the &lt;code class="prettyprint"&gt;--pretty&lt;/code&gt; flag, for a clearer output, but there's many other options available to customize the output (with &lt;code class="prettyprint"&gt;--format&lt;/code&gt;), so this command can be extremely powerful for displaying exactly what you need.&lt;/p&gt;

&lt;p&gt;An instance that this is very useful for, is previewing a file in another branch, without switching branches. Just run &lt;code class="prettyprint"&gt;git show branch:file&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Describe&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-describe" rel="noopener nofollow" target="_blank"&gt;git describe&lt;/a&gt; to find the latest tag reachable from a commit, and give it a human-readable name&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Run &lt;code class="prettyprint"&gt;git describe&lt;/code&gt; and you'll see a human-readable string made from combining the last tag name, with the current commit, to generate a string. You can also pass a specific tag to it, &lt;/p&gt;

&lt;p&gt;Note that you must have created tags for this to work, unless you append the &lt;code class="prettyprint"&gt;--all&lt;/code&gt; flag. Git describe will also only use annotated tags by default, so you must specify the &lt;code class="prettyprint"&gt;--tags&lt;/code&gt; flag to make it use lightweight tags as well.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Tag&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Tag a specific point in your repo's history using &lt;a href="https://git-scm.com/docs/git-tag" rel="noopener nofollow" target="_blank"&gt;git tag&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It's often useful to be able to &lt;a href="https://git-scm.com/book/en/v2/Git-Basics-Tagging" rel="noopener nofollow" target="_blank"&gt;tag&lt;/a&gt; specific, important points in a repository‚Äôs history most commonly used to denote versions of releases. Creating a tag is as simple as &lt;code class="prettyprint"&gt;git&amp;nbsp;tag&amp;nbsp;&amp;lt;tagname&amp;gt;&lt;/code&gt;, or you can tag a historical commit with &lt;code class="prettyprint"&gt;git tag -a v4.2.0 &amp;lt;commit sha&amp;gt;&lt;/code&gt;. Like with commits, you can include a message alongside a tag, using &lt;code class="prettyprint"&gt;-m&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Don't forget to push your tag to remote, with &lt;code class="prettyprint"&gt;git push origin &amp;lt;tagname&amp;gt;&lt;/code&gt;.&lt;br&gt;
To list all tags, just run &lt;code class="prettyprint"&gt;git&amp;nbsp;tag&lt;/code&gt;, and optionally use &lt;code class="prettyprint"&gt;-l&lt;/code&gt; for a wildcard search.&lt;br&gt;
You'll then be able to checkout a specific tag, with &lt;code class="prettyprint"&gt;git&amp;nbsp;checkout&amp;nbsp;&amp;lt;tagname&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Reflog&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;List all updates made on your repo using &lt;a href="https://git-scm.com/docs/git-reflog" rel="noopener nofollow" target="_blank"&gt;git reflog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Git keeps track of updates to the tip of branches using a mechanism called reference logs, or "reflogs". Various events are tracked, including: clone, pull, push, commit, checkout and merge. It's often useful to be able to find an events reference, as many commands accept a ref as a parameter. Just run &lt;code class="prettyprint"&gt;git reflog&lt;/code&gt; to view recent events on &lt;code class="prettyprint"&gt;HEAD&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;One thing that reflog is really useful for is recovering lost commits. Git never really loses anything, even when rewriting history (like rebasing or commit amending). Reflog allows you to go back to commits even though they are not referenced by any branch or tag. &lt;/p&gt;

&lt;p&gt;By default reflog uses &lt;code class="prettyprint"&gt;HEAD&lt;/code&gt; (your current branch), but you can run reflog on any ref. For example &lt;code class="prettyprint"&gt;git reflog show &amp;lt;branch name&amp;gt;&lt;/code&gt;, or to see stashed changes with &lt;code class="prettyprint"&gt;git reflog stash&lt;/code&gt;. Or show all references with &lt;code class="prettyprint"&gt;git reflog show --all&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Log&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-log" rel="noopener nofollow" target="_blank"&gt;git log&lt;/a&gt; to view a list of commits&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You're likely already familiar with running &lt;code class="prettyprint"&gt;git log&lt;/code&gt; to view a list of recent commits on your current branch. But there's a few things more you can do with git log.&lt;/p&gt;

&lt;p&gt;Using &lt;code class="prettyprint"&gt;git log --graph --decorate --oneline&lt;/code&gt; will show a nice neat commit graph along with ref pointers.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/c1WByg8/Screenshot-from-2022-12-17-20-43-56.png" alt="example git log output"&gt;&lt;/p&gt;

&lt;p&gt;You also often need to be able to filter logs based on various parameters, the most useful of which are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git log --search="&amp;lt;anything&amp;gt;"&lt;/code&gt; - Search logs for specific code changes&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git log --author="&amp;lt;pattern&amp;gt;"&lt;/code&gt; - Show log only for specific author(s)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git log --grep="&amp;lt;pattern&amp;gt;"&lt;/code&gt; - Filter log using search term or regex&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git log &amp;lt;since&amp;gt;..&amp;lt;until&amp;gt;&lt;/code&gt; - Show all commits between two references&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git log -- &amp;lt;file&amp;gt;&lt;/code&gt; - Show all commits made only to a specific file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, just run &lt;code class="prettyprint"&gt;git shortlog&lt;/code&gt; for a summerized list of commits.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Cherry Pick&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-cherry-pick" rel="noopener nofollow" target="_blank"&gt;git cherry-pick&lt;/a&gt; to pick specified commit(s) by reference and append them to the working HEAD&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes you need to pull a specific commit from elsewhere, into your current branch. This can be very useful for applying hot fixes, undoing changes, restoring lost commits and in certain team collaboration settings. Note that often traditional merges are better practice, since cherry picking commits can cause duplicate commits in the log.&lt;/p&gt;

&lt;p&gt;Usage is straightforward, just run &lt;code class="prettyprint"&gt;git cherry-pick &amp;lt;commit-hash&amp;gt;&lt;/code&gt;. This will pull the specified commit into your current branch.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Switch&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://git-scm.com/docs/git-switch" rel="noopener nofollow" target="_blank"&gt;git switch&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Moving between branches is something that we do often, the &lt;code class="prettyprint"&gt;switch&lt;/code&gt; command is like a simplified version of &lt;code class="prettyprint"&gt;git checkout&lt;/code&gt;, it can be used to create and navigate between branches, but unlike checkout does not copy modified files when you move between branches.&lt;/p&gt;

&lt;p&gt;Similar to &lt;code class="prettyprint"&gt;checkout -b&lt;/code&gt;, with the switch command you can  append the &lt;code class="prettyprint"&gt;-c&lt;/code&gt; flag to create a new branch, and jump strait into it, e.g. &lt;code class="prettyprint"&gt;git switch -c &amp;lt;new branch&amp;gt;&lt;/code&gt;. And running &lt;code class="prettyprint"&gt;git switch -&lt;/code&gt; will discard any experimental changes you've made, and return you to your previous branch.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Git Standup&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Use &lt;a href="https://github.com/kamranahmedse/git-standup" rel="noopener nofollow" target="_blank"&gt;git standup&lt;/a&gt; to recall what you did on the last working day , based on git commits&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I've put this one at the end, as it's not included with most git clients, but you can &lt;a href="https://github.com/kamranahmedse/git-standup#install" rel="noopener nofollow" target="_blank"&gt;easily install it&lt;/a&gt; either with your systems package manager, using a 1-line curl script, or by building from source.&lt;/p&gt;

&lt;p&gt;If your boss requires you do a daily standup, to give updates on yesterdays work, but you can never remember what you actually did - this one is for you! It'll show a nicely formatted list of everything done in a given time frame. Usage is simple, just run &lt;code class="prettyprint"&gt;git standup&lt;/code&gt;, or use &lt;a href="https://github.com/kamranahmedse/git-standup#options" rel="noopener nofollow" target="_blank"&gt;these options&lt;/a&gt; to specify what data should be shown (author, timeframe, branches, etc.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Bonus&lt;/h2&gt;

&lt;p&gt;Git can be easily extended with add-ons, to add extra commands that do useful tasks. One of the most complete extensions is &lt;a href="https://github.com/tj/git-extras/blob/master/Commands.md" rel="noopener nofollow" target="_blank"&gt;git-extras&lt;/a&gt; by &lt;a href="https://github.com/tj" rel="noopener nofollow" target="_blank"&gt;@tj&lt;/a&gt;. It gives you 70+ &lt;a href="https://github.com/tj/git-extras/blob/master/Commands.md" rel="noopener nofollow" target="_blank"&gt;extra commands&lt;/a&gt; to automate common git jobs.&lt;/p&gt;

&lt;p&gt;For a list of more useful git add-ons, see &lt;a href="https://github.com/stevemao/awesome-git-addons" rel="noopener nofollow" target="_blank"&gt;stevemao/awesome-git-addons&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you're working with GitHub repos, then the &lt;a href="https://cli.github.com/" rel="noopener nofollow" target="_blank"&gt;GitHub CLI&lt;/a&gt; let's you do common tasks (managing PRs, issues, code reviews, etc) from the command line.&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Super Useful CSS Resources üåà</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 03 Dec 2022 17:25:01 +0000</pubDate>
      <link>https://notes.aliciasykes.com/40638/super-useful-css-resources</link>
      <guid>https://notes.aliciasykes.com/40638/super-useful-css-resources</guid>
      <description>&lt;p&gt;&lt;p&gt;View on Dev.to: &lt;a href="https://dev.to/lissy93/super-useful-css-resources-1ba3"&gt;&lt;img width="250" style="display: inline; width: 250px; margin: 0;" src="https://img.shields.io/badge/Dev.to-Super_Useful_CSS_Resources_üåà-%23a300ff?logo=Dev.to&amp;amp;style=flat-square" alt="Super Useful CSS Resources üåà"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A collection of 70 hand-picked, web-based tools which are actually useful.&lt;br&gt;
Each will generate pure CSS without the need for JS or any external libraries.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Full credit goes to the authors behind each of these apps (where possible I've linked to their GH/ socials)&lt;/small&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Contents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#property-generators"&gt;Property Generators&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#animations"&gt;Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#backgrounds"&gt;Backgrounds&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#colors"&gt;Color Tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#typography"&gt;Typography&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#loaders"&gt;Loaders&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#layouts"&gt;Layouts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#informative"&gt;Informative&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="property-generators"&gt;Property Generators&lt;/h2&gt;

&lt;h3&gt;1. &lt;a href="https://neumorphism.io" rel="noopener nofollow" target="_blank"&gt;Neumorphism&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate Soft-UI CSS styles using inset shadows, by &lt;a href="https://github.com/adamgiebl" rel="noopener nofollow" target="_blank"&gt;@adamgiebl&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/vPH0YMV/32-neumorphism.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;2. &lt;a href="https://shadows.brumm.af/" rel="noopener nofollow" target="_blank"&gt;Shaddows Brumm&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Make and preview beautifully smooth shadows, by &lt;a href="https://github.com/brumm" rel="noopener nofollow" target="_blank"&gt;@brumm&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/vD2rd3G/25-shadows-brum.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;3. &lt;a href="https://9elements.github.io/fancy-border-radius/" rel="noopener nofollow" target="_blank"&gt;Fancy Border Radius&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate cool shaped objects with border-radius, by &lt;a href="https://github.com/9elements" rel="noopener nofollow" target="_blank"&gt;@9Elements&lt;/a&gt;. Similar to &lt;a href="https://www.blobmaker.app/" rel="noopener nofollow" target="_blank"&gt;BlobMaker&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/0KQPHHh/35-fancy-border-radius.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;4. &lt;a href="https://cssbud.com/css-generator/css-glow-generator/" rel="noopener nofollow" target="_blank"&gt;Glow Generator&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate pure CSS, cross-browser glow effects&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/DDfw0Mz/54-glow-generator.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;5. &lt;a href="https://onotakehiko.dev/clothoid/" rel="noopener nofollow" target="_blank"&gt;Clothoid Corners&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generates clothoid rounded corners by CSS clip-path, by &lt;a href="https://onotakehiko.com/" rel="noopener nofollow" target="_blank"&gt;Takehiko Ono&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/HHR644q/33-clothoid.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;6. &lt;a href="https://hype4.academy/tools/glassmorphism-generator" rel="noopener nofollow" target="_blank"&gt;Glassmorphism&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Build semi-transparent, blurred glass-like backgrounds. Similar to &lt;a href="https://ui.glass/generator/" rel="noopener nofollow" target="_blank"&gt;ui.glass/generator&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/89R9Ckp/55-css-glow.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;7. &lt;a href="https://bennettfeely.com/clippy/" rel="noopener nofollow" target="_blank"&gt;Clipy&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate complex shaped objects using clip-path, by &lt;a href="https://github.com/bennettfeely" rel="noopener nofollow" target="_blank"&gt;@bennettfeely&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fHjj3FP/34-clippy.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;8. &lt;a href="https://www.cssfilters.co/" rel="noopener nofollow" target="_blank"&gt;CSS Filters&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate and preview pure CSS Instagram-style photo filters, by &lt;a href="https://github.com/ghosh" rel="noopener nofollow" target="_blank"&gt;@ghosh&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/4Nwr01c/37-cssfilters.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;9. &lt;a href="https://www.base64-image.de/" rel="noopener nofollow" target="_blank"&gt;Base64 Image&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Encode an image directly in your CSS in Base64&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/FgTRfQd/38-base64-image.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;10. &lt;a href="https://quantityqueries.com/" rel="noopener nofollow" target="_blank"&gt;Quantity Queries&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate quantity-based CSS queries, by &lt;a href="https://github.com/drewminns" rel="noopener nofollow" target="_blank"&gt;@drewminns&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/wK77hT7/39-quantityqueries.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="animations"&gt;Animations&lt;/h2&gt;

&lt;h3&gt;11. &lt;a href="https://animista.net/play" rel="noopener nofollow" target="_blank"&gt;Animista&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;CSS animation playground and generator, by &lt;a href="https://www.linkedin.com/in/anatravas" rel="noopener nofollow" target="_blank"&gt;Ana T&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/zQ0y2mk/1-animista.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;12. &lt;a href="https://cubic-bezier.com/" rel="noopener nofollow" target="_blank"&gt;Cubic-Bezier&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Preview and generate advanced cubic bezier animations, by &lt;a href="https://github.com/LeaVerou" rel="noopener nofollow" target="_blank"&gt;@LeaVerou&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/bLHhQ41/2-cubic-besier.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;13. &lt;a href="https://keyframes.app/animate" rel="noopener nofollow" target="_blank"&gt;Keyframes&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Advanced keyframe animation maker, by &lt;a href="https://github.com/mitchas" rel="noopener nofollow" target="_blank"&gt;@mitchas&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/dK3Lxgr/3-keyframes.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;14. &lt;a href="https://waitanimate.wstone.uk/" rel="noopener nofollow" target="_blank"&gt;Wait Animate&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Use animation-delay to simulate delays, by &lt;a href="https://github.com/will-stone" rel="noopener nofollow" target="_blank"&gt;@will-stone&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/NZPMwf8/4-waitanimate.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;15. &lt;a href="https://www.transition.style" rel="noopener nofollow" target="_blank"&gt;Transition.Style&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Copy-paste transition animations, by &lt;a href="https://github.com/argyleink" rel="noopener nofollow" target="_blank"&gt;@argyleink&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/YPwRgVW/5-transition.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="backgrounds"&gt;Backgrounds&lt;/h2&gt;

&lt;h3&gt;16. &lt;a href="https://heropatterns.com/" rel="noopener nofollow" target="_blank"&gt;Hero Patterns&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Find and customize simple pure-CSS patterned backgrounds, by &lt;a href="https://twitter.com/steveschoger" rel="noopener nofollow" target="_blank"&gt;@steveschoger&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/gdnKVKG/56-hero-backgrounds.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;17. &lt;a href="https://app.haikei.app/" rel="noopener nofollow" target="_blank"&gt;Haikei&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate unique organic SVG banners and backgrounds (similar to &lt;a href="https://www.shapedivider.app/" rel="noopener nofollow" target="_blank"&gt;Shape Divider&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/dQqztYV/14-haikei.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;18. &lt;a href="https://doodad.dev/pattern-generator/" rel="noopener nofollow" target="_blank"&gt;Pattern Generator&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Advanced pattern generator&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/th8khVj/15-pattern-generator.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;19. &lt;a href="https://css-pattern.com/" rel="noopener nofollow" target="_blank"&gt;CSS Pattern&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Collection of pre-made pure CSS patterned backgrounds, by &lt;a href="https://github.com/Afif13" rel="noopener nofollow" target="_blank"&gt;@Afif13&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Hh37hbb/16-css-pattern.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;20. &lt;a href="https://patternizer.com" rel="noopener nofollow" target="_blank"&gt;Patternizer&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Build striped backgrounds, by &lt;a href="https://twitter.com/matthewlein" rel="noopener nofollow" target="_blank"&gt;@matthewlein&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/PMMQC6F/17-patternizer.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;21. &lt;a href="http://www.patternify.com/" rel="noopener nofollow" target="_blank"&gt;Patternify&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Build your own old-school pattern, by &lt;a href="https://twitter.com/SachaGreif" rel="noopener nofollow" target="_blank"&gt;@SachaGreif&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/2P45cZT/18-patternify.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;22. &lt;a href="https://wweb.dev/resources/animated-css-background-generator/" rel="noopener nofollow" target="_blank"&gt;Animated BG&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate blurred animated pure CSS backgrounds&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/KFwrZQS/19-animated-bg.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;23. &lt;a href="https://trianglify.io/" rel="noopener nofollow" target="_blank"&gt;Trianglify&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Geometric background designer (note: only semmi-free), by &lt;a href="https://github.com/qrohlf" rel="noopener nofollow" target="_blank"&gt;@qrohlf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/6F812Dd/20-trianglify.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;24. &lt;a href="https://animatedbackgrounds.me" rel="noopener nofollow" target="_blank"&gt;Animated Backgrounds&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Collection of pure CSS background animations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/YhxFmVw/21-animatedbackgrounds.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;25. &lt;a href="https://www.magicpattern.design/tools/css-backgrounds" rel="noopener nofollow" target="_blank"&gt;Magic Pattern CSS Backgrounds&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Collection of reusable SVG-based / pure CSS background patterns, with a visual explorer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/gdnKVKG/56-hero-backgrounds.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="colors"&gt;Colors&lt;/h2&gt;

&lt;h3&gt;26. &lt;a href="https://cssgradient.io/" rel="noopener nofollow" target="_blank"&gt;CSS Gradient&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Advanced CSS gradient builder&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/xJG5cCv/6-cssgradient.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;27. &lt;a href="https://colormixer.web.app" rel="noopener nofollow" target="_blank"&gt;Parametric Mixer&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Equaliser-based CSS color composer. by &lt;a href="https://twitter.com/dawidwoldu" rel="noopener nofollow" target="_blank"&gt;@dawidwoldu&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/k6T022D/60-parametric-mixer.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;28. &lt;a href="https://palettte.app/" rel="noopener nofollow" target="_blank"&gt;Palettte.&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Develop and tweak color schemes&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/wr7Zhdz/61-palettte.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;29. &lt;a href="https://paletton.com" rel="noopener nofollow" target="_blank"&gt;Paletton&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Palette builder using opposing or attracting colors&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/qBYcsgk/7-paletton.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;30. &lt;a href="https://www.grabient.com/" rel="noopener nofollow" target="_blank"&gt;Grabient&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Sample gradients.&lt;br&gt;
Similar to &lt;a href="https://webkul.github.io/coolhue/" rel="noopener nofollow" target="_blank"&gt;CoolHue&lt;/a&gt;, &lt;a href="https://webgradients.com/" rel="noopener nofollow" target="_blank"&gt;WebGradients.com&lt;/a&gt;, &lt;a href="https://gradienthunt.com/" rel="noopener nofollow" target="_blank"&gt;GradientHunt&lt;/a&gt;, &lt;a href="https://gradientbuttons.colorion.co/" rel="noopener nofollow" target="_blank"&gt;GradientButtons&lt;/a&gt; and &lt;a href="https://uigradients.com" rel="noopener nofollow" target="_blank"&gt;UI gradients&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Qj88dCZ/8-grabient.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;31. &lt;a href="https://colorhunt.co/" rel="noopener nofollow" target="_blank"&gt;Color Hunt&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Yet another color palette designer&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/ZVWbL7s/9-colorhunt.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;32. &lt;a href="https://larsenwork.com/easing-gradients/#editor" rel="noopener nofollow" target="_blank"&gt;Easing Gradients&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Cubic-bezier style pure CSS gradients, by &lt;a href="https://github.com/larsenwork" rel="noopener nofollow" target="_blank"&gt;@larsenwork&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/bdr9R8P/10-easing-gradients.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;33. &lt;a href="https://flatuicolors.com/" rel="noopener nofollow" target="_blank"&gt;Flat UI Colors&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Flat-style handpicked color palettes, by &lt;a href="https://twitter.com/ahmetsulek" rel="noopener nofollow" target="_blank"&gt;@ahmetsulek&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/t3TwmWw/11-flatuicolors.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;34. &lt;a href="https://colordesigner.io/tools" rel="noopener nofollow" target="_blank"&gt;Color Tools&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Mix, extract, convert and generate colors&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/1ntDHZc/12-colordesigner.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;35. &lt;a href="https://colorpalettes.earth/" rel="noopener nofollow" target="_blank"&gt;ColorPalettes.Earth&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Natural color pallets from nature&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/tJ0JMK6/13-eart-palettes.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="typography"&gt;Typography&lt;/h2&gt;

&lt;h3&gt;36. &lt;a href="https://fontjoy.com/" rel="noopener nofollow" target="_blank"&gt;Font Joy&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Discover and preview various font pairings, by &lt;a href="https://github.com/Jack000" rel="noopener nofollow" target="_blank"&gt;@Jack000&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/2jGJdDD/22-font-joy.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;37. &lt;a href="https://typesetwith.me/" rel="noopener nofollow" target="_blank"&gt;Type set With Me&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Typography &amp;amp; legibility sandbox, by &lt;a href="https://github.com/tsmith512" rel="noopener nofollow" target="_blank"&gt;@tsmith512&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/5vFDphR/23-typesetwith.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;38. &lt;a href="https://type-scale.com/" rel="noopener nofollow" target="_blank"&gt;Type Scale&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Generate heading/ body font sizes, by &lt;a href="https://github.com/jeremychurch" rel="noopener nofollow" target="_blank"&gt;@jeremychurch&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/4809qtW/24-typescale.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;39. &lt;a href="https://glyphter.com/" rel="noopener nofollow" target="_blank"&gt;Glyphter&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Create icon fonts from SVG graphics&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/x3myt3N/25-glyphter.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;40. &lt;a href="https://katydecorah.com/font-library" rel="noopener nofollow" target="_blank"&gt;Font-Library&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Tagged library of Google Fonts, by &lt;a href="https://github.com/katydecorah" rel="noopener nofollow" target="_blank"&gt;@katydecorah&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/gPCghyQ/26-font-library.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;41. &lt;a href="https://wh0.github.io/glitter/" rel="noopener nofollow" target="_blank"&gt;Glitter&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Export 90s-style Glitter text&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/GFyMm5k/27-glitter.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="loaders"&gt;Loaders&lt;/h2&gt;

&lt;h3&gt;42. &lt;a href="https://tobiasahlin.com/spinkit/" rel="noopener nofollow" target="_blank"&gt;Spin Kit&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Selection of clean CSS loading animations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/t2CJLg0/28-spinkit.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;43. &lt;a href="https://whirl.netlify.app/" rel="noopener nofollow" target="_blank"&gt;Whirl&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;100+ CSS loading animations, for copy-paste&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/rvG8Bzx/29-whirl.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;44. &lt;a href="https://www.cssportal.com/css-loader-generator/" rel="noopener nofollow" target="_blank"&gt;Loader Generator&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Pre-built and custom pure CSS loaders&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/7jwBBj4/30-loader-generator.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;45. &lt;a href="https://projects.lukehaas.me/css-loaders/" rel="noopener nofollow" target="_blank"&gt;lukehaas - CSS-Loaders&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Simple pure CSS loading animations&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/M1YWH6d/31-lukehaas-single-element.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;46. &lt;a href="https://cssloaders.github.io/" rel="noopener nofollow" target="_blank"&gt;CSSLoaders&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Complex pure CSS loaders&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;47. &lt;a href="https://loading.io/css/" rel="noopener nofollow" target="_blank"&gt;loading.io/css&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;CSS implementations of common loaders&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2 id="layouts"&gt;Layouts&lt;/h2&gt;

&lt;h3&gt;48. &lt;a href="https://cssgridgarden.com/" rel="noopener nofollow" target="_blank"&gt;CSS Grid Garden&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Interactive game for learning CSS grid, by &lt;a href="https://github.com/thomaspark" rel="noopener nofollow" target="_blank"&gt;@thomaspark&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Ph6kx0X/40-css-gridgarden.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;49. &lt;a href="https://flexboxfroggy.com/" rel="noopener nofollow" target="_blank"&gt;FlexboxFroggy&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Interactive game for learning flexbox, by &lt;a href="https://github.com/thomaspark" rel="noopener nofollow" target="_blank"&gt;@thomaspark&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/SPy0Qdg/41-flexbox-froggy.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;50. &lt;a href="https://bennettfeely.com/flexplorer/" rel="noopener nofollow" target="_blank"&gt;Flexplorer&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Visual flexbox demo, by &lt;a href="https://twitter.com/bennettfeely" rel="noopener nofollow" target="_blank"&gt;@bennettfeely&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/dbqDnnZ/42-flexsplorer.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;51. &lt;a href="https://www.flexulator.com/" rel="noopener nofollow" target="_blank"&gt;Flexulator&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;An interactive CSS Flexbox space distribution calculator, by &lt;a href="https://github.com/telagraphic" rel="noopener nofollow" target="_blank"&gt;@telagraphic&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/pZNwVZj/43-flexulator.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;52. &lt;a href="https://cssgrid-generator.netlify.app/" rel="noopener nofollow" target="_blank"&gt;Grid Generator&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Make grids using the CSS grid-template properties, by &lt;a href="https://github.com/sdras" rel="noopener nofollow" target="_blank"&gt;@sdras&lt;/a&gt; (similar to &lt;a href="https://grid.layoutit.com/" rel="noopener nofollow" target="_blank"&gt;grid.layoutit.com&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/59t7mw0/44-grid-generator.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;53. &lt;a href="https://layout.bradwoods.io/" rel="noopener nofollow" target="_blank"&gt;Layout Generator&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A modern CSS layout maker&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/4mzZWMT/45-layout-generator.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;54. &lt;a href="https://codepen.io/carolineartz/full/ogVXZj" rel="noopener nofollow" target="_blank"&gt;Box Model Diagram&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Just a visual box model demo&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/FK0p8r9/46-box-model.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id="informative"&gt;Informative&lt;/h2&gt;

&lt;h3&gt;55. &lt;a href="https://css-timeline.vercel.app/" rel="noopener nofollow" target="_blank"&gt;CSS Timeline&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A history of CSS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fSHtrQ8/47-css-timeline.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;56. &lt;a href="https://screensizemap.com/" rel="noopener nofollow" target="_blank"&gt;Screen Size Map&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;View popular screen sizes for responsive design&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/gvt1rX9/48-screensizemap.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;57. &lt;a href="https://katydecorah.com/css-ruler/" rel="noopener nofollow" target="_blank"&gt;CSS Ruler&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Preview various CSS units relative to each other&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/RbVTKXk/49-css-ruler.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;58. &lt;a href="http://bada55.io/" rel="noopener nofollow" target="_blank"&gt;bada55&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;List of very funny CSS hex color codes&lt;br&gt;
See also, &lt;a href="https://colors.lol/" rel="noopener nofollow" target="_blank"&gt;colors.lol&lt;/a&gt; for some overly-descriptive color pallets&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/WW3vXs6/50-bada55.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;59. &lt;a href="https://www.whocanuse.com" rel="noopener nofollow" target="_blank"&gt;Who can use?&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Checks accessibility grade of a given color combinations, similar to &lt;a href="https://colorable.jxnblk.com/" rel="noopener nofollow" target="_blank"&gt;Colorable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/ZGVxFvf/59-who-can-use.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;60. &lt;a href="https://caniuse.com/" rel="noopener nofollow" target="_blank"&gt;Can I use?&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Browser compatibility check of various, CSS, JS, HTML and web features&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/sg6MLP3/57-can-i-use.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;61. &lt;a href="https://www.caniemail.com/" rel="noopener nofollow" target="_blank"&gt;Can I email?&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Similar to &lt;a href="https://caniuse.com" rel="noopener nofollow" target="_blank"&gt;Can I use?&lt;/a&gt;, but checks if a given CSS property (or HTML elem) is compatible with email clients&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/h7qwsnb/58-can-i-email.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;62. &lt;a href="https://codebeautify.org/css-tools" rel="noopener nofollow" target="_blank"&gt;CSS Processing Tools&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Convert to and from any other CSS language&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/82F5fSG/51-css-tools.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;63. &lt;a href="https://unused-css.com/" rel="noopener nofollow" target="_blank"&gt;Unused CSS&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Searches your site for unused CSS, and displays stats&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/z4MYSs5/52-unused-css.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;64. &lt;a href="https://component.gallery" rel="noopener nofollow" target="_blank"&gt;Component.Gallery&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Global component search&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/YPLHzd8/53-component-gallery.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;65. &lt;a href="https://designsystemsrepo.com/design-systems-recent/" rel="noopener nofollow" target="_blank"&gt;Design System Gallery&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A collection of open design systems, for inspiration&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;66. &lt;a href="https://www.checklist.design/" rel="noopener nofollow" target="_blank"&gt;Checklist.design&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A collection of design best practices organised as checklists&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;67. &lt;a href="https://css-tricks.com/snippets/html/glyphs/" rel="noopener nofollow" target="_blank"&gt;Glyphs&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A list of CSS glyph character codes (see also &lt;a href="https://glyphsearch.com" rel="noopener nofollow" target="_blank"&gt;GlyphSearch&lt;/a&gt; for library icons)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;68. &lt;a href="https://css-tricks.com/" rel="noopener nofollow" target="_blank"&gt;CSS-Tricks.com&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;The best CSS blog out there&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;69. &lt;a href="https://github.com/kudapara/curated-design-tools" rel="noopener nofollow" target="_blank"&gt;Curated Design Tools&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A curated list of awesome design tools&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;70. &lt;a href="https://github.com/troxler/awesome-css-frameworks" rel="noopener nofollow" target="_blank"&gt;Awesome-CSS-Frameworks&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A list of open source CSS frameworks&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;71. &lt;a href="https://cssreference.io/" rel="noopener nofollow" target="_blank"&gt;CSS Reference&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A visual guide to CSS properties (similar to &lt;a href="https://htmlreference.io/" rel="noopener nofollow" target="_blank"&gt;htmlreference.io&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;72. &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Reference" rel="noopener nofollow" target="_blank"&gt;MDN CSS Docs&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Excellent documentation of all available CSS properties&lt;/p&gt;
&lt;/blockquote&gt;

&lt;style&gt;
.post-body.p1 img,
.post-body.p1 ul,
.post-body.p1 small,
.post-body.p1 blockquote {
    max-width: 600px !important;
    width: 100%;
    margin: 0 auto;
    border-radius: 5px;
}
.post-body.p1 blockquote {
    margin: 1rem auto;
}
.post-body.p1 img {
    box-shadow: 1px 2px 4px 2px #090909cf;
}
.post-body.p1 h2 {
    font-size: 1.8rem !important;
    max-width: 800px;
    margin: 1rem auto 0.25rem auto;
    text-align: center;
}
.post-body.p1 h3 {
    font-size: 1.5rem !important;
    border-top: 3px solid var(--post-code-border-color);
    padding: 1rem 0 0;
    max-width: 600px;
    margin: 1rem auto;
}
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generate Pretty Code / App Screenshots üì∏</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 26 Nov 2022 16:13:49 +0000</pubDate>
      <link>https://notes.aliciasykes.com/40473/generate-pretty-code-app-screenshots</link>
      <guid>https://notes.aliciasykes.com/40473/generate-pretty-code-app-screenshots</guid>
      <description>&lt;p&gt;&lt;p&gt;Spice up your docs, blog posts and Tweets with some pretty screenshots!&lt;br&gt;
The following is a list of 20 free tools, that will generate nicely formatted screenshots of code, device mockups and embedded info.&lt;/p&gt;

&lt;h2&gt;Code Screenshots&lt;/h2&gt;

&lt;h3&gt;1. &lt;a href="https://ray.so/" rel="noopener nofollow" target="_blank"&gt;Ray.so&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://ray.so/" rel="noopener nofollow" target="_blank"&gt;Ray.so&lt;/a&gt; developed by the team behind Raycast, generates clean and minimal code screenshots.&lt;br&gt;
You can also specify options via GET URL params, so you could programatically generate an image (e.g. using &lt;a href="https://github.com/raycast/script-commands/blob/master/commands/developer-utils/create-image-from-code.sh" rel="noopener nofollow" target="_blank"&gt;this shell script&lt;/a&gt;, or &lt;a href="https://marketplace.visualstudio.com/items?itemName=Goopware.raythis" rel="noopener nofollow" target="_blank"&gt;this VS Code extension&lt;/a&gt;).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/SmVqcYs/1-ray-so.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;2. &lt;a href="https://app.codeimage.dev/" rel="noopener nofollow" target="_blank"&gt;CodeImage&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://app.codeimage.dev/" rel="noopener nofollow" target="_blank"&gt;CodeImage&lt;/a&gt;, built by Riccardo Perra, and available on GitHub at &lt;a href="https://github.com/riccardoperra/codeimage" rel="noopener nofollow" target="_blank"&gt;riccardoperra/codeimage&lt;/a&gt;, let's you generate customized code screenshots, but also embed live code with support for multiple files.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/2jpJGk7/codeimage-screenshot.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;3. &lt;a href="https://carbon.now.sh/" rel="noopener nofollow" target="_blank"&gt;Carbon&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://carbon.now.sh/" rel="noopener nofollow" target="_blank"&gt;Carbon&lt;/a&gt; has more advanced styling options. It's open source (&lt;a href="https://github.com/carbon-app/carbon" rel="noopener nofollow" target="_blank"&gt;view on GitHub&lt;/a&gt;) and developed by &lt;a href="https://github.com/mfix22" rel="noopener nofollow" target="_blank"&gt;@mfix22&lt;/a&gt;.&lt;br&gt;
You can also directly generate an image from a GitHub Gist, by passing the Gist ID in the URL, for example: &lt;code class="prettyprint"&gt;https://carbon.now.sh/9da07fe8b877801f7814424a00acbe90&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Bz24QTJ/2-carbon-sh.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;4. &lt;a href="https://chalk.ist/" rel="noopener nofollow" target="_blank"&gt;Chalk.ist&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://chalk.ist/" rel="noopener nofollow" target="_blank"&gt;Chalk.ist&lt;/a&gt; is another clean and simple option, it too is open source (&lt;a href="https://github.com/Idered/chalk.ist" rel="noopener nofollow" target="_blank"&gt;view on GitHub&lt;/a&gt;) developed by &lt;a href="https://github.com/Idered" rel="noopener nofollow" target="_blank"&gt;@Idered&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/mSWgg9H/3-chalkist.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;5. &lt;a href="https://snappify.com/editor" rel="noopener nofollow" target="_blank"&gt;Snappify&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://snappify.com/editor" rel="noopener nofollow" target="_blank"&gt;Snappify&lt;/a&gt; is a snippet manager, but also includes a nice tool for generating screenshots. Login isn't required, but some extra features do need a user account. There's also a &lt;a href="https://snappify.com/docs/integrations/vs-code" rel="noopener nofollow" target="_blank"&gt;VS Code plugin&lt;/a&gt;, and the option to &lt;a href="https://snappify.com/docs/embedding/getting-started" rel="noopener nofollow" target="_blank"&gt;embed code&lt;/a&gt; into blog posts&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/bNzhk1n/snapify.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;6. &lt;a href="https://codekeep.io/screenshot" rel="noopener nofollow" target="_blank"&gt;CodeKeep&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://codekeep.io/screenshot" rel="noopener nofollow" target="_blank"&gt;CodeKeep&lt;/a&gt; is another snippet manager, but what makes their screenshot tool unique is the many options for customization. You can add text, annotations, icons and include multiple snippets in a single screenshot&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/tbFXM1B/codekeep.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;7. &lt;a href="https://codeimg.io/" rel="noopener nofollow" target="_blank"&gt;CodeImg.io&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://codeimg.io/" rel="noopener nofollow" target="_blank"&gt;CodeImg.io&lt;/a&gt; is great for social media posts, with a series of templates optimized for various websites. There are a range of themes to choose from, support for SVG exports, and many customization options. Developed by &lt;a href="https://github.com/iduspara" rel="noopener nofollow" target="_blank"&gt;@iduspara&lt;/a&gt;, but not open source.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/7XbcPN9/code-img-io.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;8. &lt;a href="https://www.snippetshot.com/" rel="noopener nofollow" target="_blank"&gt;SnippetShot.com&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.snippetshot.com/" rel="noopener nofollow" target="_blank"&gt;SnippetShot.com&lt;/a&gt; is great for clean and simple code snippets. A variety pf backgrounds, themes and fonts, and the ability to add an attribution link, as well as Gist import, unique links and SVG export. It's developed by &lt;a href="https://marcoslooten.com" rel="noopener nofollow" target="_blank"&gt;Marco Slooten&lt;/a&gt;, and is not open source&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/XFK29r9/Snippet-shot.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;VS Code Extensions&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;While we're on the topic of code screenshots, I have to mention a few really neat IDE extensions which help you take great screenshots, directly from VS Code.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=pnp.polacode" rel="noopener nofollow" target="_blank"&gt;Polacode&lt;/a&gt; by &lt;a href="https://github.com/octref" rel="noopener nofollow" target="_blank"&gt;@octref&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=adpyke.codesnap" rel="noopener nofollow" target="_blank"&gt;CodeSnap&lt;/a&gt; by &lt;a href="https://github.com/kufii" rel="noopener nofollow" target="_blank"&gt;@kufii&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=JeffersonLicet.snipped" rel="noopener nofollow" target="_blank"&gt;Snipped&lt;/a&gt; by &lt;a href="https://github.com/jeffersonlicet" rel="noopener nofollow" target="_blank"&gt;@jeffersonlicet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2&gt;Browser / Device Screenshots&lt;/h2&gt;

&lt;h3&gt;9. &lt;a href="https://browserframe.com/" rel="noopener nofollow" target="_blank"&gt;Browser Frame&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://browserframe.com/" rel="noopener nofollow" target="_blank"&gt;Browser Frame&lt;/a&gt;, developed by &lt;a href="https://github.com/pqvst" rel="noopener nofollow" target="_blank"&gt;@pqvst&lt;/a&gt; creates clean and minimal web browser mock-ups, with a range of browser frames in both light and dark mode supported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/9q4wH36/4-browser-frame.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;10. &lt;a href="https://www.screely.com/" rel="noopener nofollow" target="_blank"&gt;Screely&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.screely.com/" rel="noopener nofollow" target="_blank"&gt;Screely&lt;/a&gt;, developed by &lt;a href="https://github.com/JurnW" rel="noopener nofollow" target="_blank"&gt;@JurnW&lt;/a&gt; creates very simple browser mockups, with an optional background fill.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Q63Vyh0/5-screely.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;11. &lt;a href="https://mockuphone.com/" rel="noopener nofollow" target="_blank"&gt;Mock up Phone&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://mockuphone.com/" rel="noopener nofollow" target="_blank"&gt;Mock up Phone&lt;/a&gt; by Authgear has a range of different mobile, tablet, laptop and large screen device frames, which are easy to upload images into. But keep in mind the screenshots ratio must be correct to avoid it being stretched.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/7ppfPcC/6-mocku-phone.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;12. &lt;a href="https://screenshot.rocks/" rel="noopener nofollow" target="_blank"&gt;Screenshot.Rocks&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://screenshot.rocks/" rel="noopener nofollow" target="_blank"&gt;Screenshot.Rocks&lt;/a&gt; by &lt;a href="https://github.com/daveearley" rel="noopener nofollow" target="_blank"&gt;@daveearley&lt;/a&gt; generates very simple browser and mobile mockups, with an optional background, shadow and controls.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/z2jpDyq/7-screenshot-rocks.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;13. &lt;a href="https://theapplaunchpad.com/" rel="noopener nofollow" target="_blank"&gt;The App Launchpad&lt;/a&gt; (requires sign up)&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Unlike other options on this list, &lt;a href="https://theapplaunchpad.com/" rel="noopener nofollow" target="_blank"&gt;The App Launchpad&lt;/a&gt; does require sign up, but it's free to use. It's a tool that makes it easy to build beautiful screenshots for your app, optimised for publishing to Google Play and the Apple Store.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/LpqC3gS/8-theapplaunchpad.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;14. &lt;a href="http://magicmockups.com" rel="noopener nofollow" target="_blank"&gt;Magic Mockups&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://magicmockups.com" rel="noopener nofollow" target="_blank"&gt;Magic Mockups&lt;/a&gt;, developed by Kaspars Sprogis is an older tool, but still very useful if you want to generate mockups displayed on a physical device in real-life situations. Note that your screenshot needs to be exactly the right ratio, to avoid it being stretched or cropped.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/FwYrzCm/9-magicmockups.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;15. &lt;a href="https://deviceshots.com/" rel="noopener nofollow" target="_blank"&gt;Device Shots&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://deviceshots.com/" rel="noopener nofollow" target="_blank"&gt;Device Shots&lt;/a&gt; by &lt;a href="https://github.com/diogocapela" rel="noopener nofollow" target="_blank"&gt;@diogocapela&lt;/a&gt; let's you build colourful, annotated app screenshots.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/K7FjMXv/10-deviceshots.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Social Media Screenshots&lt;/h2&gt;

&lt;h3&gt;16. &lt;a href="https://poet.so/" rel="noopener nofollow" target="_blank"&gt;Poet.so&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://poet.so/" rel="noopener nofollow" target="_blank"&gt;Poet.so&lt;/a&gt;, built by Callum Mckeefery generated beutiful embeded social media posts. It supports content fetched from Twitter, LinkedIn and Shopify, and has several themes and customization options.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fCsH518/11-poet.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;14. &lt;a href="https://tweetlet.net/" rel="noopener nofollow" target="_blank"&gt;Tweetlet&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://tweetlet.net/" rel="noopener nofollow" target="_blank"&gt;Tweetlet&lt;/a&gt; by Basharath is very similar to Poet, but also supports embedding code, images, text and Tweets.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/7rD7zNb/12-tweetlet.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;General&lt;/h2&gt;

&lt;h3&gt;17. &lt;a href="https://mockoops.mohitya.dev/create" rel="noopener nofollow" target="_blank"&gt;Mockoops&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://mockoops.mohitya.dev" rel="noopener nofollow" target="_blank"&gt;Mockoops&lt;/a&gt; by  Mohit Yadav lets you turn any screen recording (or image) into a beautiful animated video&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/55MYFxC/mockoops.gif" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;18. &lt;a href="https://www.fabpic.app/" rel="noopener nofollow" target="_blank"&gt;Fabpic&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://www.fabpic.app/" rel="noopener nofollow" target="_blank"&gt;Fabpic&lt;/a&gt; by Shadab Alam adds beautiful gradient backgrounds, drop shadow and borders to any image&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/18LRQTN/13-fabpic.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;19. &lt;a href="https://superblog.ai/supershots" rel="noopener nofollow" target="_blank"&gt;SuperShots&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://superblog.ai/supershots" rel="noopener nofollow" target="_blank"&gt;SuperShots&lt;/a&gt; by Superblog is a simple tool to add gradient backgrounds to a picture. It's similar to &lt;a href="https://prettysnap.app/" rel="noopener nofollow" target="_blank"&gt;PrettySnap&lt;/a&gt;, which also supports patterned backgrounds&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/JmCzBSn/14-superblog.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;h3&gt;20. &lt;a href="https://prettysnap.app/" rel="noopener nofollow" target="_blank"&gt;PrettySnap.app&lt;/a&gt;&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Finally, &lt;a href="https://prettysnap.app/" rel="noopener nofollow" target="_blank"&gt;PrettySnap.app&lt;/a&gt; applies custom patterned backgrounds, shadows, and border radius to images. It's made by &lt;a href="https://twitter.com/kanga_bru" rel="noopener nofollow" target="_blank"&gt;@kanga_bru&lt;/a&gt;, and there's also a &lt;a href="https://prettysnap.io/" rel="noopener nofollow" target="_blank"&gt;Windows App&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/NVFm75L/pretty-snap.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;APIs&lt;/h2&gt;

&lt;h3&gt;21. &lt;a href="https://apiflash.com/" rel="noopener nofollow" target="_blank"&gt;API Flash&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/SvsKdgy/Screenshot-from-2022-11-26-01-21-27.png" alt="screenshot"&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There's plenty of screenshot API services out there, but API Flash is one that I've personally used across countless projects. You can generate a URL which resolves to a screenshot of your website and pass in parameters to configure it (like custom CSS, element selector, device + resolution, timeout delay, no ads / cookie banner, etc).&lt;br&gt;
Although you only get 100 scr/ month on the free plan, there's an option to set the cache time, which makes it easy to stay within that limit.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2&gt;Screenshot Apps&lt;/h2&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;a href="https://flameshot.org" rel="noopener nofollow" target="_blank"&gt;Flameshot&lt;/a&gt; is a free and open source (&lt;a href="https://github.com/flameshot-org/flameshot" rel="noopener nofollow" target="_blank"&gt;here on GitHub&lt;/a&gt;), cross-platform (C++ for Win, Mac and Linux), highly customisable desktop screenshot app. It's simple to use, includes some nice features like an in-app screenshot editor, and most importantly has an integrated command line interface. For Windows users, &lt;a href="https://getsharex.com/" rel="noopener nofollow" target="_blank"&gt;ShareX&lt;/a&gt; is super powerful&lt;/p&gt;

&lt;p&gt;If you use Firefox, you can &lt;a href="https://support.mozilla.org/en-US/kb/take-screenshots-firefox?redirectslug=firefox-screenshots&amp;amp;redirectlocale=en-US" rel="noopener nofollow" target="_blank"&gt;capture screenshots&lt;/a&gt; right from your browser. Just right-click on any part of a website and select "Take Screenshot" (or &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;S&lt;/kbd&gt;). From here, you can either capture the entire page, a selection, or specific HTML nodes.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.gimp.org/" rel="noopener nofollow" target="_blank"&gt;Gimp&lt;/a&gt; can also take screenshote (although it needs to e launched first), just navigate to File --&amp;gt; Create --&amp;gt; Screenshot, select your options, and hit Snap.&lt;/p&gt;

&lt;p&gt;Finally, the &lt;a href="https://imagemagick.org/" rel="noopener nofollow" target="_blank"&gt;ImageMagick&lt;/a&gt; package includes a &lt;a href="https://imagemagick.org/script/import.php" rel="noopener nofollow" target="_blank"&gt;screenshot util&lt;/a&gt; with plenty of customisation options, and can be invoked from the command line (with &lt;code class="prettyprint"&gt;import&lt;/code&gt;), or integrated into a script.&lt;/p&gt;

&lt;p&gt;And if you need to create visual step-by-step guides, there's several extensions that will help with this, including: &lt;a href="https://www.tango.us/" rel="noopener nofollow" target="_blank"&gt;Tango.us&lt;/a&gt;, &lt;a href="https://scribehow.com/" rel="noopener nofollow" target="_blank"&gt;ScribeHow&lt;/a&gt;, &lt;a href="https://www.minervaknows.com/" rel="noopener nofollow" target="_blank"&gt;Minervaknows&lt;/a&gt;, etc.&lt;/p&gt;

&lt;style&gt;
.post-body.p1 img, blockquote {
    max-width: 600px !important;
    width: 100%;
    margin: 0.5rem auto;
    border-radius: 5px;
}
.post-body.p1 h2 {
    font-size: 1.8rem !important;
    max-width: 800px;
    margin: 1rem auto 0.25rem auto;
    text-align: center;
}
.post-body.p1 h3 {
    font-size: 1.5rem !important;
    border-top: 3px solid var(--post-code-border-color);
    padding: 1rem 0 0;
    max-width: 600px;
    margin: 1rem auto;
}
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>50+ Awesome Dev Tool Tips üî•</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 13 Nov 2022 13:47:37 +0000</pubDate>
      <link>https://notes.aliciasykes.com/40065/50-awesome-dev-tool-tips</link>
      <guid>https://notes.aliciasykes.com/40065/50-awesome-dev-tool-tips</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;img class="banner-img" src="https://i.ibb.co/QQQRTdm/dev-tools-tips-banner.png"&gt;&lt;/p&gt;

&lt;p&gt;The browser developer tools are incredibly powerful, with new debugging and optimisation features being added every few months.&lt;/p&gt;

&lt;p&gt;The following post outlines 50+ awesome tips, that you can use to supercharge your web development experience.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Design Mode&lt;/h2&gt;

&lt;p&gt;Enabling &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/designMode" rel="noopener nofollow" target="_blank"&gt;design mode&lt;/a&gt; will make the entire web page editable, just by clicking and typing.&lt;/p&gt;

&lt;p&gt;To use it, open up the console and run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;designMode&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;on&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="https://i.ibb.co/MZPYGdt/01-design-mode.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Pretty Print&lt;/h2&gt;

&lt;p&gt;Raw files are usually minified, and therefore hard to read. Use the Pretty Print option to format it&lt;/p&gt;

&lt;p&gt;In the background, Chrome is creating a new file (names &lt;code class="prettyprint"&gt;filename.js:formatted&lt;/code&gt;), closing that file will undo the formatting.&lt;/p&gt;

&lt;p&gt;If doing this each time is getting boring, then there's an experimental setting to auto-enable pretty print for all sources. &lt;br&gt;
Under &lt;code class="prettyprint"&gt;‚ãÆ&lt;/code&gt; ‚Üí &lt;code class="prettyprint"&gt;Settings&lt;/code&gt; ‚Üí &lt;code class="prettyprint"&gt;Experiments&lt;/code&gt; Select &lt;code class="prettyprint"&gt;Automatically pretty print in the Sources Panel&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/2SRy5hw/02-pretty-print.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Command Pallet and Super Search&lt;/h2&gt;

&lt;p&gt;The command pellet gives you full access to every command available within the dev tools, and is super valuable for quick navigation.&lt;/p&gt;

&lt;p&gt;Type &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;P&lt;/kbd&gt; to open up the &lt;a href="https://developer.chrome.com/docs/devtools/command-menu/" rel="noopener nofollow" target="_blank"&gt;Command Menu&lt;/a&gt;, then start typing to filter commands and press enter to execute.&lt;/p&gt;

&lt;p&gt;In the same way, if you're only looking to find a function name, you can use &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;Shift&lt;/kbd&gt; + &lt;kbd&gt;O&lt;/kbd&gt; to filter methods across files.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/3pvG891/03-command-palet.gif" alt="demo"&gt;&lt;/p&gt;

&lt;p&gt;From the same menu, you can also search through all loaded resources by filename or code (HTML, CSS, JS, etc), all network requests, visible components, memory profiles, snippets and much more. Advanced features like RegEx are supported.&lt;/p&gt;

&lt;p&gt;For an app built with a framework, you'll probably see a lot of irrelevant files (like node&lt;em&gt;modules, webpack output, etc). You can hide this under ‚ãÆ ‚Üí Hide ignore-list sources. By default, this uses the smart `x&lt;/em&gt;google_ignorelist` to detect what's likely not relevant, but you can also add your own custom sources, specified by regex under Settings.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Snippets&lt;/h2&gt;

&lt;p&gt;So you've spent a while crafting a function in the console, and you plan on reusing it across various sites later. That's where &lt;a href="https://developer.chrome.com/docs/devtools/javascript/snippets/" rel="noopener nofollow" target="_blank"&gt;snippets&lt;/a&gt; come in, they're invoked from the command pallet, and let you save code for later and execute it using the bang &lt;code class="prettyprint"&gt;!&lt;/code&gt; operator.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/NSK7SL6/18-snippets.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Live Expressions&lt;/h2&gt;

&lt;p&gt;Instead of repeatedly executing a command to monitor for changes, you can watch values in real-time using &lt;a href="https://developer.chrome.com/docs/devtools/console/live-expressions/" rel="noopener nofollow" target="_blank"&gt;Live Expressions&lt;/a&gt;. Just execute a command, then pin it using the eye icon to see changes reflected automatically.&lt;/p&gt;

&lt;p&gt;There's many use cases for this, but one I use often is when testing keyboard navigation of an app, pinning the &lt;code class="prettyprint"&gt;document.activeElement&lt;/code&gt; command will print a log of evertime the focused element changes, even once it's been removed from the GUI.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/mTLQ5CP/17-live-expressions.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Tracking Changes&lt;/h2&gt;

&lt;p&gt;We've all been there, you've been editing your app's HTML, CSS and JS through the dev tools and got things working perfectly, but you can't remember exactly what you changed. That's where the &lt;a href="https://developer.chrome.com/docs/devtools/changes/" rel="noopener nofollow" target="_blank"&gt;Changes Tab&lt;/a&gt; comes in. Access it through the command pallet (with Control+Shift+P, then type "Show Changes"), or through the lower draw.&lt;/p&gt;

&lt;p&gt;You'll then be able to see a diff output of all your changes. From here you can Copy changes to clipboard, or revert certain changes.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/4ShJ8Fn/19-diff-check.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Console Shorthand&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;$()&lt;/code&gt; - Short-hand for &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector" rel="noopener nofollow" target="_blank"&gt;Document.querySelector()&lt;/a&gt; (to select DOM elements, jQuery-style!)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;$$()&lt;/code&gt; - Same as above, but for &lt;code class="prettyprint"&gt;selectAll&lt;/code&gt; for when returning multiple elements in an array&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;$_&lt;/code&gt; - Returns value of last evaluated expression&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;$0&lt;/code&gt; - Returns the most recently selected DOM element (in the inspector)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;$1&lt;/code&gt;...&lt;code class="prettyprint"&gt;$4&lt;/code&gt; can also be used to grab previously selected UI elements&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;$x()&lt;/code&gt; - Lets you select DOM elements using an Xpath query&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;keys()&lt;/code&gt; and &lt;code class="prettyprint"&gt;values()&lt;/code&gt; - Shorthand for Object.getKeys(), will return an array of either obj keys or values&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;copy()&lt;/code&gt; - Copies stuff to the clipboard&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;monitorEvents()&lt;/code&gt; - Run command each time a given event is fireed&lt;/li&gt;
&lt;li&gt;For certain common console commands (like &lt;code class="prettyprint"&gt;console.table()&lt;/code&gt;), you don't need to type the preceding &lt;code class="prettyprint"&gt;console.&lt;/code&gt;, just run &lt;code class="prettyprint"&gt;table()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can clear the console at anytime using &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;L&lt;/kbd&gt;, using the clear button, or by running &lt;code class="prettyprint"&gt;clear()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There's many more console shorthand commands, &lt;a href="https://developer.chrome.com/docs/devtools/console/utilities/" rel="noopener nofollow" target="_blank"&gt;here's a full list&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Warning&lt;/strong&gt; These tricks only work within the dev tools console, and will not work in your code!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2&gt;Find Unused Code&lt;/h2&gt;

&lt;p&gt;Easily identify which bundles are the largest, and how much of their code is actually used, and what the load impact of each file is, using the &lt;a href="https://developer.chrome.com/docs/devtools/coverage/" rel="noopener nofollow" target="_blank"&gt;Coverage&lt;/a&gt; tool. This illustrates exactly which code is being loaded but never used, and what the cost of it is.&lt;/p&gt;

&lt;p&gt;Click the three dots, select coverage and reload the page. Any red bars indicate unused code, and will likely be making your app slower. Clicking an individual file will let you see specifically what code isn't being used.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/BPzqWvR/05-coverage-tool.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Rendering Panel&lt;/h2&gt;

&lt;p&gt;This tool is super useful for identifying elements that are being edited more often than possibly necessary, and which are likely negatively affecting performance and user experience.&lt;/p&gt;

&lt;p&gt;The frame rendering stats is specifically useful, for monitoring CPU and GPU usage, helping you identify things before they become a problem.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/YW2Rp9F/05-rendering-2.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Network Paint Times&lt;/h2&gt;

&lt;p&gt;Your probably familiar with the waterfall chart rendered by the Network tab, and how useful that is for detecting slower requests. But from here, you can also enable screenshots to see exactly what parts of your site will load visually for end users on slower connections.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/mF6YdF0/06-network-paint-times.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Network Timings&lt;/h2&gt;

&lt;p&gt;Clicking on an item shows headers and response, but head to the Timing tab, and you'll be able to see what stage the request was held up at, and specific server timings. Using the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server-Timing" rel="noopener nofollow" target="_blank"&gt;Server-Timing API&lt;/a&gt;, you can pass even more detailed info from your API to your client app, and view data in the Timings tab of the browser dev tools. To use this, just add the &lt;code class="prettyprint"&gt;Server-Timing&lt;/code&gt; header to your response data, and detailed charts will be visible in the dev tools.&lt;/p&gt;

&lt;p&gt;To find the total size of your web page, under the Network panel, check Disable Cache, reload the page, and the info bar at the bottom will display total size, total time, total requests and other key stats.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Inspect Network Requests&lt;/h2&gt;

&lt;p&gt;You likely already know this, but you can also view the request and response for any HTTP request your site makes, as well as view loading times and see where in the code it was triggered.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/yf2tHRw/07-network-timings.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Performance&lt;/h2&gt;

&lt;p&gt;It's really worth exploring the performance panel and all that it has to offer. Just hit the record button, then interact with your site like an end-user might. When you're finished, you'll have a really detailed breakdown of CPU usage, FPS and memory allocated to the heap. Where ever there's a spike in the timeline, that usually indicates an area of code that needs to be optimised. You can then investigate this further by drilling down on the flame chart, to see the full stack trace of everything that happened on the main thread.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/KKWKdtV/08-perf-monitor.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Identifying Memory Leaks&lt;/h2&gt;

&lt;p&gt;Modern browser automatically garbage-collect any data that is no longer being referenced to. But poorly written code can mean you have obsolete code references that build up over time causing a memory leak. This can be detrimental to performance and greatly hider user experience.&lt;/p&gt;

&lt;p&gt;Thankfully, they're not as hard to find or debug as you might have thought. Under the Memory tab, select "Allocation instrumentation on timeline", then hit record.&lt;br&gt;
The blue bars indicate memory that's still in use, and the grey bars show what was garbage collected. So a rapidly growing blue bar would be where your mem leak is happening, and you can then click that bar to see exactly what data objects they contain, and easily identify the cause.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/X3G0y21/09-mem-leaks-1.png" alt="demo"&gt;&lt;/p&gt;

&lt;p&gt;Worth also noting that the web page isn't the only source of memory leaks. They can also be caused by add-ons, the browser engine itself or even data caching. Use the Statistics view to see a breakdown of what data is using memory.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/pnbQdMC/09-mem-leaks-2.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Raw Memory Inspection&lt;/h2&gt;

&lt;p&gt;If you're building a web assembly app, this will be particularly important to you. From the &lt;a href="https://developer.chrome.com/docs/devtools/memory-inspector/" rel="noopener nofollow" target="_blank"&gt;memory inspector&lt;/a&gt;, you can drill down the scope, and inspect ArrayBuffer, TypedArray, DataView, and Wasm Memory. Here's a WASM demo:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/rHdHWPd/36-memory-inspector.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Test bfcache&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://web.dev/bfcache/" rel="noopener nofollow" target="_blank"&gt;bfcache&lt;/a&gt; is a browser feature that enables instant backward and forward navigation, it works differently from the HTTP cache because it stores a snapshot of the entire page in memory, which is what the user will see while the navigation is happening.&lt;/p&gt;

&lt;p&gt;In order for the bfcache feature to work effectively on your site, you need to &lt;a href="https://web.dev/bfcache/#optimize-your-pages-for-bfcache" rel="noopener nofollow" target="_blank"&gt;optimise for it&lt;/a&gt;. And that's where the &lt;a href="https://developer.chrome.com/docs/devtools/application/back-forward-cache/" rel="noopener nofollow" target="_blank"&gt;Back/Forward Cache Tester&lt;/a&gt; comes in. Under Application ‚Üí Back/forward cache tab, click "Test back/forward cache", and you'll be presented with the results which will list issues for each frame. Clicking each result will also give you instructions on how you can fix it.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/XDqkGjw/10-bfcache-test.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Full Refresh&lt;/h2&gt;

&lt;p&gt;Some errors are caused by cached content, and for those a normal refresh isn't enough. With the dev tools open, you can hold down the refresh button (for 2 seconds), and you'll see some additional refresh options, including "Empty Cache and Full Reload".&lt;br&gt;
This is also useful for measuring first-time load metrics for new users, when nothing is previously cached.&lt;/p&gt;

&lt;p&gt;To refresh all tabs at once, just reun &lt;code class="prettyprint"&gt;chrome://restart&lt;/code&gt; in the address bar.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/lighthouse/" rel="noopener nofollow" target="_blank"&gt;Lighthouse&lt;/a&gt; is an extremely useful (and easy!) tool for measuring &lt;a href="https://web.dev/learn-core-web-vitals/" rel="noopener nofollow" target="_blank"&gt;Core Web Vitals&lt;/a&gt; - accessibility, SEO, responsivness, performances, security, PWA compatibility, best practices and overall user experience.&lt;/p&gt;

&lt;p&gt;Just open the Lighthouse tab, and click "Start Scan".&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/M2yGPbv/11-lighthouse.png" alt="demo"&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse results can be exported in a range of formats, and there are various external viewers you can use to gain additional insight (like &lt;a href="https://googlechrome.github.io/lighthouse/viewer/" rel="noopener nofollow" target="_blank"&gt;this one&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Lighthouse scans can also be incorporated into your CI/CD system, so that you have constant visibility into your apps core vitals.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Page Size Breakdown&lt;/h2&gt;

&lt;p&gt;Understanding what data is being loaded into your site will help you reduce overall bundle size. This can be done from the Memory and Network tabs, but sometimes a more visual view helps put things into context.&lt;br&gt;
The Chrome Memory Treemap is really useful for this - to use, just run a Lighthouse scan, export the results in JSON, then import it into &lt;a href="https://googlechrome.github.io/lighthouse/treemap/" rel="noopener nofollow" target="_blank"&gt;googlechrome.github.io/lighthouse/treemap/&lt;/a&gt;.&lt;br&gt;
You can click any element, to zoom in and inspect additional info.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/SPYsyYs/32-memory-treemap.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Record User Flows&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; &lt;em&gt;(This feature is still in beta, and currently requires Chrome Dev Eddition)&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/devtools/recorder/" rel="noopener nofollow" target="_blank"&gt;Record, reply and audit user flows&lt;/a&gt; under the audit panel. Just click Start new Recording, enter a name and hit go. Everything the user does, including mouse moves, keypresses, pauses and more will be logged. You can then use Replay to view back the users journey.&lt;/p&gt;

&lt;p&gt;In the replay settings each step can be expended to view details, you can also edit, add and remove steps in real-time. There are additional options for simulating things like environment of slow network connection. This is super useful for user testing.&lt;/p&gt;

&lt;p&gt;You can also import and export user flows as a Pupateer scripts, to share with others.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Advanced User Flow Operations&lt;/h2&gt;

&lt;p&gt;The recorder tool has many other valuable features which often go under-used. Being aware of what you can do, will help you supercharge your user testing.&lt;/p&gt;

&lt;p&gt;Examples of when this can be useful include: sending the exact steps to recreate a bug to another developer, demonstrating to an analyst exactly how users behaved during a testing session, or slowing things down to debug complex issues.&lt;/p&gt;

&lt;p&gt;Once you've recorded a user flow, you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Replay it (obviously!)&lt;/li&gt;
&lt;li&gt;View detailed performance metrics over time&lt;/li&gt;
&lt;li&gt;Export it (as JSON, Puppeteer or Puppeteer reply script)&lt;/li&gt;
&lt;li&gt; Edit the flow (then re-import it)&lt;/li&gt;
&lt;li&gt;  Share user flows with others (for testing or demonstration)&lt;/li&gt;
&lt;li&gt;  Configure replay settings, such as apply throttling or device limitations&lt;/li&gt;
&lt;li&gt;  Replay in slow mo, with detailed debugging&lt;/li&gt;
&lt;li&gt;  Apply breakpoints, to pause and inspect at certain steps&lt;/li&gt;
&lt;li&gt;  Import user flows generated by other tools&lt;/li&gt;
&lt;li&gt;  Add additional steps, or remove steps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are several third-party tools that let you do even more, as well as import / export in additional formats, like the &lt;a href="https://chrome.google.com/webstore/detail/cypress-chrome-recorder/fellcphjglholofndfmmjmheedhomgin" rel="noopener nofollow" target="_blank"&gt;Cypress add-on&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/nightwatch-chrome-recorde/nhbccjfogdgkahamfohokdhcnemjafjk/" rel="noopener nofollow" target="_blank"&gt;Nightwatch add-on&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/testing-library-recorder/pnobfbfcnoeealajjgnpeodbkkhgiici" rel="noopener nofollow" target="_blank"&gt;Jest add-on&lt;/a&gt;, &lt;a href="https://chrome.google.com/webstore/detail/webdriverio-chrome-record/pllimkccefnbmghgcikpjkmmcadeddfn" rel="noopener nofollow" target="_blank"&gt;WebDriver add-on&lt;/a&gt; and more.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Pausing Execution with Breakpoints&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/devtools/javascript/breakpoints/" rel="noopener nofollow" target="_blank"&gt;Breakpoints&lt;/a&gt; are an absolute essential for debugging. They enable you to pause everything at a certain point to inspect state and discover issues. You're probably already aware that you can trigger a breakpoint at a certain point, either with the &lt;code class="prettyprint"&gt;debugger&lt;/code&gt; statement statement, or by clicking the margin (in the sources panel, or with a compatible IDE). But there's several other types of breakpoints, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Conditional line-of-code - On an exact region of code, but only when some other condition is true.&lt;/li&gt;
&lt;li&gt;DOM - On the code that changes or removes a specific DOM node, or its children.&lt;/li&gt;
&lt;li&gt;XHR - When an XHR URL contains a string pattern.&lt;/li&gt;
&lt;li&gt;Event listener - On the code that runs after an event, such as click, is fired.&lt;/li&gt;
&lt;li&gt;Exception - On the line of code that is throwing a caught or uncaught exception.&lt;/li&gt;
&lt;li&gt;Function - Whenever a specific function is called.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can also make conditional breakpoints (represented as orange tabs), which will only pause the execution when certain conditions are met. To do so, just right-click, select Edit Breakpoint, then use JavaScript to resolve a boolean using current state. &lt;/p&gt;

&lt;p&gt;If there's a specific method you want to pause on, just run &lt;code class="prettyprint"&gt;debug(methodName)&lt;/code&gt; to start, and &lt;code class="prettyprint"&gt;undebug(methodName)&lt;/code&gt; to end.&lt;/p&gt;

&lt;p&gt;Once a breakpoint has been hit, you can interact with any current state through the console.&lt;/p&gt;

&lt;p&gt;TODO&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Remote Debugging&lt;/h2&gt;

&lt;p&gt;As any app developer will tell you, nothing beats testing on a real device. But when it comes to the web, the browser debugging tools are essential. That's where remote debugging comes in - it enables you to test on a physical device while continuing to have the debugging power of the browser tools.&lt;/p&gt;

&lt;p&gt;The same can work in the opposite direction, where you run your dev environment locally or host it remotely, but access it on an external device.&lt;/p&gt;

&lt;p&gt;This does require either port forwarding or custom domain mapping (but neither are as scary as they sound!). The &lt;a href="https://developer.chrome.com/docs/devtools/remote-debugging/local-server/" rel="noopener nofollow" target="_blank"&gt;docs&lt;/a&gt; provide setup instructions and proxy configurations.&lt;/p&gt;

&lt;p&gt;And if you're developing a native Android app, which has embedded web views, you can use the browser's dev tools to debug these too (&lt;a href="https://developer.chrome.com/docs/devtools/remote-debugging/webviews/" rel="noopener nofollow" target="_blank"&gt;docs&lt;/a&gt;).&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Mock Location and Sensors&lt;/h2&gt;

&lt;p&gt;In a similar way to the iOS and Android emulators, you can simulate various sensors and hardware settings. This is useful if the app your developing relies on any of this data. Under the Sensors tab, you'll be able to change your location, time zone, locale, screen lock, orientation, motion / acceleration etc.&lt;/p&gt;

&lt;p&gt;If you frequently find yourself switching between locations or locales, you can add these under Settings --&amp;gt; Locations.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fpCdNLz/13-sensors.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Death by Errors, no more!&lt;/h2&gt;

&lt;p&gt;If you're wading through a large code base or dealing with a poorly written library, and drowning in exceptions which are distracting you from what you're actually trying to debug, then under the settings you can opt to ignore any exceptions thrown by certain scripts or from a given framework. The ignore list can be specified by regex patterns for specific targeting. &lt;/p&gt;

&lt;p&gt;You can auto-hide source files for most major frameworks by heading to  ‚ãÆ  ‚Üí Ignore List, and selecting "Automatically add known third-party sources to Ignore list". This will make the stack trace in the console show less irrelevant info. You'll still be able to view the full stack for any given error, just by clicking "Show more".&lt;/p&gt;

&lt;p&gt;By default the console will show output from all contexts. This means if you've got an extension installed that's throwing an error it will be cluttering up your console. Just right-click on the file name, and under Filter select Hide messages from [ext name]. You can unhide these at anytime from the same menu.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;View and Edit Storage&lt;/h2&gt;

&lt;p&gt;While we're in the Application tab, it's worth mentioning how essential these tools are for viewing, deleting and editing data stored in local storage, session storage, cookies, IndexedDB, etc.&lt;/p&gt;

&lt;p&gt;From the storage tab, you can also see a breakdown of how much your site is storing, and simulate restraints like custom storage quotas or disabling cookies.&lt;/p&gt;

&lt;p&gt;Note that stored data is (usually) only accessible from the domain which set that data. So if you're debugging stored data in the console for any context other than the default one, you'll need to use the frame dropdown at the top to switch domains.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Debug Background Services&lt;/h2&gt;

&lt;p&gt;If you app includes notifications, sync, background fetch or anything else that should continue running even when the app / current tab is not in the foreground, then these tools are invaluable. Under the Application tab's &lt;a href="https://developer.chrome.com/docs/devtools/javascript/background-services/" rel="noopener nofollow" target="_blank"&gt;Background Services&lt;/a&gt; section, you can click a API category, start recording, then put your app into the background. When you come back, you'll be able to see specifically which events fired, and inspect each one.&lt;/p&gt;

&lt;p&gt;Side note, you can view all registered service workers, manage, debug and de-register them from: &lt;code class="prettyprint"&gt;chrome://serviceworker-internals&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/v36CkSL/30-service-workers.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;HTTPS Security Checks&lt;/h2&gt;

&lt;p&gt;The Security tab provides a good starting point, for when verifying common HTTPS issues on your site. It checks for, and highlights common SSL issues, including non-secure main origins and mixed content. You can also check web certificate chains in more detail.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/frhmCr5/14-security-tab.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Web Auth&lt;/h2&gt;

&lt;p&gt;This ones a bit more niche, but absolutely essential if you're building anything with soft-tokens or 2FA. The WebAuthn tool will let you generate and emulate virtual authenticator devices using a variety of protocols (2FA, FIDO/CTAP) and interface types (USB, NFC, Bluetooth, internal) with additional options for user verification, resident keys, etc.&lt;/p&gt;

&lt;p&gt;Here's a quick demo:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/ngtNnGd/15-webauthn.gif" alt="demo"&gt;&lt;/p&gt;

&lt;p&gt;For an overview of web auth, see &lt;a href="https://webauthn.guide/" rel="noopener nofollow" target="_blank"&gt;WebAuthn.guide&lt;/a&gt;, or view the &lt;a href="https://w3c.github.io/webauthn/" rel="noopener nofollow" target="_blank"&gt;W3 spec&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On a side-note, there's an interesting article explaining &lt;a href="https://developer.chrome.com/blog/webauthn-tab/" rel="noopener nofollow" target="_blank"&gt;how they built the webauthn tab&lt;/a&gt;. &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Accessibility Tools&lt;/h2&gt;

&lt;p&gt;Accessibility is not just important for inclusion, it's also a legal requirement for most public-facing apps and services. If you're not yet sure the core concepts of web accessibility standards, I recommend the &lt;a href="https://web.dev/learn/accessibility/" rel="noopener nofollow" target="_blank"&gt;Web.Dev Accessibility Tutorial&lt;/a&gt;, which provides a great summary.&lt;/p&gt;

&lt;p&gt;Lighthouse provides a good starting point for auditing accessibility, and is easy to use, and built directly into the developer tools.&lt;/p&gt;

&lt;p&gt;The CSS tools also have a built-in contrast tool, which will help you apply readable colors to your site. The inspect pop-up will show a warning, and you can analyze this further in the Styles pain.&lt;/p&gt;

&lt;p&gt;Beyond that, the Accessibility tab let's you view an element's position in the DOM tree, ARIA attributes, and computed accessibility properties, all of which are used by accessibility tools like screen readers.&lt;/p&gt;

&lt;p&gt;There are additional add-ons which can give you much more powerful insights. Mainly, the &lt;a href="https://chrome.google.com/webstore/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd" rel="noopener nofollow" target="_blank"&gt;axe DevTools&lt;/a&gt;. This will show you detailed results and instructions of how to fix.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Screenshots&lt;/h2&gt;

&lt;p&gt;You can capture screenshots directly from the dev tools, including: full-page, specific area or single-node screenshots.&lt;br&gt;
Either open up the command pallet and type screenshot, or for an &lt;a href="https://developer.chrome.com/blog/new-in-devtools-86/#capture-node-screenshot" rel="noopener nofollow" target="_blank"&gt;element screenshot&lt;/a&gt;, just right-click on the DOM element in the inspector and select Capture Screenshot.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/txXZ0wy/20-screenshot-nodes.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Super-Copying&lt;/h2&gt;

&lt;p&gt;From the elements tab, right-click on an element and under Copy, there are several different options. Copy selector will give you a CSS selector to target that element, similarly copy JS path will give you a query string to select the element in JavaScript, and copy outer HTML will copy the actual HTML. Copying the styles of an element, will give you all the computed CSS for a given element.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Animations Timeline&lt;/h2&gt;

&lt;p&gt;The animations panel (opened by clicking the 3-dots) lets you record any keyframe animations, and then scrub through them to inspect the actual CSS properties that are affected.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/KV35Z8k/21-animation-scrubber.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Forcing Elements State&lt;/h2&gt;

&lt;p&gt;If you need to preview the styles of a given element in a particular state (e.g. :hover, :visited, :active, :focus, etc), then either right click it and select Change pseudo class, of from the the styles editor click the :hov icon.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/j8LNrwf/38-phsudo-classes.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;CSS Sizes and Units&lt;/h2&gt;

&lt;p&gt;Do you ever inspect an element, then hold the arrow keys up/ down for literally ever until the size looks right? Well you can also drag the units horizontally to easily preview  different sizes. Similarly, for angles you can use the clock rotater to preview / apply any value. Got the wrong units? Just hover over the size, and click the drop down to quickly switch units.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/6X35LMG/28-size-tools.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Color Pallets&lt;/h2&gt;

&lt;p&gt;Most apps include only a handful of colors, and usually when your changing a color, it will be to one of those values. That's why the palette tool is so useful. By default, there are several pre-made palettes: from your pages current colors, your pages CSS variabels, the Material pelette and an empty custom palette. Switch between them with the arrows.&lt;/p&gt;

&lt;p&gt;While we're here, it's worth also touching on just how powerful the color tool is. From here you can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Change color shades, hue and transparency - with live preview&lt;/li&gt;
&lt;li&gt;Convert between units (hex, RGB(A), HSL(A), HWB(A)) &lt;/li&gt;
&lt;li&gt;Use the eye dropper to pick any color from your screen&lt;/li&gt;
&lt;li&gt;Copy color value to the clipboard&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're not already doing so, try to make use of CSS variables (not SASS vars) throughout your app. That way you can update the color in one place, and have it previewed/ applied everywhere. In the dev tools, click a variables name to go to original definition, from there you can modify it.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/VCGPNqq/27-color-picker.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Easy Box Shadows&lt;/h2&gt;

&lt;p&gt;Box shadows are one of those things that are best previewed live. That's why the &lt;a href="https://developer.chrome.com/docs/devtools/css/reference/#shadow-editor" rel="noopener nofollow" target="_blank"&gt;shadow-editor&lt;/a&gt; is so useful. Just click the icon next to any shadow to preview different X/Y offsets, blur, spread and directions of both inset and normal shadows.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/K72x2pJ/26-box-shaddows.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Easy Animations&lt;/h2&gt;

&lt;p&gt;By clicking the &lt;a href="https://developer.chrome.com/docs/devtools/css/animations/" rel="noopener nofollow" target="_blank"&gt;animation&lt;/a&gt; option, you can easily preview various transitions and effects.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fdJkyDn/37-animation-editor.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Responsive Design Mode&lt;/h2&gt;

&lt;p&gt;Easily check that your site displays nicely on a range of devices, using the Responsive Design Mode.&lt;/p&gt;

&lt;p&gt;By default only a few devices are shown, but head to Settings --&amp;gt; Devices and you'll be able to enable a whole bunch more from the list, or even create your own custom device with dimensions, user agent, platform, architecture and more.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/bmh54tv/33-responsive-mode.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Badges&lt;/h2&gt;

&lt;p&gt;You may have notices a little chip/ badge next to certain elements in the Elements tab. These are &lt;a href="https://developer.chrome.com/docs/devtools/elements/badges/" rel="noopener nofollow" target="_blank"&gt;Badges&lt;/a&gt;, and can be used to apply overlays or add extra features to certain element types including Grids, Flex layouts, Ads, Scroll-Snaps, Containers, Slots and more. To enable badges, right-click an element in the DOM tree and select Badge settings, then check / uncheck what you'd like to be visible.&lt;/p&gt;

&lt;p&gt;Many of these badges open the door to additional features, like the &lt;a href="https://developer.chrome.com/docs/devtools/css/flexbox/" rel="noopener nofollow" target="_blank"&gt;Flexbox Debugger&lt;/a&gt; and &lt;a href="https://developer.chrome.com/docs/devtools/css/grid/" rel="noopener nofollow" target="_blank"&gt;Grid layout debugger&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/C2WhDcS/25-css-badges.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Rulers&lt;/h2&gt;

&lt;p&gt;There's always that one front-end dev, so keen to please the designers that he's using an actual ruler to measure the elements on his screen. Well no need for that, or any dodgy ruler browser extensions, as this feature is built directly into the dev tools. Enable it under ‚ãÆ ‚Üí  Settings ‚Üí Preferences ‚Üí Elements ‚Üí "Show rulers on hover".&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/JQ98R9n/23-rulers.gif" alt="demo"&gt;&lt;/p&gt;

&lt;p&gt;In Firefox, there is a built-in &lt;a href="https://firefox-source-docs.mozilla.org/devtools-user/measure_a_portion_of_the_page/index.html" rel="noopener nofollow" target="_blank"&gt;ruler feature&lt;/a&gt;, available through the Toolbox Buttons in the top-right.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/85fDCMB/34-ruler.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Style Overview&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.chrome.com/docs/devtools/css-overview/" rel="noopener nofollow" target="_blank"&gt;CSS Overview&lt;/a&gt; tab helps you quickly get an overview of CSS improvments you can make. The aim is consistency (colors, fonts, breakpoints, styles, etc).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Color Pallet - Shows all colors used on your site. Useful for identifying elements which don't conform to your desired theme / designs&lt;/li&gt;
&lt;li&gt;Fonts - Displays all typefaces, sizes and variations used in your page. A good webpage will be consistent with only a few fonts and text styles.&lt;/li&gt;
&lt;li&gt;Media queries - Outputs all breakpoints used in your site, sorted by highest occurrence. You should aim to keep them consistent to make responsive testing easier&lt;/li&gt;
&lt;li&gt;Unused Declarations - Lists key information about any unused declarations as well as styles that have no effect. Removing these will speed up load times, and make CSS easier to read.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/VvT8Shq/24-css-overview.gif" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Layers&lt;/h2&gt;

&lt;p&gt;The Layers panel (more tools ‚Üí Layers) will show what's happening  both off screen and on additional layers (with 3d mode).&lt;/p&gt;

&lt;p&gt;It's particularly useful for visualising how specific animations are working, from a functional perspective, without having to wade through a bunch of keyframes and obfuscated code.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/1J2B6sC/29-css-layers.gif" alt="demo"&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/mvZZD5s/12-layers.png" alt="demo"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Saving Changes to Disk&lt;/h2&gt;

&lt;p&gt;There are two methods to save or persist changes you've made in the dev tools. Workspaces and Local Overrides.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/docs/devtools/workspaces/" rel="noopener nofollow" target="_blank"&gt;Workspaces&lt;/a&gt; enable you to save changes you make in the devtools directly to your working copy on disk&lt;br&gt;
Workspaces can be setup under Sources ‚Üí File System ‚Üí Add Folder. They support HTML, CSS and JavaScript and content can be edited, previewed and saved directly through the sources panels. Certain frameworks require some extra setup to get properly working.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://developer.chrome.com/blog/new-in-devtools-65/#overrides" rel="noopener nofollow" target="_blank"&gt;Local Overrides&lt;/a&gt; enable you to persist changes across sessions (but without effecting original source files)&lt;br&gt;
Overrides can be setup under Sources ‚Üí Overrides. You can use the Changes menu to preview / export a diff of what you've changed.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Automation&lt;/h2&gt;

&lt;p&gt;For more advanced tasks, everything in the developer tools can be automated, via the &lt;a href="https://developer.chrome.com/docs/extensions/reference/automation/" rel="noopener nofollow" target="_blank"&gt;Automation APIs&lt;/a&gt; using &lt;a href="https://w3c.github.io/webdriver/" rel="noopener nofollow" target="_blank"&gt;WebDriver Protocol&lt;/a&gt; (which is what tools like &lt;a href="https://www.selenium.dev/documentation/webdriver/bidirectional/chrome_devtools/" rel="noopener nofollow" target="_blank"&gt;Selenium use&lt;/a&gt;). As an example, see the &lt;a href="https://www.npmjs.com/package/devtools" rel="noopener nofollow" target="_blank"&gt;webdriver devtools&lt;/a&gt; package.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Familiar Shortcuts&lt;/h2&gt;

&lt;p&gt;So almost everything within the browser developer tools has keyboard shortcuts, here's the &lt;a href="https://developer.chrome.com/docs/devtools/shortcuts" rel="noopener nofollow" target="_blank"&gt;full list&lt;/a&gt;. But if you're struggling to memorise them all, then you can actually switch to familiar VS Code bindings. Under Settings --&amp;gt; Shortcuts, under the Match shortcuts from preset menu, select Visual Studio Code.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Dark Mode&lt;/h2&gt;

&lt;p&gt;Finally, but by far the most important tip of all: dev tools dark mode!&lt;/p&gt;

&lt;p&gt;Under Settings --&amp;gt; Preferences --&amp;gt; Appearances --&amp;gt; Theme, use the dropdown to switch from Light to Dark, and immediately 10x your developer experience. Because like they say... bugs are attracted to the light üêõüî¶&lt;/p&gt;

&lt;p&gt;And if you're too cool for the default dark mode, you can write your own stylesheet, then enable the custom loading of CSS! There's a few pre-made stylesheets and an extension available &lt;a href="https://github.com/micjamking/devtools-author" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Useful Add-Ons&lt;/h2&gt;

&lt;p&gt;We're not quite done... so far we've only covered the built-in dev tools, but there are a bunch of super useful add-ons/ extensions&lt;/p&gt;

&lt;p&gt;If you're working with a specific framework (like React, Svelte, Vue, etc), then adding their dev tools with give you additional debugging power over components, state and more. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi" rel="noopener nofollow" target="_blank"&gt;React Dev Tools&lt;/a&gt; - Inspect React component hierarchies and profile data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd" rel="noopener nofollow" target="_blank"&gt;Redux Dev Tools&lt;/a&gt; - Debug redux data and monitor state changes &lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/graphql-network-inspector/ndlbedplllcgconngcnfmkadhokfaaln" rel="noopener nofollow" target="_blank"&gt;GraphQL Network Inspector&lt;/a&gt; - Inspect GQL requests with support for relay batching&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd" rel="noopener nofollow" target="_blank"&gt;Vue Dev Tools&lt;/a&gt; - Debug component hierarchy and state in Vue apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/svelte-devtools/ckolcbmkjpjmangdbmnkpjigpkddpogn" rel="noopener nofollow" target="_blank"&gt;Svelte Dev Tools&lt;/a&gt; - Inspect the Svelte state and component hierarchies &lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/angular-devtools/ienfalfjdbdpebioblfackkekamfmbnh" rel="noopener nofollow" target="_blank"&gt;Angular Dev Tools&lt;/a&gt; - Preview state of directives of Angular component instances&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/meteor-devtools-evolved/ibniinmoafhgbifjojidlagmggecmpgf" rel="noopener nofollow" target="_blank"&gt;Meteor Dev Tools&lt;/a&gt; - Debug Meteor apps&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Beyond that, almost everything else can be done nativity / without additional extensions, there's still a few QoL add-ons that can be helpful, but keep in mind, that if you use any of these, you should create a separate Dev profile within your browser, as otherwise they may negatively effect you privacy (installed extensions make you more identifiable).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/visbug/cdockenadnadldjbbgcallicgledbeoc/" rel="noopener nofollow" target="_blank"&gt;Visbug&lt;/a&gt; - Interact with and modify any websites, without needing any HTML or CSS knowledge&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk" rel="noopener nofollow" target="_blank"&gt;Lighthouse&lt;/a&gt; - Automated performance, quality and correctness checker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/designer-tools/jiiidpmjdakhbgkbdchmhmnfbdebfnhp" rel="noopener nofollow" target="_blank"&gt;Designer Tools&lt;/a&gt; - Grids and rulers for in-browser measurement and alignment &lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/motion-devtools/mnbliiaiiflhmnndmoidhddombbmgcdk" rel="noopener nofollow" target="_blank"&gt;Motion Tools&lt;/a&gt; - Inspect and design complex CSS animations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/perfectpixel-by-welldonec/dkaagdgjmgdmbnecmcefdhjekcoceebi" rel="noopener nofollow" target="_blank"&gt;Pixel Perfect&lt;/a&gt; - Overlay designs over webpages for building pixel perfect pages&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/cpu-and-memory-performanc/nmpbhigddhbbhopeeagpnnmnihgagbfk" rel="noopener nofollow" target="_blank"&gt;CPU + Mem Performance Monitor&lt;/a&gt; - Add system resources overlay to sites&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/meta-seo-inspector/ibkclpciafdglkjkcibmohobjkcfkaef" rel="noopener nofollow" target="_blank"&gt;SEO Inspector&lt;/a&gt; - Easy inspection of Meta tags for SEO&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/save-all-resources/abpdnfjocnmdomablahdcfnoggeeiedb" rel="noopener nofollow" target="_blank"&gt;Save all Resources&lt;/a&gt; - Easily download everything associated with a site, preserving directory structure&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/multiproxy-tool/olonnmcaipjmcckefehcmaolkpigdjji" rel="noopener nofollow" target="_blank"&gt;Multi-Proxy&lt;/a&gt; - Connect to multiple proxies (simultaneously) with IP matching and blocking&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/accessibility-insights-fo/pbjjkligggfmakdaogkfomddhfmpjeni" rel="noopener nofollow" target="_blank"&gt;Accessibility Insights&lt;/a&gt; - Get an overview of accessibile navigation issues&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/check-my-links/ojkcdipcgfaekbeaelaapakgnjflfglf%5D" rel="noopener nofollow" target="_blank"&gt;Check my Links&lt;/a&gt; - Quickly find and highlight all dead links within a page&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/wappalyzer-technology-pro/gppongmhjkpfnbhagpmjfkannfbllamg" rel="noopener nofollow" target="_blank"&gt;Weppalizer&lt;/a&gt; - Similar to &lt;a href="https://builtwith.com/" rel="noopener nofollow" target="_blank"&gt;BuiltWith&lt;/a&gt;, quickly check what tech a site is built using&lt;/li&gt;
&lt;li&gt;&lt;a href="https://chrome.google.com/webstore/detail/octotree-github-code-tree/bkhaagjahfmjljalopjnoealnfndnagc" rel="noopener nofollow" target="_blank"&gt;Octotree&lt;/a&gt; - Adds sidebar on GitHub for much easier navigation&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Are we finished yet?&lt;/h2&gt;

&lt;p&gt;Alright, this time I swear it's the last section, but I couldn't resist mentioning this too!&lt;/p&gt;

&lt;p&gt;There is SO MUCH more to the browser developer tools than covered here. Even if you've been a web developer for several decades, I'm pretty sure there's still a whole bunch of handy features that even you've not yet come across. So don't be afraid to go exploring!&lt;/p&gt;

&lt;p&gt;The best features are still experimental. You can try them out by enabling them under Settings --&amp;gt; Experiments. There's a link next to each item where you can view a usage tutorial as well as the API docs.&lt;/p&gt;

&lt;p&gt;Other Browsers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://firefox-dev.tools/" rel="noopener nofollow" target="_blank"&gt;Firefox dev tools&lt;/a&gt; has a very similar feature set and layout to Chrome, but includes a few advanced features (around audio, shaders)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.apple.com/safari/tools/" rel="noopener nofollow" target="_blank"&gt;Safari's developer tools&lt;/a&gt; are lagging behind in terms of features, but are sometimes still required for iOS testing.&lt;/li&gt;
&lt;li&gt;Other Chromium-based browsers (like Edge, Brave, Vivaldi, etc) inherit from the same source as Chrome, and as such have virtually identical dev tools.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following sources are great for staying up-to-date with the latest in debug tools:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.chrome.com/tags/new-in-devtools/" rel="noopener nofollow" target="_blank"&gt;What's New in DevTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/GoogleChromeDevelopers" rel="noopener nofollow" target="_blank"&gt;Chrome Developers on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
p img {
background: #0b1021;
border-radius: 4px;
border: 2px solid #141b33;
margin: 0.5rem auto;
box-shadow: 1px 2px 4px 2px #00000091;
max-width: 750px;
}
img.banner-img {
border: none;
box-shadow: none;
max-width: 450px !important;
opacity: 0.85;
float: right;
}
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fun with console.log()  üíø</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 11 Sep 2022 20:00:15 +0000</pubDate>
      <link>https://notes.aliciasykes.com/38041/fun-with-console-log</link>
      <guid>https://notes.aliciasykes.com/38041/fun-with-console-log</guid>
      <description>&lt;p&gt;&lt;p&gt;If you've ever developed a web app, you'll be familiar with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/log" rel="noopener nofollow" target="_blank"&gt;console.log(...)&lt;/a&gt;, the method which prints data to the developer console; useful for debugging, logging and testing.&lt;/p&gt;

&lt;p&gt;Run &lt;code class="prettyprint"&gt;console.log(console)&lt;/code&gt;, and you'll see that there's much more to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console" rel="noopener nofollow" target="_blank"&gt;console&lt;/a&gt; object.&lt;br&gt;
This post briefly outlines the top 10 neat tricks you can use to level up your logging experience.&lt;/p&gt;

&lt;h4&gt;Contents&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#tables"&gt;Tables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#groups"&gt;Groups&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#styled-logs"&gt;Styles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#time"&gt;Times&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#assert"&gt;Asserts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#count"&gt;Counts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#trace"&gt;Traces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dir"&gt;Directory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#debug"&gt;Debugs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log-levels"&gt;Log Levels&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#multi-value-logs"&gt;Multi-Values&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#log-string-formats"&gt;Log Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#clear"&gt;Clear&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="tables"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Tables&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/table" rel="noopener nofollow" target="_blank"&gt;console.table()&lt;/a&gt; method prints objects/ arrays as a neatly formatted tables.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;table&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Time Stamp&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;platform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Browser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;appCodeName&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Language&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;language&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/HDmBv62/console-table.png" title="Example output of console.table" alt="Screenshot showing an example output of console.table"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Groups&lt;/h2&gt;

&lt;p&gt;Group related console statements together with collapsible sections, using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/group" rel="noopener nofollow" target="_blank"&gt;console.group()&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can optionally give a section a title, by passing a string as the parameter. Sections can be collapsed and expanded in the console, but you can also have a section collapsed by default, by using &lt;code class="prettyprint"&gt;groupCollapsed&lt;/code&gt; instead of &lt;code class="prettyprint"&gt;group&lt;/code&gt;. You can also nest sub-sections within sections but be sure to remember to close out each group with &lt;code class="prettyprint"&gt;groupEnd&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following example will output an open section, containing some info&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;group&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;URL Info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Protocol&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;protocol&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Host&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;origin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Path&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;window&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pathname&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupCollapsed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Meta Info&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Date Fetched&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getTime&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;OS&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;platform&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Browser&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;appCodeName&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;Language&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;navigator&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;language&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;groupEnd&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/jMhk8KM/console-group.png" title="Example output of console.group" alt="Screenshot showing an example output of console.group"&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="styled-logs"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Styled Logs&lt;/h2&gt;

&lt;p&gt;It's possible to style your log outputs with some basic CSS, such as colors, fonts, text styles and sizes. Note that browser support for this is quite variable.&lt;/p&gt;

&lt;p&gt;For example, try running the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;%cHello World!&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;color: #f709bb; font-family: sans-serif; text-decoration: underline;&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should get the following output:&lt;/p&gt;

&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/0Zyw4TF/console-styles-1.png" title="Example output of console styles" alt="Screenshot showing an example using CSS in the console"&gt;&lt;/p&gt;

&lt;p&gt;Pretty cool, huh? Well there's a lot more you can do too!&lt;br&gt;
Maybe change the font, style, background color, add some shadows and some curves...&lt;/p&gt;

&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/L6P26CL/console-styles-2.png" title="Example output of console styles" alt="Screenshot showing an example using CSS in the console"&gt;&lt;/p&gt;

&lt;p&gt;Here's something similar I'm using in a developer dashboard, the code is &lt;a href="https://github.com/Lissy93/dashy/blob/master/src/utils/CoolConsole.js" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/7jgSC8p/console-styles-3.png" title="Example output of console styles" alt="Screenshot showing an example using CSS in the console"&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="time"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Time&lt;/h2&gt;

&lt;p&gt;Another common debugging technique is measuring execution time, to track how long an operation takes. This can be achieved by starting a timer using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Console/time" rel="noopener nofollow" target="_blank"&gt;console.time()&lt;/a&gt; and passing in a label, then ending the timer using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/timeEnd" rel="noopener nofollow" target="_blank"&gt;console.timeEnd()&lt;/a&gt;, using the same label. You can also add markers within a long running operation using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/timeLog" rel="noopener nofollow" target="_blank"&gt;console.timeLog()&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;concatenation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;""&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="nx"&gt;e6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nx"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;timeEnd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;concatenation&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;concatenation: 1206ms - timer ended
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width="450" align="centre" src="https://i.ibb.co/hsHv4tc/console-timer.png" title="Example output of console.time" alt="Screenshot showing an example output of console.time"&gt;&lt;/p&gt;

&lt;p&gt;There's also a non-standard method, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/timeStamp" rel="noopener nofollow" target="_blank"&gt;console.timeStamp()&lt;/a&gt; which adds markers within the performance tab, so you can correlate points in your code with the other events recorded in the timeline like paint and layout events.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="assert"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Assert&lt;/h2&gt;

&lt;p&gt;You may only want to log to the console if an error occurs, or a certain condition is true or false. This can be done using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/assert" rel="noopener nofollow" target="_blank"&gt;console.assert()&lt;/a&gt;, which won't log anything to the console unless the first parameter is &lt;code class="prettyprint"&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The first parameter is a boolean condition to check, followed by 0 or more data points you'd like to print, and the last parameter is a message to output. So &lt;code class="prettyprint"&gt;console.assert(false, 'Value was false')&lt;/code&gt; will output the message, since the first parameter is &lt;code class="prettyprint"&gt;false&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;errorMsg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;the # is not even&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`the # is &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;num&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nx"&gt;errorMsg&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/5xWCN5k/console-assert.png" title="Example output of console.assert" alt="Screenshot showing an example output of console.assert"&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="count"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Count&lt;/h2&gt;

&lt;p&gt;Ever find yourself manually incrementing a number for logging? &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/count" rel="noopener nofollow" target="_blank"&gt;console.count()&lt;/a&gt; is helpful for keeping track how many times something was executed, or how often a block of code was entered.&lt;/p&gt;

&lt;p&gt;You can optionally give your counter a label, which will let you manage multiple counters and make the output clearer.&lt;br&gt;
Counters will always start from 1. You can reset a counter at anytime with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/countReset" rel="noopener nofollow" target="_blank"&gt;console.countReset()&lt;/a&gt;, which also takes an optional label parameter.&lt;/p&gt;

&lt;p&gt;The following code will increment the counter for each item in the array, the final value will be 8. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;69&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;240&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;420&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="nx"&gt;numbers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The following is an example output of labelled counters.&lt;/p&gt;

&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/khjHNKT/console-count.png" title="Example output of console.count" alt="Screenshot showing an example output of console.count"&gt;&lt;/p&gt;

&lt;p&gt;Instead of passing in a label, if you use a value, then you'll have a separate counter for each conditions value. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;         &lt;span class="c1"&gt;// NaN: 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;NaN&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;       &lt;span class="c1"&gt;// NaN: 2&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;         &lt;span class="c1"&gt;// Infinity: 1&lt;/span&gt;
&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt; &lt;span class="c1"&gt;// Infinity: 2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="trace"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Trace&lt;/h2&gt;

&lt;p&gt;In JavaScript, we're often working with deeply nested methods and objects. You can use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/trace" rel="noopener nofollow" target="_blank"&gt;console.trace()&lt;/a&gt; to traverse through the stack trace, and output which methods were called to get to a certain point.&lt;/p&gt;

&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/M1Bt2Jq/console-trace.png" title="Example output of console.trace" alt="Screenshot showing an example output of console.trace"&gt;&lt;/p&gt;

&lt;p&gt;You can optionally pass data to also be outputted along with the stacktrace.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="dir"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Dir&lt;/h2&gt;

&lt;p&gt;If your logging a large object to the console, it may become hard to read. The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/dir" rel="noopener nofollow" target="_blank"&gt;console.dir()&lt;/a&gt; method will format it in an expandable tree structure.&lt;/p&gt;

&lt;p&gt;The following is an example of a directory-style console output:&lt;/p&gt;

&lt;p&gt;&lt;img width="450" align="center" src="https://i.ibb.co/PW073sy/console-dir.png" title="Example output of console.dir" alt="Screenshot showing an example output of console.dir"&gt;&lt;/p&gt;

&lt;p&gt;You can also print XML or HTML based trees in a similar way, by using &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/dirxml" rel="noopener nofollow" target="_blank"&gt;console.dirxml()&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="debug"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Debug&lt;/h2&gt;

&lt;p&gt;You may have some logging set up within your app, that you rely on during development, but don't wish the user to see. Replacing log statements with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/debug" rel="noopener nofollow" target="_blank"&gt;console.debug()&lt;/a&gt; will do just this, it functions in exactly the same way as &lt;code class="prettyprint"&gt;console.log&lt;/code&gt; but will be stripped out by most build systems, or disabled when running in production mode.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="log-levels"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Log Levels&lt;/h2&gt;

&lt;p&gt;You may have noticed that there's several filters in the browser console (info, warnings and error), they allow you to change the verbosity of logged data. To make use of these filters, just switch out log statements with one of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/info" rel="noopener nofollow" target="_blank"&gt;console.info()&lt;/a&gt; - Informational messages for logging purposes, commonly includes a small "i" and / or a blue background&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/warn" rel="noopener nofollow" target="_blank"&gt;console.warn()&lt;/a&gt; - Warnings / non-critical errors, commonly includes a triangular exclamation mark and / or yellow background&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/error" rel="noopener nofollow" target="_blank"&gt;console.error()&lt;/a&gt; - Errors which may affect the functionality, commonly includes a circular exclamation mark and / or red background&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In Node.js different log levels get written to different streams when running in production, for example &lt;code class="prettyprint"&gt;error()&lt;/code&gt; will write to &lt;code class="prettyprint"&gt;stderr&lt;/code&gt;, whereas &lt;code class="prettyprint"&gt;log&lt;/code&gt; outputs to &lt;code class="prettyprint"&gt;stdout&lt;/code&gt;, but during development they will all appear in the console as normal.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="multi-value-logs"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Multi-Value Logs&lt;/h2&gt;

&lt;p&gt;Most functions on the &lt;code class="prettyprint"&gt;console&lt;/code&gt; object will accept multiple parameters, so you can add labels to your output, or print multiple data points at a time, for example: &lt;code class="prettyprint"&gt;console.log('User: ', user.name);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But an easier approach for printing multiple, labelled values, is to make use of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment" rel="noopener nofollow" target="_blank"&gt;object deconstructing&lt;/a&gt;. For example, if you had three variables (e.g. &lt;code class="prettyprint"&gt;x&lt;/code&gt;, &lt;code class="prettyprint"&gt;y&lt;/code&gt; and &lt;code class="prettyprint"&gt;z&lt;/code&gt;), you could log them as an object by surrounding them in curly braces, so that each variables name and value is outputted - like &lt;code class="prettyprint"&gt;console.log( { x, y, z } );&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img width="450" src="https://i.ibb.co/ynVWy52/console-deconstructing.png" title="Example output of console deconstructing" alt="Screenshot showing an example output of console deconstructing"&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="log-string-formats"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Log String Formats&lt;/h2&gt;

&lt;p&gt;If you need to build formatted strings to output, you can do this with C-style printf using format specifiers. &lt;/p&gt;

&lt;p&gt;The following specifiers are supported:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;%s&lt;/code&gt; - String or any other type converted to string&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;%d&lt;/code&gt; / &lt;code class="prettyprint"&gt;%i&lt;/code&gt; - Integer&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;%f&lt;/code&gt; - Float&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;%o&lt;/code&gt; - Use optimal formatting&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;%O&lt;/code&gt; - Use default formatting&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;%c&lt;/code&gt; - Use custom formatting (&lt;a href="#styled-logs"&gt;more info&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For example&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Hello %s, welcome to the year %d!&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="s2"&gt;Alicia&lt;/span&gt;&lt;span class="dl"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;getFullYear&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="c1"&gt;// Hello Alicia, welcome to the year 2022!&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Of course, you could also use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals" rel="noopener nofollow" target="_blank"&gt;template literals&lt;/a&gt; to achieve the same thing, which might be easier to read for shorter strings.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="clear"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Clear&lt;/h2&gt;

&lt;p&gt;Finally, when you're looking for an output from an event, you might want to get rid of everything logged to the console when the page first loaded. This can be done with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console/clear" rel="noopener nofollow" target="_blank"&gt;console.clear()&lt;/a&gt;, which will clear all content, but nor reset any data.&lt;/p&gt;

&lt;p&gt;It's usually also possible to clear the console by clicking the Bin icon, as well as to search through it using the Filter text input.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;And some more...&lt;/h2&gt;

&lt;p&gt;There's so much more that you can do with logging to the console! For more info, check out the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/console" rel="noopener nofollow" target="_blank"&gt;MDN console Documentation&lt;/a&gt; or the &lt;a href="https://developer.chrome.com/docs/devtools/console/api/" rel="noopener nofollow" target="_blank"&gt;Chrome Dev Console Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just a quick note about best practices...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Define a lint rule, to prevent any console.log statements from being merged into your main branch&lt;/li&gt;
&lt;li&gt;Write a wrapper function to handle logging, that way you can enable / disable debug logs based on environment, as well as use appropriate log levels, and apply any formatting. This can also be used to integrate with a third-party logging service with code updates only needed in a single place&lt;/li&gt;
&lt;li&gt;Never log any sensitive info, the browser logs can be captured by any installed extensions, so should not be considered secure&lt;/li&gt;
&lt;li&gt;Always use the correct log levels (like &lt;code class="prettyprint"&gt;info&lt;/code&gt;, &lt;code class="prettyprint"&gt;warn&lt;/code&gt;, &lt;code class="prettyprint"&gt;error&lt;/code&gt;) to make filtering and disabling easier&lt;/li&gt;
&lt;li&gt;Follow a consistent format, so logs can be parsed by a machine if needed&lt;/li&gt;
&lt;li&gt;Write short, meaningful log messages always in English&lt;/li&gt;
&lt;li&gt;Include the context or category within logs&lt;/li&gt;
&lt;li&gt;Don't overdo it, only log useful info&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
img { width: 500px; }
.highlight { width: fit-content; min-width: 500px; }
img, .highlight, pre { border-radius: 4px; box-shadow: 1px 1px 3px #060913; }
h4 { margin: 0; }
ul li { margin-bottom: 0 !important; font-size: 1rem; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>GitHub Markdown Tricks üêô</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Fri, 01 Jul 2022 14:49:16 +0000</pubDate>
      <link>https://notes.aliciasykes.com/36402/github-markdown-tricks</link>
      <guid>https://notes.aliciasykes.com/36402/github-markdown-tricks</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;A collection of 20 &lt;em&gt;things&lt;/em&gt; you can do with GitHub-flavoured markdown to spice-up your projects readme!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h3&gt;Include Notes and Warnings&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;gt; **Note**
&amp;gt; This is a note

&amp;gt; **Warning**
&amp;gt; This is a warning
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Will render:&lt;/p&gt;

&lt;p&gt;&lt;img width="300" src="https://user-images.githubusercontent.com/1862727/180773573-4afb7e3a-b4d1-40c5-8624-dfeacc62b8c1.png"&gt;&lt;/p&gt;

&lt;p&gt;Note that this feature is &lt;a href="https://github.com/github-community/community/discussions/16925" rel="noopener nofollow" target="_blank"&gt;still in beta&lt;/a&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Mermaid Diagrams&lt;/h3&gt;

&lt;p&gt;You can add live diagrams to your documentation, using &lt;a href="https://mermaid.js.org/" rel="noopener nofollow" target="_blank"&gt;Mermaid Syntax&lt;/a&gt;. Check &lt;a href="https://mermaid.js.org/intro/n00b-syntaxReference.html" rel="noopener nofollow" target="_blank"&gt;the docs&lt;/a&gt; for syntax, then use the &lt;a href="https://mermaid.live/edit" rel="noopener nofollow" target="_blank"&gt;Live Editor&lt;/a&gt; to build out your diagrams, then embed the code into your readme, where they'll be rendered.&lt;/p&gt;

&lt;p&gt;Just add the &lt;code class="prettyprint"&gt;mermaid&lt;/code&gt; identifier to the start of your code block. For some examples, see the &lt;a href="https://github.com/mermaid-js/mermaid#examples" rel="noopener nofollow" target="_blank"&gt;mermaid repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/mermaid-js/mermaid#examples"&gt;&lt;img width="600" src="https://i.ibb.co/tKtD3QK/Screen-Shot-2023-02-24-at-15-20-58.png"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Embedding Files&lt;/h3&gt;

&lt;p&gt;You can embed any code, markdown or media file into GitHub markdown, by copying it's permalink, and pasting it into your document. Note that the content must be located in the same repository.&lt;/p&gt;

&lt;p&gt;&lt;img width="600" src="https://i.ibb.co/wcg9wxS/Screen-Shot-2023-02-24-at-15-32-27.png"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Tiny Text&lt;/h3&gt;

&lt;p&gt;Using the &lt;code class="prettyprint"&gt;&amp;lt;sub&amp;gt;&amp;lt;/sub&amp;gt;&lt;/code&gt; (Subscript) and &lt;code class="prettyprint"&gt;&amp;lt;sup&amp;gt;&amp;lt;/sup&amp;gt;&lt;/code&gt; (superscript) will generate tiny text. But to keep it vertically-centred, you can combine the two with: &lt;code class="prettyprint"&gt;&amp;lt;sub&amp;gt;&amp;lt;sup&amp;gt;Small Text!&amp;lt;/sup&amp;gt;&amp;lt;/sub&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/3Bq6Syz/Screen-Shot-2023-02-24-at-12-50-17.png" width="400"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Insert Keyboard Keys&lt;/h3&gt;

&lt;p&gt;Great for visually showing which keys to press, or drawing attention to something (&lt;a href="https://github.com/Lissy93/dashy/blob/master/docs/searching.md#navigating" rel="noopener nofollow" target="_blank"&gt;see example&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;kbd&amp;gt;&lt;/span&gt;Key&lt;span class="nt"&gt;&amp;lt;/kbd&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="https://i.ibb.co/HG82RJd/Screen-Shot-2023-02-24-at-12-53-43.png" width="400"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Underlined Text&lt;/h3&gt;

&lt;p&gt;You probably already know that you can make &lt;strong&gt;bold&lt;/strong&gt; text with &lt;code class="prettyprint"&gt;**Bold!**&lt;/code&gt;, and &lt;em&gt;italic&lt;/em&gt; text with &lt;code class="prettyprint"&gt;_Italic!_&lt;/code&gt; (both of which can also be done with the &lt;code class="prettyprint"&gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&lt;/code&gt; and &lt;code class="prettyprint"&gt;&amp;lt;i&amp;gt;&amp;lt;/i&amp;gt;&lt;/code&gt; tags) - but you can also have underlined text, using the &lt;code class="prettyprint"&gt;&amp;lt;ins&amp;gt;&amp;lt;/ins&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;ins&amp;gt;&lt;/span&gt;I'm Underlined!&lt;span class="nt"&gt;&amp;lt;/ins&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="https://i.ibb.co/VVkGpVh/Screenshot-from-2023-05-10-21-24-43.png" width="600"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Collapsible Sections&lt;/h3&gt;

&lt;p&gt;Useful for including long blocks of text (like logs or API response), without clogging up your page (&lt;a href="https://github.com/Lissy93/Lissy93#readme" rel="noopener nofollow" target="_blank"&gt;see example&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Collapsable Title&lt;span class="nt"&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Put Content Here&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="https://i.ibb.co/82pn1rX/2023-02-24-12-56-24.gif" width="300"&gt;&lt;/p&gt;

&lt;p&gt;Note that to include markdown within the &lt;code class="prettyprint"&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/code&gt; content block, you must pad it with blank lines, both top and bottom&lt;/p&gt;

&lt;p&gt;Want sections to be open by default? Just append the &lt;code class="prettyprint"&gt;open&lt;/code&gt; attribute. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;details&lt;/span&gt; &lt;span class="na"&gt;open&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;summary&amp;gt;&amp;lt;h2&amp;gt;&lt;/span&gt;I'm Open&lt;span class="nt"&gt;&amp;lt;/h2&amp;gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
...
&lt;span class="nt"&gt;&amp;lt;/details&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Indentation&lt;/h3&gt;

&lt;p&gt;Using &lt;code class="prettyprint"&gt;&amp;lt;dl&amp;gt;&lt;/code&gt;, &lt;code class="prettyprint"&gt;&amp;lt;dt&amp;gt;&lt;/code&gt; and &lt;code class="prettyprint"&gt;&amp;lt;dd&amp;gt;&lt;/code&gt; you can create indented paragraphs, with a nicer aphetic. The indented text can wrap multiple lines, while maintaining indentation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dl&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;dt&amp;gt;&lt;/span&gt;This is a list&lt;span class="nt"&gt;&amp;lt;/dt&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;dd&amp;gt;&lt;/span&gt;With hanging indentation&lt;span class="nt"&gt;&amp;lt;/dd&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dl&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width="400" src="https://i.ibb.co/3S4b6yv/Screen-Shot-2023-02-24-at-15-41-19.png"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Embedding a Video&lt;/h3&gt;

&lt;p&gt;You can embed an MP4, simply by including the URL to the raw video in your markdown file (&lt;a href="https://github.com/bjesus/muxile" rel="noopener nofollow" target="_blank"&gt;see example&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/L8XxmbH/Screen-Shot-2023-02-24-at-13-01-55.png" width="500"&gt;&lt;/p&gt;

&lt;p&gt;This doesn't (yet) work with YouTube videos (unless you download and re-upload them). But here's a trick to embed a frame, which will take the user to the video on-click:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;"http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=YOUTUBE_VIDEO_ID_HERE"&lt;/span&gt; &lt;span class="na"&gt;target=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
 &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"IMAGE ALT TEXT HERE"&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"240"&lt;/span&gt; &lt;span class="na"&gt;height=&lt;/span&gt;&lt;span class="s"&gt;"180"&lt;/span&gt; &lt;span class="na"&gt;border=&lt;/span&gt;&lt;span class="s"&gt;"10"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Centre an image or other content&lt;/h3&gt;

&lt;p&gt;Make the title, sub-title and / or logo image centred (&lt;a href="https://github.com/Lissy93/dashy#readme" rel="noopener nofollow" target="_blank"&gt;see example&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;p&lt;/span&gt; &lt;span class="na"&gt;align=&lt;/span&gt;&lt;span class="s"&gt;"center"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="nt"&gt;&amp;lt;img&lt;/span&gt; &lt;span class="na"&gt;width=&lt;/span&gt;&lt;span class="s"&gt;"500"&lt;/span&gt; &lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;"---"&lt;/span&gt; &lt;span class="na"&gt;alt=&lt;/span&gt;&lt;span class="s"&gt;"---"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/lissy93/dotfiles"&gt;&lt;img src="https://i.ibb.co/Vmp1DdZ/Screen-Shot-2023-02-24-at-14-51-59.png" width="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Adding Title to Links&lt;/h3&gt;

&lt;p&gt;You can add a title to a link, which will be displayed when the user hovers over it. This is done by surrounding it in quotes immediately after the URL&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight markdown"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;DuckDuckGo&lt;/span&gt;&lt;span class="p"&gt;](&lt;/span&gt;&lt;span class="sx"&gt;https://duckduckgo.com&lt;/span&gt; &lt;span class="nn"&gt;"A great search engine for privacy"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;GitHub-Specific Emojies&lt;/h3&gt;

&lt;p&gt;In GitHub flavoured markdown, emojis can be specified by their shortcode (e.g. &lt;code class="prettyprint"&gt;:nerd_face:&lt;/code&gt;), &lt;a href="https://github.com/ikatyang/emoji-cheat-sheet" rel="noopener nofollow" target="_blank"&gt;here's a cheatsheet&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But there are also some GitHub-specific emojis, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Octocat&lt;/strong&gt; &lt;code class="prettyprint"&gt;:octocat:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/octocat.png" alt="octocat"&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bowtie&lt;/strong&gt; &lt;code class="prettyprint"&gt;:bowtie:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/bowtie.png" alt="bowtie"&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Neck Beard&lt;/strong&gt; &lt;code class="prettyprint"&gt;:neckbeard:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/neckbeard.png" alt="neckbeard"&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Troll Face&lt;/strong&gt; &lt;code class="prettyprint"&gt;:trollface:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/trollface.png" alt="trollface"&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ship It&lt;/strong&gt; &lt;code class="prettyprint"&gt;:shipit:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/shipit.png" alt="shipit"&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Suspect&lt;/strong&gt; &lt;code class="prettyprint"&gt;:suspect:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/suspect.png" alt="suspect"&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a few more...&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;:rage1:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/rage1.png" alt="rage1"&gt; &lt;code class="prettyprint"&gt;:rage2:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/rage2.png" alt="rage2"&gt; &lt;code class="prettyprint"&gt;:rage3:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/rage3.png" alt="rage3"&gt; &lt;code class="prettyprint"&gt;:rage4:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/rage4.png" alt="rage4"&gt; &lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;:hurtrealbad:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/hurtrealbad.png" alt="hurtrealbad"&gt; &lt;code class="prettyprint"&gt;:goberserk:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/goberserk.png" alt="goberserk"&gt; &lt;code class="prettyprint"&gt;:finnadie:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/finnadie.png" alt="finnadie"&gt; &lt;code class="prettyprint"&gt;:feelsgood:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/feelsgood.png" alt="feelsgood"&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;:atom:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/atom.png" alt="atom"&gt; &lt;code class="prettyprint"&gt;:basecamp:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/basecamp.png" alt="basecamp"&gt; &lt;code class="prettyprint"&gt;:basecampy:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/basecampy.png" alt="basecampy"&gt; &lt;code class="prettyprint"&gt;:electron:&lt;/code&gt; ‚Üí &lt;img src="https://github.githubassets.com/images/icons/emoji/electron.png" alt="electron"&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h3&gt;Syntax Highlighting in Code Blocks&lt;/h3&gt;

&lt;p&gt;Code blocks become much easier to read with syntax highlighting. To use this, you must specify the language immediatley after the first &lt;code&gt;```&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/BzYLYpL/Screen-Shot-2023-02-24-at-13-56-03.png" width="400"&gt;&lt;/p&gt;

&lt;p&gt;You can view a full list of supported languages, &lt;a href="https://github.com/jincheng9/markdown_supported_languages" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Showing Code Additions (or Deletions)&lt;/h3&gt;

&lt;p&gt;Set the language type to &lt;code class="prettyprint"&gt;diff&lt;/code&gt;, and then precede each line which indicates an addition with &lt;code class="prettyprint"&gt;+&lt;/code&gt;, or a &lt;code class="prettyprint"&gt;-&lt;/code&gt; if it's a deletion. Note that the sign must be the first character of the line (watch out for white space), and should be followed by at least one blank space/ tab.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/72rBJVH/Screen-Shot-2023-02-24-at-13-05-43.png" width="400"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Side-Aligned Images&lt;/h3&gt;

&lt;p&gt;In a similar way to centering images, you can also right align them, where the text will flow down the left-side. An example of this can be seen in the &lt;a href="https://github.com/Bugswriter/tuxi" rel="noopener nofollow" target="_blank"&gt;tuxi&lt;/a&gt; repo. (&lt;a href="https://github.com/Lissy93/Lissy93" rel="noopener nofollow" target="_blank"&gt;See example&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;&amp;lt;img src="https://i.ibb.co/sCwYpZ8/general.gif" alt="Video Preview Gif" align="right" width="500px"/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img width="600" src="https://i.ibb.co/8zvZCc8/Screen-Shot-2023-02-24-at-15-10-21.png"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Moving Readme&lt;/h3&gt;

&lt;p&gt;If it bothers you having your &lt;code class="prettyprint"&gt;README.md&lt;/code&gt; file cluttering up your projects root directory, then you can place it in &lt;code class="prettyprint"&gt;.github/README.md&lt;/code&gt; (along with any other GH stuff or assets). It will still be rendered as normal in your repositories home, but now you've got one less file in your project's base directory. (&lt;a href="https://github.com/Lissy93/go-apod" rel="noopener nofollow" target="_blank"&gt;see example&lt;/a&gt;)&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Creating Home Page .md&lt;/h3&gt;

&lt;p&gt;You can display a short markdown document at the top of your GitHub profile. To do so, just create a public repository with the same name as your GitHub username, and populate it with a non-empty &lt;code class="prettyprint"&gt;README.md&lt;/code&gt;. For more info, see the &lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme" rel="noopener nofollow" target="_blank"&gt;Profile Readme Docs&lt;/a&gt;, or (&lt;a href="https://github.com/Lissy93" rel="noopener nofollow" target="_blank"&gt;see example&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/lissy93/lissy93"&gt;&lt;img src="https://i.ibb.co/BPtg0Pq/Screen-Shot-2023-02-24-at-13-58-27.png" width="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Merging Cells in Tables&lt;/h3&gt;

&lt;p&gt;It is possible to merge cells in tables (so that a given cell spans multiple rows or columns), but only if you define your table in HTML (see &lt;a href="https://github.com/lowlighter/metrics/blob/master/source/plugins/introduction/README.md" rel="noopener nofollow" target="_blank"&gt;example&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;This is done by adding the &lt;code class="prettyprint"&gt;colspan&lt;/code&gt; or &lt;code class="prettyprint"&gt;rowspan&lt;/code&gt; attribute, with the number of cells horizontally or vertically that it should span.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight html"&gt;&lt;code&gt; &lt;span class="nt"&gt;&amp;lt;td&lt;/span&gt; &lt;span class="na"&gt;colspan=&lt;/span&gt;&lt;span class="s"&gt;"2"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;I take up two columns!&lt;span class="nt"&gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can also set the text align property here too, using &lt;code class="prettyprint"&gt;align="center"&lt;/code&gt; to centre text.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/Lissy93/Lissy93/blob/tech-stack-merged-cells/TECH-STACK.md"&gt;&lt;img src="https://i.ibb.co/y5cL10p/Screen-Shot-2023-02-24-at-14-40-28.png" width="600"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Single-Cell Tables&lt;/h3&gt;

&lt;p&gt;This is a great way to draw attention to an important message&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;| Hello World! |
|-|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="https://i.ibb.co/jHk6c9R/Screen-Shot-2023-02-24-at-13-04-00.png" width="300"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Create Buttons&lt;/h3&gt;

&lt;p&gt;In GitHub-flavoured markdown, the &lt;code class="prettyprint"&gt;&amp;lt;kbd&amp;gt;&lt;/code&gt; tags also make great buttons. for your readme header.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;**[&amp;lt;kbd&amp;gt;‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉInstall‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉ&amp;lt;/kbd&amp;gt;][Install]**‚ÄÉ
**[&amp;lt;kbd&amp;gt;‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉQuick Start‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉ&amp;lt;/kbd&amp;gt;][Quick Start]**‚ÄÉ
**[&amp;lt;kbd&amp;gt;‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉConfigure‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉ&amp;lt;/kbd&amp;gt;][Configure]**‚ÄÉ
**[&amp;lt;kbd&amp;gt;‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉContribute‚ÄÉ&amp;lt;br&amp;gt;‚ÄÉ&amp;lt;/kbd&amp;gt;][Contribute]**
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href="https://github.com/lissy93/cyber-defence-presentation"&gt;&lt;img src="https://i.ibb.co/f9mbT3D/Screen-Shot-2023-02-24-at-14-47-01.png" width="800"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Task Lists&lt;/h3&gt;

&lt;p&gt;You can create tasks lists too, useful for adding into Pull Request templates or showing task progress in readme.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;A list of things:
- [X] Googley Eyes
- [X] Tesco Clubcard
- [ ] The Elizibeth Line
- [ ] Beans on Toast
- [ ] My Current Account
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src="https://i.ibb.co/vX6GYDT/Screen-Shot-2023-02-24-at-15-50-22.png" width="400"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Including the code quote symbol (&lt;code class="prettyprint"&gt;`&lt;/code&gt;) in a code block&lt;/h3&gt;

&lt;p&gt;Sometimes you may need to use the ` symbol within a code block.&lt;/p&gt;

&lt;p&gt;Just wrap the code with double quotes &lt;code class="prettyprint"&gt;&lt;/code&gt; ``, and ensure there is a space around the quote symbol&lt;/p&gt;

&lt;p&gt;&lt;a href="https://www.cl.cam.ac.uk/%7Emgk25/ucs/quotes.html" rel="noopener nofollow" target="_blank"&gt;https://www.cl.cam.ac.uk/~mgk25/ucs/quotes.html&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Further Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;GitHub Docs: &lt;a href="https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting" rel="noopener nofollow" target="_blank"&gt;Working with advanced formatting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://media4.giphy.com/media/NytMLKyiaIh6VH9SPm/giphy.gif" width="180"&gt;&lt;/p&gt;

&lt;style&gt;
ul li { display: flex; align-items: center; }
ul li img { display: inline; width: 50px; margin-top: 0 !important; margin: 0 1rem; }
ul li strong, ul li code { margin-right: 1rem; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comparison of Private / Secure Emai Providers üì¨</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 22 May 2022 14:18:48 +0000</pubDate>
      <link>https://notes.aliciasykes.com/35375/comparison-of-private-secure-emai-providers</link>
      <guid>https://notes.aliciasykes.com/35375/comparison-of-private-secure-emai-providers</guid>
      <description>&lt;p&gt;&lt;p&gt;The following table is a quick, undetailed comparison of security-focused email providers.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Update: Since the markdown table isn't very clear, here's is a web version:&lt;br&gt;
&lt;strong&gt;&lt;a href="https://lissy93.github.io/email-comparison/" rel="noopener nofollow" target="_blank"&gt;lissy93.github.io/email-comparison&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class="table-wrapper"&gt;

 &lt;table class="fl-table"&gt;
     &lt;tbody&gt;&lt;tr&gt;
        &lt;th&gt;Name&lt;/th&gt;
        &lt;th&gt;Jurisdiction&lt;/th&gt;
        &lt;th&gt;Encryption&lt;/th&gt;
        &lt;th&gt;Open Source&lt;/th&gt;
        &lt;th&gt;Onion Site&lt;/th&gt;
        &lt;th&gt;Pricing&lt;/th&gt;
        &lt;th&gt;Domain Support&lt;/th&gt;
        &lt;th&gt;Additional Aliases or Catch-All&lt;/th&gt;
        &lt;th&gt;POP, IMAP, STMP&lt;/th&gt;
        &lt;th&gt;External Security Audit&lt;/th&gt;
        &lt;th&gt;Accepts Crypto&lt;/th&gt;
        &lt;th&gt;Personal Info Requiements&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;ProtonMail&lt;/td&gt;
        &lt;td&gt;üü¢ Switzerland&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üü¢ Yes&lt;/td&gt;
        &lt;td&gt;üü¢ Yes&lt;/td&gt;
        &lt;td&gt;üü¢ Free Plan - 500MB, 1 address, no custom domain. Paid plans start from ‚Ç¨5 and allow for additional features, custom domain, and increased message volume&lt;/td&gt;
        &lt;td&gt;üü† Yes (Pluss Plan, ‚Ç¨5.00/m)&lt;/td&gt;
        &lt;td&gt;üü† Yes (Professional Plan, ‚Ç¨8.00)&lt;/td&gt;
        &lt;td&gt;üü† Yes, but through Bridge&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (2021, by Securitum)&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (BTC only)&lt;/td&gt;
        &lt;td&gt;üü¢ Recovery Email Only&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Tutanota&lt;/td&gt;
        &lt;td&gt;üü¢ Germany (14 Eyes)&lt;/td&gt;
        &lt;td&gt;üü† Hybrid AES + RSA&lt;/td&gt;
        &lt;td&gt;üü† Client Apps Only&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Free Plan - 1GB, 1 address, no custom domain. Paid plans start from ‚Ç¨1 / month, and allow for a custom domain, 5 alias addresses and improved search and filters&lt;/td&gt;
        &lt;td&gt;üü† Yes (Premium Plan, ‚Ç¨1.00/m)&lt;/td&gt;
        &lt;td&gt;üü† ‚Ç¨1 / month per 20 aliases. No catch-all&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† Apparently, but not published&lt;/td&gt;
        &lt;td&gt;üü† No (But ProxyStore gift cards accepted&lt;/td&gt;
        &lt;td&gt;üü¢ None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;CriptText&lt;/td&gt;
        &lt;td&gt;‚ö™ (Decentralized)&lt;/td&gt;
        &lt;td&gt;üü† Signal Protocol&lt;/td&gt;
        &lt;td&gt;üü¢ Yes&lt;/td&gt;
        &lt;td&gt;‚ö™ N/A (no webmail)&lt;/td&gt;
        &lt;td&gt;üü¢ Free&lt;/td&gt;
        &lt;td&gt;üü¢ Yes&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;‚ö™ N/A (no payment required)&lt;/td&gt;
        &lt;td&gt;üü¢ None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Mailfence&lt;/td&gt;
        &lt;td&gt;üü¢ Belgium (14 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Free Plan - 500MB, 1 address, no custom domain. Paid plans start from ‚Ç¨2.50 and allow for custom domain, 10 aliases, mail client access and increased message volume&lt;/td&gt;
        &lt;td&gt;üü† Yes (Entry Plan, ‚Ç¨2.50/m)&lt;/td&gt;
        &lt;td&gt;üü† Yes (Entry Plan, ‚Ç¨2.50)&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, POP3, SMTP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No (Card, PayPal)&lt;/td&gt;
        &lt;td&gt;üü¢ Recovery Email Only&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Mailbox.org&lt;/td&gt;
        &lt;td&gt;üü¢ Germany (14 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Starts at ‚Ç¨1 / month. Increases to ‚Ç¨9 for all features, and increased storage&lt;/td&gt;
        &lt;td&gt;üü† Yes (Standard Plan, ‚Ç¨3.00/m)&lt;/td&gt;
        &lt;td&gt;üü† 25 aliases (Standard Plan). No catch-all&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, POP3)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ Requires full name, location, mobile number and a recovery email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Soverin&lt;/td&gt;
        &lt;td&gt;üü† Netherlands (9 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan, but flat fee of ‚Ç¨3.25 / month for everything&lt;/td&gt;
        &lt;td&gt;üü† Yes (Paid Plan, ‚Ç¨3.25)&lt;/td&gt;
        &lt;td&gt;üü† Yes (Paid Plan, ‚Ç¨3.25)&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ Requires phone number&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Posteo&lt;/td&gt;
        &lt;td&gt;üü¢ Germany (14 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üü¢ Yes&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Pricing is ‚Ç¨1 / month&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† Yes (‚Ç¨0.10/m per alias). No catch-all&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, POP3)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No (Card, PayPal, Bank Transfer, Cash)&lt;/td&gt;
        &lt;td&gt;üü¢ Payment Info Only&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Runbox&lt;/td&gt;
        &lt;td&gt;üü¢ Norway (14 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üü† Client Apps Only&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Starts at ‚Ç¨14.95 / year for a single domain, going up to ‚Ç¨69.95 / year for more storage and domains&lt;/td&gt;
        &lt;td&gt;üü† Yes (Micro Plan, ‚Ç¨1.25/m)&lt;/td&gt;
        &lt;td&gt;üü† ‚Ç¨3.95 / year per 5 aliases. No catch-all&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, POP, SMTP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (BTC only)&lt;/td&gt;
        &lt;td&gt;üü† Full name, recovery email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Kolab Now&lt;/td&gt;
        &lt;td&gt;üü¢ Switzerland&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üü¢ Yes&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Starts at CHF 5.00 / mo, basic features only. Groupware account is CHF 9.90&lt;/td&gt;
        &lt;td&gt;üü† Yes (Group Plan, CHF 9.90/m)&lt;/td&gt;
        &lt;td&gt;üü† Yes (Group Plan Only (CHF 9.90/ m)&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, POP, SMTP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No (Card, PayPal, Bank Transfer)&lt;/td&gt;
        &lt;td&gt;üü† Full name, recovery email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;CounterMail&lt;/td&gt;
        &lt;td&gt;üü¢ Sweden (14 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Pricing is $4.83 / month&lt;/td&gt;
        &lt;td&gt;üü† Yes (Pain Plan + $15 setup fee)&lt;/td&gt;
        &lt;td&gt;üü† Yes, max 10 text aliases. No catch-all&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (BTC only)&lt;/td&gt;
        &lt;td&gt;üü¢ None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;StartMail&lt;/td&gt;
        &lt;td&gt;üü† Netherlands (9 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Starts at $5 / month, but without custom domain support&lt;/td&gt;
        &lt;td&gt;üü† Yes (Custom Domain Plan, $5.85)&lt;/td&gt;
        &lt;td&gt;üü† Unlimited aliases. No catch-all&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, SMTP)&lt;/td&gt;
        &lt;td&gt;üü† Apparently, but not published&lt;/td&gt;
        &lt;td&gt;üü† Yes (BTC only, but only personal accounts)&lt;/td&gt;
        &lt;td&gt;üü† Full name, recovery email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Disroot&lt;/td&gt;
        &lt;td&gt;üü† Netherlands (9 Eyes)&lt;/td&gt;
        &lt;td&gt;üü† PGP (Off-by-default)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Free, with payment required for each additional feature&lt;/td&gt;
        &lt;td&gt;üü† Yes (Donation required)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (IMAP, POP, SMTP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (BTC only)&lt;/td&gt;
        &lt;td&gt;üü¢ None&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;Hushmail&lt;/td&gt;
        &lt;td&gt;üî¥ Canada (5 Eyes)&lt;/td&gt;
        &lt;td&gt;üü¢ PGP&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† No free plan. Starts at $5.99 / month, rising to $7.99 for email archiving support&lt;/td&gt;
        &lt;td&gt;üü† Yes (Small Business Plan, $5.99/m)&lt;/td&gt;
        &lt;td&gt;üü† Yes (Small Business Plan, $5.99/m)&lt;/td&gt;
        &lt;td&gt;üü¢ Yes (POP, SMTP)&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† Full name, recovery email&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;LavaBit&lt;/td&gt;
        &lt;td&gt;üî¥ United States (5 Eyes)&lt;/td&gt;
        &lt;td&gt;üü† DIME&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† Free plan, but invite only. Pricing ranges from $30 - $60 / year, depending on storage requirements&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üî¥ No&lt;/td&gt;
        &lt;td&gt;üü† Full name, recovery email&lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;To make changes to the above list, submit a pull request to &lt;a href="https://github.com/Lissy93/email-comparison" rel="noopener nofollow" target="_blank"&gt;github.com/Lissy93/email-comparison&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;See Also&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Lissy93/personal-security-checklist#emails" rel="noopener nofollow" target="_blank"&gt;Email Security Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Lissy93/personal-security-checklist/blob/master/5_Privacy_Respecting_Software.md" rel="noopener nofollow" target="_blank"&gt;More Privacy Software&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;



&lt;style&gt;
.single-post-show .post-content {
    max-width: 98%;
    margin: 0 auto;
}
.post-body table {
    width: 95%;
    max-width: 90vw;
}
.post-body iframe {
    max-width: 600px;
    margin: 1rem auto;
    border-radius: 5px;
}



/* Table Styles */

.table-wrapper{
    margin: 1rem;
    border-radius: 8px;
    box-shadow: 0 5px 8px #00000080, 0 1px 2px #000000;
}

.fl-table {
    border-radius: 5px;
    font-size: 12px;
    font-weight: normal;
    border: none;
    border-collapse: collapse;
    width: 100%;
    max-width: 100%;
    white-space: nowrap;
}
.fl-table th {
    text-align: center;
    padding: 0.5rem;
}

.fl-table td {
    text-align: left;
    padding: 0.5rem;
}

.fl-table td {
    border-right: 1px solid #f8f8f8;
    font-size: 1rem;
}

.fl-table thead th {
    color: #ffffff;
    background: #4FC3A1;
}


.fl-table tr {
    color: #ffffff;
    background: #0b1021;
}

.fl-table thead th:nth-child(odd) {
    color: #ffffff;
    background: #060913;
}

.fl-table tr:nth-child(even) {
    background: #092935;
}

/* Responsive */

@media (max-width: 767px) {
    .fl-table {
        display: block;
        width: 100%;
    }
    .table-wrapper:before{
        content: "Scroll horizontally &gt;";
        display: block;
        text-align: right;
        font-size: 11px;
        color: white;
        padding: 0 0 10px;
    }
    .fl-table thead, .fl-table tbody, .fl-table thead th {
        display: block;
    }
    .fl-table thead th:last-child{
        border-bottom: none;
    }
    .fl-table thead {
        float: left;
    }
    .fl-table tbody {
        width: auto;
        position: relative;
        overflow-x: auto;
    }
    .fl-table td, .fl-table th {
        padding: 20px .625em .625em .625em;
        height: 60px;
        vertical-align: middle;
        box-sizing: border-box;
        overflow-x: hidden;
        overflow-y: auto;
        width: 120px;
        font-size: 13px;
        text-overflow: ellipsis;
    }
    .fl-table thead th {
        text-align: left;
        border-bottom: 1px solid #f7f7f9;
    }
    .fl-table tbody tr {
        display: table-cell;
    }
    .fl-table tbody tr:nth-child(odd) {
        background: none;
    }
    .fl-table tr:nth-child(even) {
        background: transparent;
    }
    .fl-table tr td:nth-child(odd) {
        background: #F8F8F8;
        border-right: 1px solid #E6E4E4;
    }
    .fl-table tr td:nth-child(even) {
        border-right: 1px solid #E6E4E4;
    }
    .fl-table tbody td {
        display: block;
        text-align: left;
    }
}

&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>One-Line Web Server üñ•Ô∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 10 Feb 2022 13:54:56 +0000</pubDate>
      <link>https://notes.aliciasykes.com/32456/one-line-web-server</link>
      <guid>https://notes.aliciasykes.com/32456/one-line-web-server</guid>
      <description>&lt;p&gt;&lt;p&gt;The following commands will each start a simple web server, serving up the files in the current directory.&lt;br&gt;
Just open up the browser, and navigate to the system's IP + port (e.g. &lt;code class="prettyprint"&gt;http://localhost:8080&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;Python&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;python -m http.server 8000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Node.js&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;npx http-server ./ --port 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;PHP&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;php -S 127.0.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Ruby&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;ruby -run -e httpd ./ -p 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;R&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Rscript -e 'servr::httd()' -p8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Caddy&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://caddyserver.com/" rel="noopener nofollow" target="_blank"&gt;Caddy&lt;/a&gt; is a feature-rich production-ready Go-based web server, with easy configuration. Just download and use something like the following command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;caddy file-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Rust (with &lt;a href="https://github.com/svenstaro/miniserve" rel="noopener nofollow" target="_blank"&gt;miniserve&lt;/a&gt;)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;cargo install miniserve
miniserve -p 8080 .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;BusyBox&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;busybox httpd -f -p 8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;You can also share the server with someone remotely,&lt;br&gt;
see: &lt;a href="https://notes.aliciasykes.com/p/RUi22QSyWe"&gt;Using Ngrok to expose server to the internet&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>NPM Dependency Security Best Practices üì¶</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Mon, 20 Sep 2021 12:06:46 +0000</pubDate>
      <link>https://notes.aliciasykes.com/28300/npm-dependency-security-best-practices</link>
      <guid>https://notes.aliciasykes.com/28300/npm-dependency-security-best-practices</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;em&gt;The Definitive Guide to NPM Package Security&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Check for Outdated Dependencies&lt;/h2&gt;

&lt;p&gt;It's important to keep dependencies up-to-datem since these packages usually undergo continuous improvements, bugs fixes and security patches.&lt;/p&gt;

&lt;p&gt;Yarn has this functionality built in, with &lt;a href="https://classic.yarnpkg.com/en/docs/cli/outdated/" rel="noopener nofollow" target="_blank"&gt;yarn outdated&lt;/a&gt;, which shows version info for all a projects installed dependencies. &lt;/p&gt;

&lt;p&gt;A better tool for the job is &lt;a href="https://github.com/dylang/npm-check" rel="noopener nofollow" target="_blank"&gt;npm-check&lt;/a&gt; (MIT) by @dylang, which will check for outdated, incorrect, and unused dependencies. This is used by just running &lt;code class="prettyprint"&gt;npx npm-check&lt;/code&gt; from your projects root, you can also interactively update outdated packages with the &lt;code class="prettyprint"&gt;--update&lt;/code&gt; flag, check &lt;a href="https://github.com/dylang/npm-check#options" rel="noopener nofollow" target="_blank"&gt;the docs&lt;/a&gt; for all options.&lt;/p&gt;

&lt;p&gt;There's also &lt;a href="https://david-dm.org/" rel="noopener nofollow" target="_blank"&gt;David-DM&lt;/a&gt;, a website that shows list of outdated dependencies for a given &lt;strong&gt;public&lt;/strong&gt; git repo, with embeddable badges.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Remove Unused Packages&lt;/h2&gt;

&lt;p&gt;Large projects have a tendency to accumulate unused dependencies, causing there to be more to maintain, larger package size, and increased attack surface.&lt;/p&gt;

&lt;p&gt;An easy way to check for unused dependencies, is with &lt;a href="https://github.com/depcheck/depcheck" rel="noopener nofollow" target="_blank"&gt;depcheck&lt;/a&gt;, a CLI tool for determining which of your installed packages are (likely) not being used anywhere in your code base. To use, just run &lt;code class="prettyprint"&gt;npx depcheck&lt;/code&gt;. This tool is included within the npm-check mentioned above. It's worth noting, that this is not 100% accurate, so be careful when removing dependencies. &lt;br&gt;
You can also remove any dependencies that have an overlapping range, with &lt;code class="prettyprint"&gt;yarn dedupe&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Audit Package Security&lt;/h2&gt;

&lt;p&gt;If a project has a large number of dependencies, then it will be more exposed to security risks. Many packages open new ports, thus increasing the attack surface, and some include vulnerabilities, a few of which are extremely severe; and open source projects regularly grow stale, neglecting to fix security flaws.&lt;/p&gt;

&lt;p&gt;&lt;a href="https://classic.yarnpkg.com/en/docs/cli/audit" rel="noopener nofollow" target="_blank"&gt;yarn audit&lt;/a&gt; or  &lt;a href="https://support.snyk.io/hc/en-us/articles/360003812578-Our-full-CLI-reference#test" rel="noopener nofollow" target="_blank"&gt;Snyk  Test&lt;/a&gt; can be used to find, fix and monitor known vulnerabilities in open-source dependencies.&lt;/p&gt;

&lt;p&gt;Sometimes these can be fixed automatically, with &lt;code class="prettyprint"&gt;yarn audit fix&lt;/code&gt;, which will update certain semver-compatible packages to the patched version, if available.&lt;/p&gt;

&lt;p&gt;Another option is to use a bot to scan for vulnerable packages, and submit a PR when a fix becomes available. The branch can then be pulled, tested and either merged or rejected. A popular choice for this is &lt;a href="https://dependabot.com/" rel="noopener nofollow" target="_blank"&gt;Dependabot&lt;/a&gt;. This functionality, plus more is also included with &lt;a href="https://snyk.io/" rel="noopener nofollow" target="_blank"&gt;Snyk&lt;/a&gt;, a hosted solution for E2E application security monitoring.&lt;/p&gt;

&lt;p&gt;If your project contains a dependency that has been identified as vulnerable, it is important to address it as quickly as possible. Either:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update the package to a patched version, if available&lt;/li&gt;
&lt;li&gt;Remove or replace the vulnerable package&lt;/li&gt;
&lt;li&gt;Mark the issue as low risk, if you've looked into it and identified that there is no issue in your use case, such as in a dev dependency that is not used in production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It's worth noting that not all issues raised by the audit will actually have any impact on your application. Each issue still needs to be looked into to determine weather it is relevant to your use case though.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Only use Well Maintained Packages&lt;/h2&gt;

&lt;p&gt;Packages that are used by tens of thousands of projects are usually more closely monitored by other developers and security researchers, as opposed to smaller projects with very few regular users. This is important, as security (and other issues) will likely be spotted sooner, and addressed quicker in better maintained projects.&lt;/p&gt;

&lt;p&gt;One way to assess package usage is its download rate, indicated in "Stats" section of the npm‚Äôs package page, or using &lt;a href="https://npm-stat.com/" rel="noopener nofollow" target="_blank"&gt;npm-stat.com&lt;/a&gt; for historic download data. You should also check the projects GitHub page, see what to look for below.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Analysing Package Sizes&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://bundlephobia.com/" rel="noopener nofollow" target="_blank"&gt;Bundlephobia&lt;/a&gt; is a super useful tool for checking any packages size and bundle impact prior to installing. There's also &lt;a href="https://github.com/siddharthkp/cost-of-modules" rel="noopener nofollow" target="_blank"&gt;cost-of-modules&lt;/a&gt;, a CLI tool for locally analysing the size of the significant packages within your project. Just run &lt;code class="prettyprint"&gt;npx cost-of-modules&lt;/code&gt; within your projects root.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Respecting Package Licenses&lt;/h2&gt;

&lt;p&gt;Open-Source components are published either under a permissive or a copyleft license. Before adding any package, it's important to check the license. Some common open source software licenses, such as GPL will prevent you from using their packages unless you also open source your code, and many packages (such as MIT) require you to correctly give attribution to the original author. To quickly understand what any given license allows you to do, &lt;a href="https://tldrlegal.com/" rel="noopener nofollow" target="_blank"&gt;TDLR; Legal&lt;/a&gt; is a useful resource. &lt;/p&gt;

&lt;p&gt;There are also tools to help you automate the process of license checking within your project. The most notable hosted solution is &lt;a href="https://fossa.com/" rel="noopener nofollow" target="_blank"&gt;FOSSA&lt;/a&gt;, which will automatically scan your project for dependency licenses and notify you of any issues and breach of licenses. There's also &lt;a href="https://github.com/davglass/license-checker" rel="noopener nofollow" target="_blank"&gt;license-checker&lt;/a&gt;, a CLI tool which runs locally, and will output a list of licenses used by dependencies. This can be used by running &lt;code class="prettyprint"&gt;npx license-checker&lt;/code&gt; from the root of your project&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Ignore Run Scripts&lt;/h2&gt;

&lt;p&gt;NPM &lt;a href="https://docs.npmjs.com/cli/v8/using-npm/scripts" rel="noopener nofollow" target="_blank"&gt;script hooks&lt;/a&gt; allow code to run at various points of the package life cycle. This is often used for general housekeeping tasks, but it can also be abused by bad actors to execute malicious code (such as the &lt;a href="https://security.snyk.io/vuln/npm:eslint-scope:20180712" rel="noopener nofollow" target="_blank"&gt;eslint-scope incident&lt;/a&gt; and the &lt;a href="https://security.snyk.io/vuln/npm:crossenv:20170802" rel="noopener nofollow" target="_blank"&gt;crossenv incident&lt;/a&gt;). Such attacks can usually be avoided by properly vetting new packages as well as upgrades. Adding the &lt;code class="prettyprint"&gt;ignore-scripts&lt;/code&gt; option to your &lt;code class="prettyprint"&gt;.npmrc&lt;/code&gt; file will prevent packages from running arbitrary commands.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Package Health Checks&lt;/h2&gt;

&lt;p&gt;The &lt;a href="https://docs.npmjs.com/cli/v6/commands/npm-doctor" rel="noopener nofollow" target="_blank"&gt;npm doctor&lt;/a&gt; command is useful for ensuring that everything is in order, and should be integrated into your automated checks. It will do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Check the official npm registry is reachable, and display the currently configured registry.&lt;/li&gt;
&lt;li&gt;Check that Git is available.&lt;/li&gt;
&lt;li&gt;Review installed npm and Node.js versions.&lt;/li&gt;
&lt;li&gt;Run permission checks on the various folders such as the local and global node_modules, and on the folder used for package cache.&lt;/li&gt;
&lt;li&gt;Check the local npm module cache for checksum correctness.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Considerations when adding new Packages&lt;/h2&gt;

&lt;p&gt;A lot of the above issues can be mitigated, just by being thoughtful about what your installing into your project. Think about weather you really need another new dependency, ensure there's nothing similar already included in your app, and then thouroughly check the project out, being sure to validate the following criteria:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;When was it last updated?&lt;/li&gt;
&lt;li&gt;How often are releases published?&lt;/li&gt;
&lt;li&gt;How many developers have contributed to it? (More is better, as there is a lower risk of the project being abandoned, and a higher chance that issues are spotted).&lt;/li&gt;
&lt;li&gt;How many open issues are there?&lt;/li&gt;
&lt;li&gt;Does it have a security policy?&lt;/li&gt;
&lt;li&gt;Any open or recent security advisories?&lt;/li&gt;
&lt;li&gt;Is it correctly using semantic versioning?&lt;/li&gt;
&lt;li&gt;Is it thoroughly tested?&lt;/li&gt;
&lt;li&gt;Does it use many additional dependencies? If so, are they to be deemed trustworthy?&lt;/li&gt;
&lt;li&gt;How many other projects rely on it?&lt;/li&gt;
&lt;li&gt;Is it frequently downloaded? (Check the "Stats" section of the NPM page, or use &lt;a href="https://npm-stat.com/" rel="noopener nofollow" target="_blank"&gt;npm-stat.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Is the code clear and readable? If it is, then issues will be much easier to spot&lt;/li&gt;
&lt;li&gt;Is the license compatible with your project, and have you acknowledged the terms (e.g. attribution)&lt;/li&gt;
&lt;li&gt;How large is the package? And how will this affect your project's bundle size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For quick info about any package, you can also run &lt;code class="prettyprint"&gt;npm view [package-name]&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Strict Installs&lt;/h2&gt;

&lt;p&gt;When setting up your project in the CI environment, it is reccomended to use the CI install command. This is more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed local environments of most npm users. It's also significantly faster, since it skips certain user-oriented features. Just replace npm i, with &lt;code class="prettyprint"&gt;npm ci&lt;/code&gt;, or for yarn use: &lt;code class="prettyprint"&gt;yarn install --frozen-lockfile&lt;/code&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Lockfiles&lt;/h2&gt;

&lt;p&gt;In order to ensure reproducible builds, yarn needs to know exactley which version of each package should be installed. This is specified in the &lt;code class="prettyprint"&gt;yarn.lock&lt;/code&gt; file (or &lt;code class="prettyprint"&gt;npm-lock.json&lt;/code&gt; for NPM), and is auto-generated on install. This file should be commited to git, as it will prevent updates in a packages minor version causing any unexpected errors in on other machines.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Registry&lt;/h2&gt;

&lt;p&gt;Using your own registry, such as &lt;a href="https://github.com/verdaccio/verdaccio" rel="noopener nofollow" target="_blank"&gt;Verdaccio&lt;/a&gt; which can be privatley self-hosted, gives you far greater control over your NPM downloads.  It allows for easy usage of private packages, and also gives you the ability to proxy other registries, and cache the downloaded of modules along the way, for improved speed and control, you can link multiple registries and override public packages. Alternative options include using NPM's enterprise offering, or installing dependencies directly from private git repos.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Dependency Inversion Principle&lt;/h2&gt;

&lt;p&gt;When writing your own modules, follow the SOLID principles, specifically in terms of the coupling between the different classes or modules. Writing small, maintainable, tested, single-purpose packages, which will then be easier to manage in terms of security and quality.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Secure your NPM Account&lt;/h2&gt;

&lt;p&gt;If you're publishing any of your modules to the NPM registry, then secure access is very important. Ensure that you've enabled 2FA, and keep your account credentials and tokens safe. If your not making any updates, then login using read-only mode. Make use of NPM author tokens for publishing and updating packages.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Watch out for Typosquatting Attacks&lt;/h2&gt;

&lt;p&gt;Typosquatting is an attack that involves packages with slight naming changes, that are often installed by mistake due to a typo. Since packages can have access to environmental variables, which often include credentials, tokens and API keys, a malicious actor can harvest this sensitive info.&lt;/p&gt;

&lt;p&gt;To protect yourself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take care when copying and pasting commands into the terminal and always verify the source of the repo that you are installing via &lt;code class="prettyprint"&gt;npm info&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Default to having an npm logged-out user in your daily work routines so your credentials won‚Äôt be the weak spot that would lead to easily compromising your account.&lt;/li&gt;
&lt;li&gt;Consider appending the &lt;code class="prettyprint"&gt;--ignore-script&lt;/code&gt; flag when installing packages, to prevent them from executing arbitrary code.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Tips and Tricks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use any NPM CLI package, without having to first install it, using &lt;code class="prettyprint"&gt;npx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;While developing multiple packages simultaneously, &lt;a href="https://classic.yarnpkg.com/en/docs/cli/link/" rel="noopener nofollow" target="_blank"&gt;yarn link&lt;/a&gt; is useful for creating symbolic links between them&lt;/li&gt;
&lt;li&gt;Due to how NPM dependencies are structured, if you've been working on a lot of projects, you can find your disk space frequently running low. &lt;a href="https://npkill.js.org/" rel="noopener nofollow" target="_blank"&gt;NPKill&lt;/a&gt; is a handy CLI util, to find all node_modules directories for easy deletion of the ones you no longer need. Just run &lt;code class="prettyprint"&gt;npx npkill&lt;/code&gt;  to get started. You can also &lt;a href="https://listed.to/@lissy93/16988/how-to-remove-all-node_modules-folders" rel="noopener nofollow" target="_blank"&gt;do this nativley&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To open the GitHub page for any package, just run &lt;code class="prettyprint"&gt;npm docs [package-name]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If your facing any issues with NPM, then running &lt;code class="prettyprint"&gt;npm doctor&lt;/code&gt; with troubleshoot common issues, and output the likely fix&lt;/li&gt;
&lt;li&gt;List all installed packages in a tree structure with &lt;code class="prettyprint"&gt;npm ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Many of the NPM short commands can be grouped together, for example &lt;code class="prettyprint"&gt;npm cit&lt;/code&gt; is the same as fresh install and run tests&lt;/li&gt;
&lt;li&gt;When working with mono-repos or multiple packages, you can use the &lt;code class="prettyprint"&gt;--prefix [./path/to/dir]&lt;/code&gt; flag to run NPM commands in other directories, without having to cd&lt;/li&gt;
&lt;li&gt;To view all valid release versions of a given package, run &lt;code class="prettyprint"&gt;npm view [package-name] versions&lt;/code&gt;, or &lt;code class="prettyprint"&gt;yarn info [package-name] versions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;View a tree of dependencies for any package, with &lt;a href="https://npmgraph.js.org/" rel="noopener nofollow" target="_blank"&gt;npmgraph.js.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Use different NPM versions for different projects easily with &lt;a href="https://volta.sh/" rel="noopener nofollow" target="_blank"&gt;Volta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;More info can be found for any CVE via &lt;a href="https://www.cvedetails.com/" rel="noopener nofollow" target="_blank"&gt;cvedetails.com&lt;/a&gt; or using &lt;a href="https://github.com/advisories" rel="noopener nofollow" target="_blank"&gt;GitHub Advisories&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dashy - A Self-Hosted Home Lab Dashboard üöÄ</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 05 May 2021 10:39:23 +0000</pubDate>
      <link>https://notes.aliciasykes.com/25291/dashy-a-self-hosted-home-lab-dashboard</link>
      <guid>https://notes.aliciasykes.com/25291/dashy-a-self-hosted-home-lab-dashboard</guid>
      <description>&lt;p&gt;&lt;p&gt;Here's a quick project that I built in order to keep track of locally running services on my home lab. It serves as a landing page, to make it easier to navigate to various apps, without having to remember and type IP addresses or URLs. &lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/LrcpNg9/dashy.png" style="float:right;width:220px;"&gt;&lt;/p&gt;

&lt;h4&gt;Contents&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#code"&gt;Source Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#demo"&gt;Live Demo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#screenshots"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage Guide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#alternatives"&gt;Similar Apps / Alternatives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#credits"&gt;Credits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#license"&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="features"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Features&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Instant search by name, domain and tags - just start typing&lt;/li&gt;
&lt;li&gt;Full keyboard shortcuts for navigation, searching and launching&lt;/li&gt;
&lt;li&gt;Multiple color themes, with easy method for adding more&lt;/li&gt;
&lt;li&gt;Customizable layout options, and item sizes&lt;/li&gt;
&lt;li&gt;Quickly preview a website, by holding down the Alt key while clicking, to open it in a resizable pop-up modal&lt;/li&gt;
&lt;li&gt;Many options for icons, including full Font-Awesome support and the ability to auto-fetch icon from URLs favicon&lt;/li&gt;
&lt;li&gt;Additional info for each item visible on hover (including opening method icon and description as a tooltip)&lt;/li&gt;
&lt;li&gt;Option for full-screen background image, custom nav-bar links, and custom footer text&lt;/li&gt;
&lt;li&gt;User settings stored in local storage and applied on load&lt;/li&gt;
&lt;li&gt;Encrypted cloud backup and restore feature available&lt;/li&gt;
&lt;li&gt;Easy single-file YAML-based configuration&lt;/li&gt;
&lt;li&gt;Small bundle size, fully responsive UI and PWA makes the app easy to use on any device&lt;/li&gt;
&lt;li&gt;Plus lots more...&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="code"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Source Code&lt;/h3&gt;

&lt;p&gt;Source, on GitHub: &lt;a href="https://github.com/Lissy93/dashy" rel="noopener nofollow" target="_blank"&gt;github.com/Lissy93/dashy&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="demo"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Live Demo&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://dashy-demo-1.as93.net" rel="noopener nofollow" target="_blank"&gt;Demo 1&lt;/a&gt; ‚îÜ &lt;a href="https://dashy-demo-2.as93.net" rel="noopener nofollow" target="_blank"&gt;Demo 2&lt;/a&gt; ‚îÜ &lt;a href="https://dashy-demo-3.as93.net" rel="noopener nofollow" target="_blank"&gt;Demo 3&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="screenshots"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Screenshots&lt;/h3&gt;

&lt;p&gt;&lt;img class="screen-recording" src="https://i.ibb.co/L8YbNNc/dashy-demo2.gif"&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class="screen-shots" src="https://i.ibb.co/7r2FwL2/dashy-screenshots-grid.png"&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/M6nyvqW/dashy-options-screen.png"&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="usage"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Usage Guide&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;For full setup instructions, see &lt;a href="https://listed.to/p/We3d5inEky" rel="noopener nofollow" target="_blank"&gt;this post&lt;/a&gt;, or follow the GitHub readme.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4&gt;Setup&lt;/h4&gt;

&lt;p&gt;Get the code: &lt;code class="prettyprint"&gt;git clone git@github.com:Lissy93/dashy.git&lt;/code&gt; and &lt;code class="prettyprint"&gt;cd dashy&lt;/code&gt;&lt;br&gt;
Then install the dependencies: &lt;code class="prettyprint"&gt;yarn&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;Configuring&lt;/h4&gt;

&lt;p&gt;All settings are specified in &lt;code class="prettyprint"&gt;./public/conf.yml&lt;/code&gt;. You can see a full list of options in the &lt;a href="https://github.com/Lissy93/dashy#configuring-" rel="noopener nofollow" target="_blank"&gt;docs&lt;/a&gt;, or modify one of &lt;a href="https://gist.github.com/Lissy93/000f712a5ce98f212817d20bc16bab10" rel="noopener nofollow" target="_blank"&gt;these example configs&lt;/a&gt;&lt;/p&gt;

&lt;h4&gt;Deploying&lt;/h4&gt;

&lt;p&gt;First build the project, with &lt;code class="prettyprint"&gt;yarn build&lt;/code&gt;, you can then run &lt;code class="prettyprint"&gt;yarn start&lt;/code&gt; to run it. Alternatively use Docker, with &lt;code class="prettyprint"&gt;docker run -it -p 8080:80 --rm --name my-dashboard lissy93/dashy&lt;/code&gt;&lt;/p&gt;

&lt;h4&gt;Developing&lt;/h4&gt;

&lt;p&gt;Running &lt;code class="prettyprint"&gt;yarn dev&lt;/code&gt; will build, test, lint then start the development server and watch for changes&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="alternatives"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Similar Apps / Alternatives&lt;/h3&gt;

&lt;p&gt;There are a few self-hosted web apps, that serve a similar purpose to Dashy. Including, but not limited to: &lt;a href="https://github.com/phntxx/dashboard" rel="noopener nofollow" target="_blank"&gt;Dashboard&lt;/a&gt;, &lt;a href="https://github.com/rmountjoy92/DashMachine" rel="noopener nofollow" target="_blank"&gt;Dash Machine&lt;/a&gt;, &lt;a href="https://github.com/linuxserver/Heimdall" rel="noopener nofollow" target="_blank"&gt;Heimdall&lt;/a&gt;, &lt;a href="https://lamarios.github.io/Homedash2" rel="noopener nofollow" target="_blank"&gt;HomeDash2&lt;/a&gt;, &lt;a href="https://github.com/tomershvueli/homepage" rel="noopener nofollow" target="_blank"&gt;Homepage&lt;/a&gt;, &lt;a href="https://github.com/bastienwirtz/homer" rel="noopener nofollow" target="_blank"&gt;Homer&lt;/a&gt;, &lt;a href="https://organizr.app/" rel="noopener nofollow" target="_blank"&gt;Organizr&lt;/a&gt; and &lt;a href="https://github.com/kutyla-philipp/simple-dash" rel="noopener nofollow" target="_blank"&gt;Simple-Dash&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="credits"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;Credits&lt;/h3&gt;

&lt;p&gt;The app makes use of the following components, kudos to their respective authors&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/sagalbot/vue-select" rel="noopener nofollow" target="_blank"&gt;vue-select&lt;/a&gt; - Dropdown component by @sagalbot&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/euvl/vue-js-modal" rel="noopener nofollow" target="_blank"&gt;vue-js-modal&lt;/a&gt; - Modal component by @euvl&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Akryum/v-tooltip" rel="noopener nofollow" target="_blank"&gt;v-tooltip&lt;/a&gt; - Tooltip component by @Akryum&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/jairoblatt/vue-material-tabs" rel="noopener nofollow" target="_blank"&gt;vue-material-tabs&lt;/a&gt; - Tab view component by @jairoblatt&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yansenlei/VJsoneditor" rel="noopener nofollow" target="_blank"&gt;VJsoneditor&lt;/a&gt; - Interactive JSON editor component by @yansenlei

&lt;ul&gt;
&lt;li&gt;Forked from &lt;a href="https://github.com/josdejong/jsoneditor" rel="noopener nofollow" target="_blank"&gt;JsonEditor&lt;/a&gt; by @josdejong&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And the app itself is built with &lt;a href="https://github.com/vuejs/vue" rel="noopener nofollow" target="_blank"&gt;Vue.js&lt;/a&gt; &lt;img class="vue-logo" src="https://i.ibb.co/xqKW6h5/vue-logo.png"&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="license"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h3&gt;License&lt;/h3&gt;

&lt;p&gt;&lt;img class="license" src="https://user-images.githubusercontent.com/1862727/68531648-69ef4200-030c-11ea-8d48-74af7a2d8304.png"&gt;&lt;/p&gt;

&lt;p&gt;Licensed under &lt;a href="https://gist.github.com/Lissy93/143d2ee01ccc5c052a17" rel="noopener nofollow" target="_blank"&gt;MIT X11&lt;/a&gt;, ¬© Alicia Sykes 2021: &lt;a href="https://aliciasykes.com" rel="noopener nofollow" target="_blank"&gt;https://aliciasykes.com&lt;/a&gt;&lt;/p&gt;

&lt;style&gt;

.screen-recording, .screen-shots {
    margin: 0 auto;
    border-radius: 4px;
    border: 1px solid #00CCB4;
}
.vue-logo { display: inline !important; height: 1.5rem; margin: 0;}
.license { width: 150px; float: right; margin: 0 !important;}

.post-content .post-body h4 { margin-bottom: 0; font-size: 1.1rem;}

&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Espanso to boost Efficiency üö§</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 01 May 2021 19:37:17 +0000</pubDate>
      <link>https://notes.aliciasykes.com/25213/using-espanso-to-boost-efficiency</link>
      <guid>https://notes.aliciasykes.com/25213/using-espanso-to-boost-efficiency</guid>
      <description>&lt;p&gt;&lt;h2&gt;Intro&lt;/h2&gt;

&lt;p&gt;&lt;img align="right" width="350" src="https://i.ibb.co/0GTVC02/espanso-octocat.png"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://espanso.org/" rel="noopener nofollow" target="_blank"&gt;Espanso&lt;/a&gt; is an open source, privacy-first, cross-platform text expander developed by &lt;a href="https://github.com/federico-terzi" rel="noopener nofollow" target="_blank"&gt;@federico-terzi&lt;/a&gt; and written in Rust. In short, it detects when you type a certain keyword, and replaces it on the fly with a pre-defined string or dynamic output. &lt;/p&gt;

&lt;p&gt;Espanso not only supports simple text replacement/ expansion, but also images, custom scripts and shell commands, app-specific configurations and more. There is also a basic form feature, enabling arguments to be passed to a block. It's under active development, so hopefully there will be even more functionality implemented in the future. &lt;/p&gt;

&lt;p&gt;It uses a file-based configuration, written entirely in &lt;a href="https://yaml.org/" rel="noopener nofollow" target="_blank"&gt;YAML&lt;/a&gt; (but I think there is a GUI &lt;a href="https://github.com/federico-terzi/espanso/issues/255" rel="noopener nofollow" target="_blank"&gt;in development&lt;/a&gt;), and for the most part is quick and easy to it it configured exactly to your liking. But you can also use pre-built packages, installed via &lt;a href="https://hub.espanso.org/" rel="noopener nofollow" target="_blank"&gt;Espanso Hub&lt;/a&gt; (or any external source).&lt;/p&gt;

&lt;p&gt;There are many possibilities where Espanso can be really useful, but the main areas that I am using it for are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Quickly typing characters that do not appear on my keyboard (such as math symbols, foreign language characters and emojis)&lt;/li&gt;
&lt;li&gt;Easily inserting longer strings that would otherwise have required many keystrokes&lt;/li&gt;
&lt;li&gt;Inserting dynamic content, such as the output of a script, response from an API call, or time/ date info&lt;/li&gt;
&lt;li&gt;Making typing easier, with a custom spelling and grammar auto-correct system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Espanso Links&lt;/strong&gt;: &lt;a href="https://espanso.org/docs/" rel="noopener nofollow" target="_blank"&gt;Docs&lt;/a&gt;, &lt;a href="https://www.reddit.com/r/espanso/" rel="noopener nofollow" target="_blank"&gt;Reddit&lt;/a&gt;, &lt;a href="https://hub.espanso.org/" rel="noopener nofollow" target="_blank"&gt;Package Hub&lt;/a&gt;, &lt;a href="https://github.com/federico-terzi/espanso" rel="noopener nofollow" target="_blank"&gt;Source Code&lt;/a&gt;, &lt;a href="https://espanso.org/install/" rel="noopener nofollow" target="_blank"&gt;Quick Start&lt;/a&gt;, &lt;a href="https://federicoterzi.com/" rel="noopener nofollow" target="_blank"&gt;Author's Site&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I'm still working on my config, but for reference here it is: &lt;a href="https://github.com/Lissy93/espanso-config" rel="noopener nofollow" target="_blank"&gt;github.com/Lissy93/espanso-config&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h2&gt;Use Cases&lt;/h2&gt;

&lt;h3&gt;Easy Emoji Inputs&lt;/h3&gt;

&lt;p&gt;The first thing I used Espanso for was being able to type emojis, without having to use wait for a popup to load or use the internet.&lt;/p&gt;

&lt;p&gt;There is a plugin that does exactly this perfectly, called &lt;a href="https://github.com/FoxxMD/espanso-all-emojis/blob/master/all-emojis/0.1.0/package.yml" rel="noopener nofollow" target="_blank"&gt;espanso-all-emojis&lt;/a&gt;, by &lt;a href="https://github.com/FoxxMD" rel="noopener nofollow" target="_blank"&gt;@FoxxMD&lt;/a&gt;, using &lt;a href="https://github.com/github/gemoji" rel="noopener nofollow" target="_blank"&gt;gemoji&lt;/a&gt;. It can be installed with:&lt;br&gt;
&lt;code class="prettyprint"&gt;espanso install all-emojis&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then just type the name of the emoji, surrounded by colons. For example:&lt;br&gt;
&lt;code class="prettyprint"&gt;:smile:&lt;/code&gt; --&amp;gt; üòÑ, &lt;code class="prettyprint"&gt;:rocket:&lt;/code&gt; --&amp;gt; üöÄ, &lt;code class="prettyprint"&gt;:milky way:&lt;/code&gt; --&amp;gt; üåå&lt;/p&gt;

&lt;p&gt;For reference, here is the &lt;a href="https://listed.to/p/B8GXbP6Yk3" rel="noopener nofollow" target="_blank"&gt;full list emojis&lt;/a&gt;, along with their shorthand code&lt;/p&gt;

&lt;p&gt;The next thing I wanted to do, was be able to easily insert old-school ASCII emoticons or Lenny faces. This could be done with a similar method, but I didn't want to have to remember all the key combinations. A perfect opportunity to give Espanso's &lt;a href="https://espanso.org/docs/forms/" rel="noopener nofollow" target="_blank"&gt;form feature&lt;/a&gt; a go!&lt;/p&gt;

&lt;p&gt;With the above code, typing &lt;code class="prettyprint"&gt;:lenny&lt;/code&gt; will open up a form with a dropdown, using the arrow keys I can now select an option, hit enter and it will be inserted&lt;/p&gt;

&lt;p&gt;&lt;img class="demo" src="https://i.ibb.co/Vx2Xpdn/Espanso-lenny.gif" alt="Espanso Lenny Demo"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Easily inputs ASCII emoticons from a dropdown&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:lenny&lt;/span&gt;
  &lt;span class="na"&gt;form&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{smileys}}"&lt;/span&gt;
  &lt;span class="na"&gt;form_fields&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="na"&gt;smileys&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;choice&lt;/span&gt;
      &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;¬Ø\\_(„ÉÑ)_/¬Ø'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;‚îª‚îÅ‚îª'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;(&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Õ°‡≤†&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt; ñÃØ&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Õ°‡≤†)'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;‚òâ&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;‚Äø&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;‚öÜ'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt; ï‚Ä¢·¥•‚Ä¢ î'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;‚ãÜÔΩ°Àö&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;‚òÅÔ∏é&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;ÀöÔΩ°‚ãÜÔΩ°Àö‚òΩÀöÔΩ°‚ãÜ'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;(„Å•·µî‚ó°·µî)„Å•'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;|·µî‚Äø·µî|'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;‚§ú(*Ôπè*)‚§è'&lt;/span&gt;
      &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;„ÉÑ'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Inserting Dynamic Content&lt;/h3&gt;

&lt;p&gt;Espanso has a series of built in extensions, that are able to insert dynamic data, either from a command, script, web address or API&lt;/p&gt;

&lt;p&gt;An example of how this can be useful, is for fetching your current public IP address, using &lt;a href="https://api.ipify.org" rel="noopener nofollow" target="_blank"&gt;ipify.org&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Outputs public IP address&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:ip"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{output}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;output&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shell&lt;/span&gt;
      &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;cmd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;curl&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'https://api.ipify.org'"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or the current weather in your location, using &lt;a href="http://wttr.in" rel="noopener nofollow" target="_blank"&gt;wttr.in&lt;/a&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Outputs the current weather for your location&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:weather"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{output}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
    &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;output&lt;/span&gt;
      &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shell&lt;/span&gt;
      &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;cmd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;curl&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'http://wttr.in/?format=3'"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Easily insert the MIT license:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Outputs full MIT license text, from GitHub&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:mit-long&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{output}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;output&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shell&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;cmd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;curl&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'https://gist.githubusercontent.com/Lissy93/143d2ee01ccc5c052a17/raw/a8ac96cd15847a231931b561d95d2de47066fd33/LICENSE.MD'"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Generating Deterministic Passwords on the Fly&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://lesspass.com" rel="noopener nofollow" target="_blank"&gt;LessPass&lt;/a&gt; is a stateless password manager, given a set of arguments (usually site, username and master pass) the output will always be the same, omitting the need to store passwords anywhere. I use it for less important accounts, and this sounded like another great use case for Espanso.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:pass&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{lesspass}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;params"&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;form&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;|&lt;/span&gt;
        &lt;span class="s"&gt;Less Pass Generator&lt;/span&gt;
        &lt;span class="s"&gt;Website: {{site}}&lt;/span&gt;
        &lt;span class="s"&gt;Login: {{login}}&lt;/span&gt;
        &lt;span class="s"&gt;Master Password: {{pass}}&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;lesspass&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;shell&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;cmd&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;lesspass&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;$ESPANSO_PARAMS_SITE&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;$ESPANSO_PARAMS_LOGIN&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;$ESPANSO_PARAMS_PASS"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;With the above block, you can type &lt;code class="prettyprint"&gt;:pass&lt;/code&gt;, and a form will popup, prompting you for the three arguments, and on submit a password will be returned and auto-filled. This does of course require the &lt;a href="https://github.com/lesspass/lesspass/tree/master/cli" rel="noopener nofollow" target="_blank"&gt;LessPass CLI&lt;/a&gt; tool to be installed.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Quickly Closing Brackets&lt;/h3&gt;

&lt;p&gt;This is a small one, saving only a single key press, but over time it all adds up. In Espanso, you can specify where the cursor should be placed using &lt;code class="prettyprint"&gt;$|$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So typing a colon &lt;code class="prettyprint"&gt;:&lt;/code&gt; followed by any type of bracket, tag or formatting symbol, will result in the corresponding closing bracket will be filled, and the cursor will be moved conveniently middle of the parenthesis.&lt;br&gt;
This works for &lt;code class="prettyprint"&gt;()&lt;/code&gt;, &lt;code class="prettyprint"&gt;[]&lt;/code&gt;, &lt;code class="prettyprint"&gt;{}&lt;/code&gt;, &lt;code class="prettyprint"&gt;&amp;lt;&amp;gt;&lt;/code&gt;, &lt;code class="prettyprint"&gt;` `&lt;/code&gt;, &lt;code class="prettyprint"&gt;''&lt;/code&gt;, &lt;code class="prettyprint"&gt;""&lt;/code&gt;, &lt;code class="prettyprint"&gt;__&lt;/code&gt;, &lt;code class="prettyprint"&gt;--&lt;/code&gt; and &lt;code class="prettyprint"&gt;**&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Auto close brackets, quotes and modifiers, putting cursor in the center&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:('&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;($|$)'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:['&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;[$|$]'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:{'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;{$|$}'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:&amp;lt;'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;$|$&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:`'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;`$|$`'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s"&gt;'"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s"&gt;'$|$&lt;/span&gt;&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="s"&gt;'"&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:"'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;"$|$"'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:_'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;_$|$_'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:*'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;*$|$*'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;:-'&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;-$|$-'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Date / Time Info&lt;/h3&gt;

&lt;p&gt;Another handy feature, is the &lt;a href="https://espanso.org/docs/matches/#date-extension" rel="noopener nofollow" target="_blank"&gt;built-in date extension&lt;/a&gt;. For the format of the date, see the &lt;a href="https://docs.rs/chrono/0.3.1/chrono/format/strftime" rel="noopener nofollow" target="_blank"&gt;chrono::format::strftime Docs&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Outputs todays date (dd/mm/yy)&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:date&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{date}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;date&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;date&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;%d/%m/%y"&lt;/span&gt;

&lt;span class="c1"&gt;# Outputs the current time (24hr)&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:time&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{time}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;time&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;date&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;%H:%M"&lt;/span&gt;

&lt;span class="c1"&gt;# Outputs the month and year (e.g. January 2020)&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:month&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{date}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;date&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;date&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;format&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;%B&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;%Y"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Inserting Links&lt;/h3&gt;

&lt;p&gt;This is handy if you find yourself often sharing links in forums, or pasting them in documents. It makes use of Espanso's handy built-in &lt;a href="https://espanso.org/docs/matches/#clipboard-extension" rel="noopener nofollow" target="_blank"&gt;Clipboard Extension&lt;/a&gt;, to get the URL that has been copied. &lt;/p&gt;

&lt;p&gt;This works for Markdown with &lt;code class="prettyprint"&gt;:md-link&lt;/code&gt;, HTML with &lt;code class="prettyprint"&gt;:html-link&lt;/code&gt; and BB Code with &lt;code class="prettyprint"&gt;:bb-link&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Outputs markdown link, with clipboard contents as the URL&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:md-link"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;[$|$]({{clipboard}})"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;

&lt;span class="c1"&gt;# Creates a HTML anchor element, with clipboard contents as href&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:html-link"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;a&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;href=&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="s"&gt;{{clipboard}}&lt;/span&gt;&lt;span class="se"&gt;\"&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&amp;gt;$|$&amp;lt;/a&amp;gt;"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;

&lt;span class="c1"&gt;# Outputs BB Code link, with clipboard contents as the URL&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:bb-link"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;[url={{clipboard}}]$|$[/url]"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For example, say you's copied have &lt;code class="prettyprint"&gt;http://example.com&lt;/code&gt; and ran &lt;code class="prettyprint"&gt;:html-link&lt;/code&gt; is would return &lt;code class="prettyprint"&gt;&amp;lt;a href="http://example.com" /&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;, with the cursor in the middle, ready for the title.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Auto-Correct Typos&lt;/h3&gt;

&lt;p&gt;This is certainly the task that I use Espanso for most! And I have previously written &lt;a href="https://listed.to/@lissy93/22944/spelling-auto-correct-system" rel="noopener nofollow" target="_blank"&gt;a post&lt;/a&gt; outlining this.&lt;/p&gt;

&lt;p&gt;If you're interested in doing this, I prepared a &lt;a href="https://listed.to/p/nWcfB31ZTD" rel="noopener nofollow" target="_blank"&gt;list of 4,200 of the most commonly misspelled words&lt;/a&gt; from Wikipedia, presented in AHK format, and wrote a &lt;a href="https://ahk-to-espanso.as93.net/" rel="noopener nofollow" target="_blank"&gt;quick script&lt;/a&gt; to convert it to Espanso YAML.&lt;/p&gt;

&lt;p&gt;I personally just use the 250 words that I most often mistype / spell. The format looks like this (below), and my full script is &lt;a href="https://github.com/Lissy93/espanso-config/blob/master/alicia-auto-correct.yml" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;matches&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;acsent&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;accent&lt;/span&gt;
  &lt;span class="na"&gt;propagate_case&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="na"&gt;word&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;advesary&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;adversary&lt;/span&gt;
  &lt;span class="na"&gt;propagate_case&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
  &lt;span class="na"&gt;word&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="no"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The word will not update until a terminator character (such as space or enter) is pressed (defined by &lt;code class="prettyprint"&gt;word: true&lt;/code&gt;). The case will be propogated, (because &lt;code class="prettyprint"&gt;propagate_case: true&lt;/code&gt; is set), so the output will match the case of the original word (either lower-case, upper-case or capitalized)&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Inserting Common HTML and Markdown Elements&lt;/h3&gt;

&lt;p&gt;A simple one, if you find yourself often typing the symbols required for DOM elements, then this can save a bit of time.&lt;/p&gt;

&lt;p&gt;Common tags, like &lt;code class="prettyprint"&gt;:hr&lt;/code&gt;, &lt;code class="prettyprint"&gt;:br&lt;/code&gt;, &lt;code class="prettyprint"&gt;:div&lt;/code&gt;, &lt;code class="prettyprint"&gt;:span&lt;/code&gt;, &lt;code class="prettyprint"&gt;:para&lt;/code&gt;, &lt;code class="prettyprint"&gt;:h1&lt;/code&gt;, &lt;code class="prettyprint"&gt;:h2&lt;/code&gt; etc are autofilled, with the cursor placed inside the tag ready for the value. For custom web components and XML tags, use &lt;code class="prettyprint"&gt;:tag&lt;/code&gt;, and a form will open, where you can type the name of the element&lt;/p&gt;

&lt;p&gt;Right now, for markdown, all I have is &lt;code class="prettyprint"&gt;:md-code&lt;/code&gt; to insert a code block, and &lt;code class="prettyprint"&gt;:md-collapse&lt;/code&gt; will in the very annoying &lt;code class="prettyprint"&gt;&amp;lt;details&amp;gt;&amp;lt;summary&amp;gt;&lt;/code&gt;, and again place the cursor inside.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Inserts common HTML elements&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:hr&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;hr&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:br&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;br&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:div&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;div&amp;gt;$|$&amp;lt;/div&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:span&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;span&amp;gt;$|$&amp;lt;/span&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:h1&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;h1&amp;gt;$|$&amp;lt;/h1&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:h2&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;h2&amp;gt;$|$&amp;lt;/h2&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:h3&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;h3&amp;gt;$|$&amp;lt;/h3&amp;gt;'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:para&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;p&amp;gt;$|$&amp;lt;/p&amp;gt;'&lt;/span&gt;

&lt;span class="c1"&gt;# Inserts any custom HTML, XML or web component tag &lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:tag"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;{{html.element}}&amp;gt;$|$&amp;lt;/{{html.element}}&amp;gt;"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;html"&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;form&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;XML&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;HTML&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Element&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Inserter&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;Tag&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Name:&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;{{element}}"&lt;/span&gt;
      &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;element&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="nv"&gt;text&lt;/span&gt; &lt;span class="pi"&gt;}}&lt;/span&gt;

&lt;span class="c1"&gt;# Inserts a markdown code block&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:md-code&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;```&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;$|$&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;```"&lt;/span&gt;

&lt;span class="c1"&gt;# Inserts markdown collapsable section&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;:md-collapse&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;details&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;summary&amp;gt;$|$&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n\t&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;lt;/details&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Inserting Personal Info&lt;/h3&gt;

&lt;p&gt;There are several things that I find I need to type quite often, for various reasons. For example, email addresses, phone numbers, social media links, address and other important details. For some of this, I just use shortcuts (e.g. &lt;code class="prettyprint"&gt;:addr&lt;/code&gt; outputs my address), whereas for other tasks I use dropdowns. &lt;/p&gt;

&lt;p&gt;For example, to insert a social media profile link, without having to remember different shortcuts for different services, I just type &lt;code class="prettyprint"&gt;:social&lt;/code&gt;. I do the same thing with email addresses and project websites&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Inserts the URL to a selected website or social media platform&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:social"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;{{social.links}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
  &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;social"&lt;/span&gt;
    &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;form&lt;/span&gt;
    &lt;span class="na"&gt;params&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
      &lt;span class="na"&gt;layout&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;Social&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Media&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;Profiles&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;{{links}}"&lt;/span&gt;
      &lt;span class="na"&gt;fields&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;links&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;choice&lt;/span&gt;
          &lt;span class="na"&gt;values&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://aliciasykes.com'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://listed.to/@lissy93'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://github.com/lissy93'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://stackoverflow.com/users/979052/alicia'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://keybase.io/aliciasykes'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.linkedin.com/in/aliciasykes'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.reddit.com/user/lissy93'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://twitter.com/Lissy_Sykes'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.instagram.com/liss.sykes'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.facebook.com/liss.sykes'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.youtube.com/c/AliciaSykes'&lt;/span&gt;
          &lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://direct.me/liss'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Formulating Search Queries&lt;/h3&gt;

&lt;p&gt;There are browser extensions and web services that do this already (like DuckDuckGo bangs), but it's often useful to search a specific website, without having to first navigate to it. This function will formulate the URL, with the correct parameters ready for searching. You can also use &lt;code class="prettyprint"&gt;Ctrl&lt;/code&gt; + &lt;code class="prettyprint"&gt;L&lt;/code&gt; to focus the address bar.&lt;/p&gt;

&lt;p&gt;For example, &lt;code class="prettyprint"&gt;:srch-wiki&lt;/code&gt; will output &lt;code class="prettyprint"&gt;https://en.wikipedia.org/w/?search=&lt;/code&gt;. You can also search with the contents of your clipboard (&lt;code class="prettyprint"&gt;swc&lt;/code&gt;), where the query will be automatically filled.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Quick search, formulates the URL params for searching a given website&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-ddg&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-duckduckgo&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://duckduckgo.com/?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-wiki&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-wikipedia&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://en.wikipedia.org/w/?search='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-gh&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-github&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://github.com/search?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-so&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-stackoverflow&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://stackoverflow.com/search?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-dh&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-dockerhub&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://hub.docker.com/search?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-wa&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-wolframalpha&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.wolframalpha.com/input/?i='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-red&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-reddit&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.reddit.com/search/?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-bbc&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-bbc&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.bbc.co.uk/search?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-vt&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-virustotal&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.virustotal.com/gui/search/'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-amz&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-amazon&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://amazon.co.uk/s?k='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-yt&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-youtube&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://youtube.com/results?q='&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-maps&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-maps&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://www.google.com/maps/search/'&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;triggers&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[:&lt;/span&gt;&lt;span class="nv"&gt;srch-goo&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="pi"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;search-google&lt;/span&gt;&lt;span class="pi"&gt;]&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="s"&gt;https://google.com/search?q='&lt;/span&gt;

&lt;span class="c1"&gt;# Similar to above, but it uses the clipboard for the search query&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-ddg"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://duckduckgo.com/?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-wiki"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://en.wikipedia.org/w/?search='{{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-gh"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://github.com/search?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-so"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://stackoverflow.com/search?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-dh"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://hub.docker.com/search?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-wa"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://www.wolframalpha.com/input/?i={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-red"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://www.reddit.com/search/?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-bbc"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://www.bbc.co.uk/search?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-vt"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://www.virustotal.com/gui/search/{{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-amz"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://amazon.co.uk/s?k={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-yt"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://youtube.com/results?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-maps"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://www.google.com/maps/search/{{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;span class="pi"&gt;-&lt;/span&gt; &lt;span class="na"&gt;trigger&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;:swc-goo"&lt;/span&gt;
  &lt;span class="na"&gt;replace&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;https://google.com/search?q={{clipboard}}"&lt;/span&gt;
  &lt;span class="na"&gt;vars&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="pi"&gt;[{&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;type&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s"&gt;clipboard"&lt;/span&gt;&lt;span class="pi"&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h2&gt;Additional Notes&lt;/h2&gt;

&lt;p&gt;This is just a tiny tiny selection of things you could use Espanso for, the possibilities are almost endless, and I keep finding new ways to use it to speed up my typing. I'm excited about the future of the project, as new features and improvements are being added all the time.&lt;/p&gt;

&lt;p&gt;Huge kudos to the author, &lt;a href="https://federicoterzi.com/" rel="noopener nofollow" target="_blank"&gt;Federico Terzi&lt;/a&gt;, who has done the bulk of the work himself.&lt;/p&gt;

&lt;h3&gt;Security&lt;/h3&gt;

&lt;p&gt;This is worth mentioning, as I am sure others will be wondering about it. Initially I was fearful of a system that could apparently intercept all of my keystrokes, but the author has highlighted that it has been built with &lt;a href="https://github.com/federico-terzi/espanso/blob/master/SECURITY.md" rel="noopener nofollow" target="_blank"&gt;security in mind&lt;/a&gt;, there is absolutely no logging, and Espanso has a memory of just 3 characters (in order for the backspace functionality to work). There's also no network requests, and I verified this myself, both in the source, any by running Wireshark.&lt;br&gt;
The code is also extremely efficient, written in Rust, it uses virtually negligible system resources, even on a low-spec PC.&lt;/p&gt;

&lt;style&gt;
img.demo {
    border-radius: 6px;
    margin: 0 auto;
    box-shadow: 1px 2px 4px 2px #000000cf;
}
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Life in Months üóìÔ∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Tue, 13 Apr 2021 22:14:22 +0000</pubDate>
      <link>https://notes.aliciasykes.com/24701/my-life-in-months</link>
      <guid>https://notes.aliciasykes.com/24701/my-life-in-months</guid>
      <description>&lt;p&gt;&lt;p&gt;Do you ever wonder how you're spending you're life? I do, and so I went through the main activities that I do on a daily, weekly or monthly basis and calculated the approximate total time I've spent on each of them. The following chart is a breakdown of time as a proportion of my total life (so far), where each square represents 1 month. &lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/5sPCXDJ/how-i-spent-my-life-so-far-t.png" alt="My Life in Months"&gt;&lt;/p&gt;

&lt;p&gt;I am now having an mini existential crisis after seeing how much of my life I have spent on relatively meaningless activities!&lt;/p&gt;

&lt;style&gt;
img{ margin: 0 auto 0.25rem auto; background: #ffffff0a; border: 2px solid #00ccb429; border-radius: 5px; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Errors and Solutions ü§¨‚û°Ô∏èü•≥</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 25 Mar 2021 14:54:43 +0000</pubDate>
      <link>https://notes.aliciasykes.com/24099/errors-and-solutions</link>
      <guid>https://notes.aliciasykes.com/24099/errors-and-solutions</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;Common error messages, along with their solutions.&lt;br&gt;
Saves me having to figure the same thing out twice.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Categories&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#linux"&gt;Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#web-development"&gt;Web Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#misc"&gt;Misc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="linux"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Linux&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error running a shell script with systemd: &lt;code class="prettyprint"&gt;Failed to execute command: Exec format error&lt;/code&gt;&lt;br&gt;
‚úÖ Solution: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caused by missing shebang at  the start of the sh script&lt;/li&gt;
&lt;li&gt;Add the correct hash band identifier, e.g. &lt;code class="prettyprint"&gt;#!/bin/bash&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error: -bash: '\r': command not found&lt;br&gt;
‚úÖ Solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caused by Windows-style newline character&lt;/li&gt;
&lt;li&gt;Run &lt;code class="prettyprint"&gt;dos2unix&lt;/code&gt; over the file&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error with pakepkg: Cannot find the fakeroot binary&lt;br&gt;
‚úÖ Install the base-devel package group: &lt;code class="prettyprint"&gt;sudo pacman -S base-devel&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Yarn Error: There are no scenarios; must have at least one.&lt;br&gt;
‚úÖ Caused by the wrong yarn being installed, lol. Just remove it and reinstall it&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt remove yarn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt update &amp;amp;&amp;amp; sudo apt install yarn&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚ÑπÔ∏è Sources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://classic.yarnpkg.com/en/docs/install" rel="noopener nofollow" target="_blank"&gt;https://classic.yarnpkg.com/en/docs/install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/yarnpkg/yarn/issues/2821" rel="noopener nofollow" target="_blank"&gt;https://github.com/yarnpkg/yarn/issues/2821&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå FAILED (unknown public key XXXXX) - One or more PGP signatures could not be verified&lt;br&gt;
‚úÖ Solution: Add the PGP public key to your keychain, &lt;code class="prettyprint"&gt;gpg --recv-key [key ID]&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Docker, Service failed to build: cgroups: cgroup mountpoint does not exist: unknown&lt;br&gt;
‚úÖ Temporary workaround:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo mkdir /sys/fs/cgroup/systemd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo mount -t cgroup -o none,name=systemd cgroup /sys/fs/cgroup/systemd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Cargo: Failed to parse lock file at: path/to/Cargo.lock&lt;/p&gt;

&lt;p&gt;‚úÖ This is often caused by using an older version of Cargo. &lt;code class="prettyprint"&gt;rustup&lt;/code&gt; can be used to update both Cargo and Rust to their latest versions. So just run: &lt;code class="prettyprint"&gt;rustup update stable&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Go: package build constraints exclude all Go files in...&lt;br&gt;
‚úÖ Caused by packages being incorrectly cached, just run: &lt;code class="prettyprint"&gt;go clean -modcache&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Pacman: [package-name]: [/usr/share/path/to/pakage@latest/file.compiled] exists in filesystem&lt;/p&gt;

&lt;p&gt;This is caused by a file already existing, and Pacman not being intended to replace files. It usually happens when you've installed something manually, or using a third-party package manager, and hence it is not being tracked by Pacman.&lt;/p&gt;

&lt;p&gt;‚úÖ Solutions:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update Mirrors&lt;/strong&gt;&lt;br&gt;
Sometimes this can be fixed by simply updating the mirrors, with: &lt;br&gt;
&lt;code class="prettyprint"&gt;sudo pacman-mirrors --fasttrack &amp;amp;&amp;amp; sudo pacman -Syyu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Move / Remove Conflicting File&lt;/strong&gt;&lt;br&gt;
If not, then you can identify which packages owns the offending file, with:&lt;br&gt;
&lt;code class="prettyprint"&gt;pacman -Qo /path/to/file&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If the package is managed by Pacman, then you can move is with &lt;code class="prettyprint"&gt;pacman -R&lt;/code&gt;. &lt;/li&gt;
&lt;li&gt;Or if it's not linked to anything then either move or remove the file manually (renaming the file to &lt;code class="prettyprint"&gt;*.backup&lt;/code&gt; will enable you to roll back if needed).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Overwrite Files&lt;/strong&gt;&lt;br&gt;
Alternatively there's also an &lt;code class="prettyprint"&gt;--overwrite&lt;/code&gt; option, that will force Pacman to replace any conflicting files.  E.g. &lt;code class="prettyprint"&gt;sudo pacman -S [package-name] --overwrite '*'&lt;/code&gt;. This is useful when your local database has been "lost", causing every single installed package to throw a "conflicts" error.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
‚ÑπÔ∏è For more information, see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bbs.archlinux.org/viewtopic.php?id=56373" rel="noopener nofollow" target="_blank"&gt;https://bbs.archlinux.org/viewtopic.php?id=56373&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forum.manjaro.org/t/update-or-package-installation-returns-failed-to-commit-transaction-conflicting-files-filename-exists-in-filesystem/3598" rel="noopener nofollow" target="_blank"&gt;https://forum.manjaro.org/t/update-or-package-installation-returns-failed-to-commit-transaction-conflicting-files-filename-exists-in-filesystem/3598&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;A note for preventing this in the future&lt;/strong&gt;: When using a third-party installer, always specify an alternative installation location, e.g. &lt;code class="prettyprint"&gt;/home&lt;/code&gt;, &lt;code class="prettyprint"&gt;/opt&lt;/code&gt; or &lt;code class="prettyprint"&gt;/usr/local/&lt;/code&gt;. But never install directly under &lt;code class="prettyprint"&gt;/&lt;/code&gt; or &lt;code class="prettyprint"&gt;/usr&lt;/code&gt;.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Pacman error: failed retrieving file '_&lt;em&gt;' from _&lt;/em&gt;  Connection timed out after 10001 milliseconds&lt;/p&gt;

&lt;p&gt;‚úÖ Update mirrors: &lt;code class="prettyprint"&gt;sudo pacman-mirrors --country United_Kingdom&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Warning: High IOWait. Raspberry Pi 4, booted from a USB running incredibly slowly&lt;/p&gt;

&lt;p&gt;‚úÖ Run &lt;code class="prettyprint"&gt;lsusb -t&lt;/code&gt; if it shows &lt;code class="prettyprint"&gt;usb-storage&lt;/code&gt;, then UAS is not supported out of the box and you need to either enable it with quirks mode, or use a UAS-compatible drive.&lt;/p&gt;

&lt;p&gt;‚ÑπÔ∏è More Info:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.raspberrypi.org/forums/viewtopic.php?f=28&amp;amp;t=245931" rel="noopener nofollow" target="_blank"&gt;https://www.raspberrypi.org/forums/viewtopic.php?f=28&amp;amp;t=245931&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.raspberrypi.org/documentation/hardware/raspberrypi/bcm2711_bootloader_config.md" rel="noopener nofollow" target="_blank"&gt;https://www.raspberrypi.org/documentation/hardware/raspberrypi/bcm2711_bootloader_config.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error: Using Powerlevel10k in ZSH on R Pi: &lt;code class="prettyprint"&gt;gitstatus failed to initialize&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‚úÖ Solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caused by the binary for the gitstatusd module (used to show git into by P10K) not being available for the current architecture&lt;/li&gt;
&lt;li&gt;There are two solutions:

&lt;ul&gt;
&lt;li&gt;Either manually compile the binary, and set &lt;code class="prettyprint"&gt;GITSTATUS_DAEMON=/path/to/gitstatusd&lt;/code&gt; in &lt;code class="prettyprint"&gt;~/.zshrc&lt;/code&gt;. See: &lt;a href="https://github.com/romkatv/gitstatus/blob/master/README.md#compiling" rel="noopener nofollow" target="_blank"&gt;https://github.com/romkatv/gitstatus/blob/master/README.md#compiling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Or, if you don't need git display, then just comment out &lt;code class="prettyprint"&gt;POWERLEVEL9K_LEFT_PROMPT_ELEMENTS&lt;/code&gt; from the &lt;code class="prettyprint"&gt;vcs&lt;/code&gt; section in &lt;code class="prettyprint"&gt;~/.p10k.zsh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;‚ÑπÔ∏è More Info:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/romkatv/gitstatus/issues/73#issuecomment-548046415" rel="noopener nofollow" target="_blank"&gt;https://github.com/romkatv/gitstatus/issues/73#issuecomment-548046415&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/romkatv/powerlevel10k/issues/246#issuecomment-765509082" rel="noopener nofollow" target="_blank"&gt;https://github.com/romkatv/powerlevel10k/issues/246#issuecomment-765509082&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå wget: WGETRC points to /home/user/.config/wget/wgetrc, which couldn't be accessed because of error: No such file or directory.&lt;br&gt;
‚úÖ Caused my missing config file, just: &lt;code class="prettyprint"&gt;mkdir -p ~/.config/wget/ &amp;amp;&amp;amp; touch ~/.config/wget/wgetrc&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå ".": Permission denied (os error 13)&lt;/p&gt;

&lt;p&gt;‚úÖ sudo chown -R $(whoami) ./&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå &lt;code class="prettyprint"&gt;/usr/lib/libc.so.6: version&lt;/code&gt;GLIBC_2.34' not found`&lt;/p&gt;

&lt;p&gt;‚úÖ &lt;code class="prettyprint"&gt;pacman -S glibc lib32-glibc&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Running ssh-add shows: &lt;code class="prettyprint"&gt;Error connecting to agent: Connection refused&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;‚úÖ Start the SSH Agent, by running: &lt;code class="prettyprint"&gt;eval "$(ssh-agent)"&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Git error: only one config file at a time&lt;/p&gt;

&lt;p&gt;‚úÖ unset GIT_CONFIG&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="web-development"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Web Development&lt;/h2&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Flutter Web: No devices detected.&lt;br&gt;
‚úÖ Run &lt;code class="prettyprint"&gt;which [browser-name]&lt;/code&gt;, then store the path in &lt;code class="prettyprint"&gt;CHROME_EXECUTABLE&lt;/code&gt; environmental variable&lt;br&gt;
E.g. in .zshrc: &lt;code class="prettyprint"&gt;export CHROME_EXECUTABLE="/opt/brave.com/brave/brave-browser"&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Node Sass does not yet support your current environment: Windows 64-bit with Unsupported runtime (88)&lt;br&gt;
‚úÖ Solution: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caused by node-sass's binaries being built for a for a different architecture&lt;/li&gt;
&lt;li&gt;To fix this, just run: &lt;code class="prettyprint"&gt;npm rebuild node-sass&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå TypeError: Cannot assign to read only property 'exports' of object '#' error&lt;br&gt;
‚úÖ Solution:&lt;p&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Caused by using CommonJS syntax instead of ES Modules&lt;/li&gt;
&lt;li&gt;To fix it, just replace &lt;code class="prettyprint"&gt;module.exports = myFunc;&lt;/code&gt; with &lt;code class="prettyprint"&gt;export default myFunc;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error: Cannot find module './_baseValues'&lt;/p&gt;

&lt;p&gt;‚úÖ Solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Clearing the cache fixed this: &lt;code class="prettyprint"&gt;yarn cache clean&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If the issue persists, remove (&lt;code class="prettyprint"&gt;rm -rf node_modules\ yarn.lock&lt;/code&gt;) and reinstall (&lt;code class="prettyprint"&gt;yarn&lt;/code&gt;) node_modules&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error: Gatsby.js randomly decides that it cannot find a certain dependency&lt;br&gt;
    - e.g.: &lt;code class="prettyprint"&gt;No files matching '\x\x\x\node_modules\@gatsbyjs\x\x\x.js' were found.&lt;/code&gt;&lt;br&gt;
‚úÖ Solution: Remove the cache and restart. &lt;code class="prettyprint"&gt;rm -rf .cache &amp;amp;&amp;amp; yarn develop&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå 'React' was used before it was defined&lt;br&gt;
‚úÖ Solution: Within .eslintrc under &lt;code class="prettyprint"&gt;rules&lt;/code&gt;, disable the base rule, and add a TypeScript specific rule&lt;br&gt;
    - &lt;code class="prettyprint"&gt;"no-use-before-define": "off",&lt;/code&gt;&lt;br&gt;
    - &lt;code class="prettyprint"&gt;"@typescript-eslint/no-use-before-define": ["error"]&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error: Delete '‚êç' prettier/prettier&lt;br&gt;
‚úÖ Solution: &lt;br&gt;
    - Either change VS Codes end of line sequence from LF to CRLF&lt;br&gt;
    - Or add &lt;code class="prettyprint"&gt;endOfLine: 'auto'&lt;/code&gt; into .prettierrc&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå JSX not allowed in files with extension '.tsx'&lt;br&gt;
‚úÖ In &lt;code class="prettyprint"&gt;eslintrc&lt;/code&gt;, under the &lt;code class="prettyprint"&gt;rules&lt;/code&gt; section, add:&lt;br&gt;
    - &lt;code class="prettyprint"&gt;'react/jsx-filename-extension': [2, { 'extensions': ['.js', '.jsx', '.ts', '.tsx'] }]&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Start/ end value has mixed support, consider using flex-end instead&lt;br&gt;
‚úÖ When using flexbox layout, replace &lt;code class="prettyprint"&gt;align-items: end;&lt;/code&gt; with &lt;code class="prettyprint"&gt;align-items: flex-end;&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Project published to GitHub pages using GitHub actions shows as a 404 (even though code is correct)&lt;br&gt;
‚úÖ This seems to be a known reliability issues for new sites, and the following things (for some reason) help:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure that none of your files and sub-folders begin with an &lt;code class="prettyprint"&gt;_&lt;/code&gt;, as GitHub / Jekyll ignores these&lt;/li&gt;
&lt;li&gt;If you're not using Jekyll, then place a file called &lt;code class="prettyprint"&gt;.nojekyll&lt;/code&gt; in your projects root&lt;/li&gt;
&lt;li&gt;Remember that URLs are case-sensitive, ensure it's typed correctly, and that you're using &lt;code class="prettyprint"&gt;https&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check an older version is not cached, try clearing your site data, appending a string after &lt;code class="prettyprint"&gt;?&lt;/code&gt; in the URL, or use a different browser&lt;/li&gt;
&lt;li&gt;Double check that GitHub pages is enabled, pointing to the correct branch, and that there are no errors in the Actions logs&lt;/li&gt;
&lt;li&gt;Ensure your index.html is valid, has a doctype, e.g. &lt;code class="prettyprint"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/code&gt;, and doesn't include any non UTF-8 special characters&lt;/li&gt;
&lt;li&gt;Push an empty commit to trigger a rebuild: &lt;code class="prettyprint"&gt;git commit --allow-empty -m "Trigger rebuild" &amp;amp;&amp;amp; git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If you bound your domain, before GH pages was deployed, then GitHub caches the broken domain, try removing and re-adding your domain&lt;/li&gt;
&lt;li&gt;Try deleting and re-creating GH Pages branch: &lt;code class="prettyprint"&gt;git checkout gh-pages &amp;amp;&amp;amp; git push origin --delete gh-pages &amp;amp;&amp;amp; git push origin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Wait for a few hours... Sometimes this issue just fixes itself&lt;/li&gt;
&lt;li&gt;If nothing worked, then open a support ticket. This is a known issue with GitHub pages, and is usually quickly resolved by customer support from their end&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Npm Install global modules fails: Missing write access in mac to /usr/local/lib/node&lt;em&gt;modules&lt;br&gt;
‚úÖ Just update the permissions of global node&lt;/em&gt;modules&lt;br&gt;
sudo chown -R $USER ~/.npm&lt;br&gt;
sudo chown -R $USER /usr/lib/node&lt;em&gt;modules&lt;br&gt;
sudo chown -R $USER /usr/local/lib/node&lt;/em&gt;modules&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå npm ERR! code UNABLE&lt;em&gt;TO&lt;/em&gt;GET&lt;em&gt;ISSUER&lt;/em&gt;CERT_LOCALLY&lt;br&gt;
‚úÖ Run: &lt;code class="prettyprint"&gt;npm config set registry http://registry.npmjs.org/&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Yarn Error: unable to get local issuer certificate&lt;br&gt;
‚úÖ yarn config set "strict-ssl" false -g&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="misc"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Misc&lt;/h2&gt;

&lt;p&gt;‚ùå Cargo error &lt;code class="prettyprint"&gt;no such subcommand: 'make'&lt;/code&gt;&lt;br&gt;
‚úÖ Just install cargo make: &lt;code class="prettyprint"&gt;cargo install --no-default-features --force cargo-make&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Error on Windows: error during connect: This error may indicate that the docker daemon is not running.: Get http://%2F%2F.%2Fpipe%2Fdocker&lt;em&gt;engine/v1.24/containers/json: open //./pipe/docker&lt;/em&gt;engine: The system cannot find the file specified.&lt;br&gt;
‚úÖ Solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update the security permissions for the docker.exe file, to include "Users" (Right click --&amp;gt; Properties --&amp;gt; Security). This file is usually located in &lt;code class="prettyprint"&gt;C:\Program Files/Docker/Docker/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then restart Docker: As admin, run &lt;code class="prettyprint"&gt;Net stop com.docker.service&lt;/code&gt; and &lt;code class="prettyprint"&gt;Net start com.docker.service&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also, ensure that you have the latest version of Docker installed, and WSL is set to version 2 (with &lt;code class="prettyprint"&gt;wsl --set-default-version 2&lt;/code&gt;)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Docker inspect throws error on Windows: Template parsing error: template: :1: unclosed action&lt;br&gt;
‚úÖ Double quotes are required for the JSON keys, e.g. &lt;code class="prettyprint"&gt;docker inspect --format="{{json .State.Health}}" my-container&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå VirtualBox in Windows shows error: &lt;code class="prettyprint"&gt;VERR_CPUM_RAISE_GP_0 with WSL2&lt;/code&gt;&lt;br&gt;
‚úÖ Solution:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;As admin, run: &lt;code class="prettyprint"&gt;bcdedit /set hypervisorlaunchtype off&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then shutdown and restart the PC with &lt;code class="prettyprint"&gt;shutdown -s -t 2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Ngrok throws an error with react dev server: Invalid Host Header &lt;br&gt;
‚úÖ Add the -host-header flag, e.g. &lt;code class="prettyprint"&gt;ngrok http 8080 -host-header="localhost:8080"&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Gimp: Unable to apply Rounded Corners (Filters --&amp;gt; D√©cor --&amp;gt; xx)&lt;br&gt;
‚úÖ Solution:&lt;br&gt;
    - Some filters cannot be used with an alpha layer.&lt;br&gt;
    - Right-click on the current layer, and "Remove Alpha Channel"&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Ledger: Stuck on "Touch Security Key" using MetaMask on Windows with Ledger Nano X&lt;br&gt;
‚úÖ Solution:&lt;br&gt;
    - First, allow contract data in transactions (within the Eth app on the Ledger device)&lt;br&gt;
    - Disable Bluetooth, in order confirm transactions over USB (on Ledger's device Settings)&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Ledger: On Linux, cannot detect device&lt;br&gt;
‚úÖ Solution: Install udev rules&lt;br&gt;
    - wget -q -O - &lt;a href="https://raw.githubusercontent.com/LedgerHQ/udev-rules/master/add_udev_rules.sh" rel="noopener nofollow" target="_blank"&gt;https://raw.githubusercontent.com/LedgerHQ/udev-rules/master/add_udev_rules.sh&lt;/a&gt; | sudo bash&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Listed.to - Custom domain does not work, even when DNS records are all correct&lt;br&gt;
‚úÖ Ensure that DNS records are not proxied through Cloudflare's servers&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Standard Notes Linux - Unable to login, incorrect email and password even when correct&lt;br&gt;
‚úÖ Manually update the app to the latest version&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;‚ùå Flutter Web - No devices found&lt;/p&gt;

&lt;p&gt;‚úÖ If you don't have Chrome installed, then you can use Chromium or any other Chromium-based browser instead. You'll need to set the &lt;code class="prettyprint"&gt;CHROME_EXECUTABLE&lt;/code&gt; environmental variable to point to it's executable so that Flutter can launch it.&lt;br&gt;
E.g. &lt;code class="prettyprint"&gt;export CHROME_EXECUTABLE=/usr/bin/brave&lt;/code&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;style&gt;p{margin-bottom: 0 !important;} ul{margin-top: 0 !important;}&lt;/style&gt;
&lt;/p&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quick How-To Guides üí´</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 17 Mar 2021 20:05:24 +0000</pubDate>
      <link>https://notes.aliciasykes.com/23844/quick-how-to-guides</link>
      <guid>https://notes.aliciasykes.com/23844/quick-how-to-guides</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;A mix of simple things that (despite doing regularly) I still forget, as well as more niche stuff that took me a little while to figure out. The purpose of documenting this, is both to help others and for future reference for myself&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3&gt;Servers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/7TvtqtSBZg" rel="noopener nofollow" target="_blank"&gt;How to setup an SSH Tarpint with EndleShh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/18842/how-to-mullvad-vpn-using-wireguard-on-opnsense" rel="noopener nofollow" target="_blank"&gt;How to setup WireGuard on OPNSense for Mullvad VPN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/qTquNEXaSf"&gt;How to setup SSL for OPNSense, with Let's Encrypt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/J1K8TSTwWA"&gt;How to transfer a file to server, via SSH/SCP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/15742/how-to-use-ssh-for-server-authentication" rel="noopener nofollow" target="_blank"&gt;How to use SSH key Pairs for Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/22798/my-server-setup" rel="noopener nofollow" target="_blank"&gt;How to setup and secure a new Debian-based server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/16801/how-to-compile-install-software-on-arch" rel="noopener nofollow" target="_blank"&gt;How to compile and install software on Arch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/frKPhkrWVq" rel="noopener nofollow" target="_blank"&gt;How to Install Docker on Ubuntu 20.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/xyAgKFe7JL" rel="noopener nofollow" target="_blank"&gt;How to Install GoLang on Ubuntu 20.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/EzrYRxGLNB"&gt;How to Recover Broken OPNSense System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/19109/pi-zero-tor-routed-access-point" rel="noopener nofollow" target="_blank"&gt;How to create a Tor-routed wireless access point, on a Pi Zero W&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;General&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/QjfD4UFXUS"&gt;How to start a web server in one-line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/23054/pimping-up-your-duckduckgo-search-results#usage" rel="noopener nofollow" target="_blank"&gt;How to create and apply styles to DuckDuckGo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/bPH2yHhC3f" rel="noopener nofollow" target="_blank"&gt;How to count number of lines of Code with Cloc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/14972/how-to-operate-the-sharkjack" rel="noopener nofollow" target="_blank"&gt;How to operate the Shark Jack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/ZOg4pw3J8k" rel="noopener nofollow" target="_blank"&gt;How to reload Prometheus's Config&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/13402/how-to-enable-disable-pi-hole-from-cli" rel="noopener nofollow" target="_blank"&gt;How to enable/ disable Pi-Hole from the terminal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/nWcfB31ZTD" rel="noopener nofollow" target="_blank"&gt;How to Setup English Auto-Correct&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/x9Sjv06o9i" rel="noopener nofollow" target="_blank"&gt;How to improve arrow-key keyboard navigation, using AHK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/18756/custom-styling-for-listed-blog" rel="noopener nofollow" target="_blank"&gt;How to use a grid layout for Listed.to Blogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/RUi22QSyWe"&gt;How to expose a port to the internet using Ngrok&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/yMqhzEVGAq"&gt;How to use your own domain for your Netlify apps&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Coding&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/Tjdj2t6Ofi" rel="noopener nofollow" target="_blank"&gt;HTML: Easy-Peasy CSS Theme Switching&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/YcUgsjeFPh" rel="noopener nofollow" target="_blank"&gt;JS: Saving preferences with Local Storage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/bSvDC86ebq" rel="noopener nofollow" target="_blank"&gt;JS: How to animate browser/ tab title&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/2reTxF1s84" rel="noopener nofollow" target="_blank"&gt;Vue: How to respond to scroll position&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/r3T4Sbk1QG" rel="noopener nofollow" target="_blank"&gt;CSS: Pure-CSS Footer Wave Animation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/20679/reference-using-variable-fonts-in-css" rel="noopener nofollow" target="_blank"&gt;CSS: How to use variable font axes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/16818/keep-mouse-movin-sh" rel="noopener nofollow" target="_blank"&gt;Shell: How to periodically move mouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Code Management&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/hqeCTdPZHj"&gt;How to GPG sign git commits&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/HNyekxkuTC" rel="noopener nofollow" target="_blank"&gt;How to Mirror a Git Repo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/17996/quick-tip-git-submodules" rel="noopener nofollow" target="_blank"&gt;How to use Git Submodules&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://notes.aliciasykes.com/p/kqwVofIXQu"&gt;How to maintain NPM dependencies&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/@lissy93/16988/how-to-remove-all-node_modules-folders" rel="noopener nofollow" target="_blank"&gt;How to easily remove all node_modules directories&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;See Also&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/OOPbVavcLQ" rel="noopener nofollow" target="_blank"&gt;Errors and Solutions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/ym6ouOts4E" rel="noopener nofollow" target="_blank"&gt;Code Snippets&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/V50baRC2u8" rel="noopener nofollow" target="_blank"&gt;Handy Reference Info&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listed.to/p/kuYHyRFOtH" rel="noopener nofollow" target="_blank"&gt;My Projects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
blockquote, ul li { font-size: 1.1rem; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>SSH Tarpit with EndleSsh ü™§üï≥Ô∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 13 Mar 2021 18:17:30 +0000</pubDate>
      <link>https://notes.aliciasykes.com/23745/ssh-tarpit-with-endlessh</link>
      <guid>https://notes.aliciasykes.com/23745/ssh-tarpit-with-endlessh</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;a href="https://github.com/skeeto/endlessh" rel="noopener nofollow" target="_blank"&gt;Endlessh&lt;/a&gt; is an SSH tarpit to keep the automated bots hitting port 22 locked up, and waste script kiddies time.&lt;/p&gt;

&lt;p&gt;You can either get it from your package manager with &lt;code class="prettyprint"&gt;sudo apt install endless&lt;/code&gt;, or build from source. To build, ensure you have &lt;code class="prettyprint"&gt;libc6-dev&lt;/code&gt; installed, then &lt;code class="prettyprint"&gt;git clone git@github.com:skeeto/endlessh.git&lt;/code&gt;, &lt;code class="prettyprint"&gt;cd endlessh&lt;/code&gt;, &lt;code class="prettyprint"&gt;make&lt;/code&gt;, and move it to your path- &lt;code class="prettyprint"&gt;sudo mv endlessh /usr/local/bin/&lt;/code&gt;. &lt;/p&gt;

&lt;p&gt;Move the service to systemd, &lt;code class="prettyprint"&gt;sudo cp util/endlessh.service /etc/systemd/system&lt;/code&gt;, and enable it &lt;code class="prettyprint"&gt;sudo systemctl enable endlessh&lt;/code&gt;. Next, specify the configuration &lt;code class="prettyprint"&gt;mkdir /etc/endlessh&lt;/code&gt; and &lt;code class="prettyprint"&gt;sudo vim /etc/endlessh/config&lt;/code&gt;&lt;br&gt;
Add your desired config, e.g.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Port 22
Delay 10000
MaxLineLength 32
MaxClients 4096
LogLevel 0
BindFamily 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you're using a low port number, ensure you update the &lt;code class="prettyprint"&gt;endlessh.service&lt;/code&gt; with &lt;code class="prettyprint"&gt;AmbientCapabilities=CAP_NET_BIND_SERVICE&lt;/code&gt;, and run &lt;code class="prettyprint"&gt;sudo setcap 'cap_net_bind_service=+ep' /usr/local/bin/endlessh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, run &lt;code class="prettyprint"&gt;sudo systemctl start endlessh&lt;/code&gt; to start the service, you should now see the service running on your specified port when you run &lt;code class="prettyprint"&gt;netstat -tulpn | grep endlessh&lt;/code&gt;. If you need to check the logs, run &lt;code class="prettyprint"&gt;sudo journalctl -u endlessh&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pimping up Your DuckDuckGo Search Results üíÑ</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 20 Feb 2021 20:00:00 +0000</pubDate>
      <link>https://notes.aliciasykes.com/23054/pimping-up-your-duckduckgo-search-results</link>
      <guid>https://notes.aliciasykes.com/23054/pimping-up-your-duckduckgo-search-results</guid>
      <description>&lt;p&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#navy-teal"&gt;Themes&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#navy-teal"&gt;Navy + Teal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#titanium"&gt;Titanium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#cyberpunk"&gt;Cyberpunk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#dracula"&gt;Dracula&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hack"&gt;Hack&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#neon"&gt;Neon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#nord"&gt;Nord&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="intro"&gt; &lt;p&gt;&lt;/p&gt;

&lt;p&gt;Yet another awesome feature of DuckDuckGo, is that they make it really easy to modify your theme, just go to: &lt;a href="https://duckduckgo.com/settings#appearance" rel="noopener nofollow" target="_blank"&gt;https://duckduckgo.com/settings#appearance&lt;/a&gt;. From here you can customize your colors, fonts and layout of your search results and home page.&lt;/p&gt;

&lt;p&gt;I am no designer by any stretch of the imagination (as you can probably see!), but here are a couple of &lt;a href="https://i.ibb.co/nMnjmcQ/Duck-Duck-Go-Themes.png" rel="noopener nofollow" target="_blank"&gt;themes&lt;/a&gt; I made, along with their code if you want to use them. You can preview themes live without making any changes by clicking the link below each screenshot, or to apply a theme, see the JS snippet at the end of this post.&lt;/p&gt;

&lt;p&gt;Settings in DDG can either be applied temporarily with DuckDuckGo's &lt;a href="https://duckduckgo.com/params" rel="noopener nofollow" target="_blank"&gt;URL parameters&lt;/a&gt;, locally as cookies, or globally using DDG's Cloud Save feature. &lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="navy-teal"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Callisto&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/LvCnWRd/navy-turquoise-search.png" alt="Screenshot - Navy Turquoise"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/?kae=d&amp;amp;k5=1&amp;amp;kay=b&amp;amp;kbc=1&amp;amp;kax=v261-7&amp;amp;kx=a8d3ff&amp;amp;kaa=0a7355&amp;amp;kj=080813&amp;amp;k9=00af87&amp;amp;k18=1&amp;amp;ka=Hack&amp;amp;k8=d3d5e5&amp;amp;k21=080813&amp;amp;k7=0b1021&amp;amp;kt=v" rel="noopener nofollow" target="_blank"&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Palette&lt;/strong&gt;: &lt;code class="prettyprint"&gt;#0b1021&lt;/code&gt;, &lt;code class="prettyprint"&gt;#080813&lt;/code&gt;, , &lt;code class="prettyprint"&gt;#00af87&lt;/code&gt;, &lt;code class="prettyprint"&gt;#0a7355&lt;/code&gt;, &lt;code class="prettyprint"&gt;#d3d5e5&lt;/code&gt;, &lt;code class="prettyprint"&gt;#a8d3ff&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kbc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"v261-7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"a8d3ff"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"0a7355"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"080813"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"00af87"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k18"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Hack"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d3d5e5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k21"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"080813"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"0b1021"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"v"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5=1; ay=b; bc=1; ae=d; ax=v261-7; 18=1; aa=0a7355; x=a8d3ff; 8=d3d5e5; 9=00af87; j=080813; 7=0b1021; 21=080813; a=Hack; t=v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="titanium"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Titanium&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/FgWqMX8/titanium-search.png" alt="Screenshot - Titanium"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/?kae=d&amp;amp;k5=1&amp;amp;kay=b&amp;amp;kbc=1&amp;amp;kax=v261-7&amp;amp;kx=000000&amp;amp;kaa=9b83db&amp;amp;kj=9b83db&amp;amp;k9=9b83db&amp;amp;k18=1&amp;amp;k8=000000&amp;amp;k21=9b83db&amp;amp;k7=dedede&amp;amp;kt=b&amp;amp;ku=1&amp;amp;ka=Arial+Rounded+MT+Bold" rel="noopener nofollow" target="_blank"&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Palette&lt;/strong&gt;: &lt;code class="prettyprint"&gt;#dedede&lt;/code&gt;, &lt;code class="prettyprint"&gt;#9b83db&lt;/code&gt;, &lt;code class="prettyprint"&gt;#000000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kbc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"v261-7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"000000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"9b83db"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"9b83db"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"9b83db"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k18"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"000000"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k21"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"9b83db"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"dedede"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Arial Rounded MT Bold"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5=1; ay=b; bc=1; ae=d; ax=v261-7; u=1; 18=1; j=9b83db; x=000000; 7=dedede; 8=000000; aa=9b83db; 9=9b83db; 21=9b83db; t=b; a=Arial%20Rounded%20MT%20Bold
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="cyberpunk"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Cyberpunk&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/fx1nWmr/cyberpunk-search.png" alt="Screenshot - Cyberpunk"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/?kae=d&amp;amp;k5=1&amp;amp;kay=b&amp;amp;kbc=1&amp;amp;kax=v261-7&amp;amp;kx=FFFC58&amp;amp;kaa=9254b5&amp;amp;kj=FF0055&amp;amp;k9=FF0055&amp;amp;k18=1&amp;amp;ka=Cyberpunk&amp;amp;k8=785eef+&amp;amp;k21=FFFC58&amp;amp;k7=101116&amp;amp;kt=e" rel="noopener nofollow" target="_blank"&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Palette&lt;/strong&gt;: &lt;code class="prettyprint"&gt;#101116&lt;/code&gt;, &lt;code class="prettyprint"&gt;#ff0055&lt;/code&gt;, &lt;code class="prettyprint"&gt;#9254b5&lt;/code&gt;, &lt;code class="prettyprint"&gt;#785eef&lt;/code&gt;, &lt;code class="prettyprint"&gt;#fffc58&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kbc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"v261-7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"FFFC58"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"9254b5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"FF0055"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"FF0055"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k18"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Cyberpunk"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"785eef "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k21"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"FFFC58"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"101116"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"e"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5=1; ay=b; bc=1; ae=d; ax=v261-7; 8=785eef%20; aa=9254b5; x=FFFC58; 18=1; j=FF0055; 21=FFFC58; 7=101116; 9=FF0055; a=Cyberpunk; t=e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="dracula"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Dracula&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/MDmwMRk/dracula-search.png" alt="Screenshot - Dracula"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/?kae=t&amp;amp;ks=m&amp;amp;kw=n&amp;amp;ko=s&amp;amp;ku=-1&amp;amp;ky=44475a&amp;amp;k7=282a36&amp;amp;k8=f8f8f2&amp;amp;k9=50fa7b&amp;amp;kt=p&amp;amp;km=l&amp;amp;kj=282a36&amp;amp;ka=p&amp;amp;kaa=bd93f9&amp;amp;kx=f1fa8c&amp;amp;kaf=1&amp;amp;kai=1&amp;amp;kf=1" rel="noopener nofollow" target="_blank"&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Credit&lt;/strong&gt;: This theme was inspired by &lt;a href="https://draculatheme.com/" rel="noopener nofollow" target="_blank"&gt;Dracula&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"t"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ks"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"m"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kw"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"n"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ko"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ku"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"-1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ky"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"44475a"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"282a36"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"f8f8f2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"50fa7b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"km"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"l"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"282a36"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"p"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"bd93f9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"f1fa8c"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaf"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kai"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kf"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;ae&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;w&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;o&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;u&lt;/span&gt;&lt;span class="o"&gt;=-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;44475&lt;/span&gt;&lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;282&lt;/span&gt;&lt;span class="nx"&gt;a36&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;f8f8f2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="nx"&gt;fa7b&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;l&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;j&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;282&lt;/span&gt;&lt;span class="nx"&gt;a36&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;aa&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;bd93f9&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nx"&gt;f1fa8c&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;af&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;ai&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="hack"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Hack&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/Rzwf5Bv/hack-search.png" alt="Screenshot - Hack"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/?kae=d&amp;amp;k5=1&amp;amp;kay=b&amp;amp;kbc=1&amp;amp;kax=v261-7&amp;amp;kx=FFFC58&amp;amp;kaa=0cbd2b&amp;amp;kj=070709&amp;amp;k9=00ff2b&amp;amp;k18=1&amp;amp;ka=Courier+New&amp;amp;k8=d1d1d1&amp;amp;k21=118b25&amp;amp;k7=101116&amp;amp;kt=Courier" rel="noopener nofollow" target="_blank"&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Palette&lt;/strong&gt;: &lt;code class="prettyprint"&gt;#101116&lt;/code&gt;, &lt;code class="prettyprint"&gt;#070709&lt;/code&gt;, &lt;code class="prettyprint"&gt;#00ff2b&lt;/code&gt;, &lt;code class="prettyprint"&gt;#d1d1d1&lt;/code&gt;, &lt;code class="prettyprint"&gt;#fffc58&lt;/code&gt;, &lt;code class="prettyprint"&gt;#118b25&lt;/code&gt;, Font: &lt;code class="prettyprint"&gt;Courier&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kbc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"v261-7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"FFFC58"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"0cbd2b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"070709"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"00ff2b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k18"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Courier New"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d1d1d1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k21"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"118b25"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"101116"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Courier"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5=1; ay=b; bc=1; ae=d; ax=v261-7; j=070709; x=FFFC58; 18=1; 7=101116; 9=00ff2b; aa=0cbd2b; 21=118b25; 8=d1d1d1; t=Courier; a=Courier%20New
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="neon"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Neon&lt;/h2&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/9wn45cT/neon-search.png" alt="Screenshot - Neon"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=""&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Palette&lt;/strong&gt;: &lt;code class="prettyprint"&gt;#261d49&lt;/code&gt;, &lt;code class="prettyprint"&gt;#2a1f48&lt;/code&gt;, &lt;code class="prettyprint"&gt;#df95ff&lt;/code&gt;, &lt;code class="prettyprint"&gt;#9254b5&lt;/code&gt;, &lt;code class="prettyprint"&gt;#1bccfd&lt;/code&gt;, &lt;code class="prettyprint"&gt;#21f6bc&lt;/code&gt;, Font: &lt;code class="prettyprint"&gt;Hack&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kbc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Hack"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"261d49"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1bccfd"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k21"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"2a1f48"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k18"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"21f6bc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"9254b5"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"2a1f48"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"df95ff"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5=1; ay=b; bc=1; ae=d; j=2a1f48; a=Hack; 18=1; aa=9254b5; 7=261d49; 9=df95ff; 8=1bccfd; 21=2a1f48; x=21f6bc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="nord"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Nord&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Pale grey and dusty pastel&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/SyzVB9P/nord-search.png" alt="Screenshot - Nord"&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://duckduckgo.com/?kae=d&amp;amp;k5=1&amp;amp;kay=b&amp;amp;kbc=1&amp;amp;kax=v261-7&amp;amp;kx=b28ead&amp;amp;kaa=87c0d0&amp;amp;kj=404855&amp;amp;k9=%2381a1c1&amp;amp;k18=1&amp;amp;ka=Courier+New&amp;amp;k8=%2381a1c1&amp;amp;k21=%2381a1c1&amp;amp;k7=2e3440&amp;amp;kt=h" rel="noopener nofollow" target="_blank"&gt;Try it Out!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Color Palette&lt;/strong&gt;: &lt;code class="prettyprint"&gt;#2e3440&lt;/code&gt;, &lt;code class="prettyprint"&gt;#404855&lt;/code&gt;, &lt;code class="prettyprint"&gt;#81a1c1&lt;/code&gt;, &lt;code class="prettyprint"&gt;#87c0d0&lt;/code&gt;, &lt;code class="prettyprint"&gt;#b28ead&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSON&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nl"&gt;"kae"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"d"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k5"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kay"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kbc"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kax"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"v261-7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kx"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"b28ead"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kaa"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"87c0d0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kj"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"404855"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k9"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"#81a1c1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k18"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"ka"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"Courier New"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k8"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"#81a1c1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k21"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"#81a1c1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"k7"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"2e3440"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;"kt"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"h"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Cookie Data&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;5=1; ay=b; bc=1; ae=d; ax=v261-7; a=Courier%20New; 7=2e3440; 18=1; 9=81a1c1; 8=81a1c1; aa=87c0d0; x=b28ead; 21=81a1c1; j=404855; t=h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;/p&gt;&lt;hr id="usage"&gt; &lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;There are three different methods of applying themes: Using cookies, URL parameters or DDG's cloud store&lt;/p&gt;

&lt;p&gt;For cookies, settings can be applied programmatically with JavaScript directly through the browser console (or using a dev tool or third-party extension). Settings are specified as individual cookies, with a single string identifier and a corresponding value. The following is a quick script to apply settings easily, just replace &lt;code class="prettyprint"&gt;ddg_cookie_input&lt;/code&gt; with your desired data (or use one of the examples above). Note that you must be on the DuckDuckGo domain for this to work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Converts DDG cookie string into formatted JSON&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;makeCookieData&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ddg_cookie_input&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;ddg_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ddg_cookie_input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;[&lt;/span&gt;&lt;span class="sr"&gt; ,&lt;/span&gt;&lt;span class="se"&gt;]&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;parts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;=&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;ddg_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;parts&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;ddg_json&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Iterates over JSON, and adds to browser cookie store&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;setCookies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ddg_json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nb"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ddg_json&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cookie&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;ddg_json&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;// Paste your cookie data here&lt;/span&gt;
&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;ddg_cookie_input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;`5=1; ay=b; bc=1; ae=d; ax=v261-7; 18=1; aa=0a7355; x=a8d3ff; 8=d3d5e5; 9=00af87; j=080813; 7=0b1021; 21=080813; a=Hack; t=v`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Call set cookies, passing in formated cookie data&lt;/span&gt;
&lt;span class="nx"&gt;setCookies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;makeCookieData&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ddg_cookie_input&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="c1"&gt;// All done, reload page for changes to take effect :)&lt;/span&gt;
&lt;span class="nx"&gt;location&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reload&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is handy, because once you've got DDG setup just how you like, you can make note of these values, and then easily apply them to any other system or browser with a single command.&lt;/p&gt;

&lt;p&gt;If you would rather not set cookies, then you can use URL GET parameters (but note that the identifiers are different, see the full &lt;a href="https://duckduckgo.com/params" rel="noopener nofollow" target="_blank"&gt;list of options here&lt;/a&gt;). You can find pre-formatted URL under Settings --&amp;gt; Appearance --&amp;gt; Show Bookmarklet and Settings Data. Here you can also enable cloud save, where you pick a password which is encoded into a URL so that you can access your setup on a different browser/ device. &lt;/p&gt;

&lt;p&gt;Alternatively, if you're already using &lt;a href="https://www.tampermonkey.net/" rel="noopener nofollow" target="_blank"&gt;TamperMonkey&lt;/a&gt;, then you can manage this with JavaScript. Similarly if you're comfortable with CSS, then you have a lot more flexibility, and extensions like &lt;a href="https://userstyles.org/" rel="noopener nofollow" target="_blank"&gt;Stylish&lt;/a&gt; can make it easy to manage CSS overrides (here are some &lt;a href="https://userstyles.org/styles/browse?search_terms=DuckDuckGo&amp;amp;type=false" rel="noopener nofollow" target="_blank"&gt;examples&lt;/a&gt;). - But the great thing about DDG, is that no extensions of hacks are required. (Also note that browser extensions can be pretty bad for privacy- they make your fingerprint much more unique, and occasionally are plain malicious)&lt;/p&gt;

&lt;style&gt;
    pre.highlight code{ white-space: pre-line; }
    .highlight pre { min-width: 500px; overflow: unset; }
    p img {
        width: 100%;
        max-width: 800px !important;
    margin: 0 auto;
    border-radius: 5px;
        box-shadow: 0 2px 5px rgb(0 0 0 / 70%), 3px 2px 2px rgb(0 0 0 / 50%);
    }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Server Setup ‚öôÔ∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Fri, 12 Feb 2021 20:00:00 +0000</pubDate>
      <link>https://notes.aliciasykes.com/22798/my-server-setup</link>
      <guid>https://notes.aliciasykes.com/22798/my-server-setup</guid>
      <description>&lt;p&gt;&lt;p&gt;This article outlines the steps I take on any new server, to configure it for security, consistency and convenience. It is written specifically for Debian, but will also directly apply to derivatives (such as Ubuntu), and will likely be very similar for for other distros.&lt;/p&gt;

&lt;p&gt;I am in the process of writing automation scripts to cover all of these steps, in the form of Ansible Playbooks.&lt;/p&gt;

&lt;p&gt;This guide is split into 10 sections:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#system-update"&gt;System Update&lt;/a&gt; - Upgrade the OS and enable automated security updates&lt;/li&gt;
&lt;li&gt;&lt;a href="#system-setup"&gt;System Setup&lt;/a&gt; - Specify hostname, add users, configure server time etc&lt;/li&gt;
&lt;li&gt;&lt;a href="#configure-ssh"&gt;Configure SSH&lt;/a&gt; - Setup keys, configure sshd_config and set permissions&lt;/li&gt;
&lt;li&gt;&lt;a href="#install-packages"&gt;Install Essential Software&lt;/a&gt; - Including git, vim, zsh, tmux, ranger etc&lt;/li&gt;
&lt;li&gt;&lt;a href="#firewall"&gt;Enable Firewall&lt;/a&gt; - Manage allowed inbound/ outbound connections with UFW&lt;/li&gt;
&lt;li&gt;&lt;a href="#intrusion-prevention"&gt;Setup Intrusion Prevention&lt;/a&gt; - Protect from brute force attacks with Fail2Ban&lt;/li&gt;
&lt;li&gt;&lt;a href="#malicious-traffic-detection"&gt;Configure Malicious Traffic Detection&lt;/a&gt; - Flag malicious packets with MalTrail&lt;/li&gt;
&lt;li&gt;&lt;a href="#security-audit"&gt;Implement Security Auditing and Scanning&lt;/a&gt; - With ClamAV, Lynis and RKhunter&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup-dotfiles"&gt;Fetch Dotfiles&lt;/a&gt; for Vim, ZSH, Tmux etc to make SSH sessions more comfortable&lt;/li&gt;
&lt;li&gt;&lt;a href="#borg-backup"&gt;Automated Backups&lt;/a&gt; - Using Borg for incremental, off-site, encrypted backups&lt;/li&gt;
&lt;li&gt;&lt;a href="#setup-system-monitoring"&gt;Setup System Monitoring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#final-steps"&gt;Final Steps&lt;/a&gt; - Optional items (Go, Rust, Node, Python, Docker, NGINX etc..)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="system-update"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;System Update&lt;/h2&gt;

&lt;p&gt;Update the System and Packages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;apt update&lt;/code&gt; - Update system packages&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;apt -y upgrade&lt;/code&gt; - Upgrade OS&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;apt autoremove&lt;/code&gt; and &lt;code class="prettyprint"&gt;apt clean&lt;/code&gt; - Remove locally downloaded deb packages and apt-get caches&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enable Unattended Upgrades&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;apt install unattended-upgrades&lt;/code&gt; - Install package (if not already installed)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;dpkg-reconfigure --priority=high unattended-upgrades&lt;/code&gt; - Enable automatic upgrades&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vi /etc/apt/apt.conf.d/50unattended-upgrades&lt;/code&gt; to update the configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="system-setup"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;System Setup&lt;/h2&gt;

&lt;p&gt;Specify Host Name&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo hostnamectl set-hostname [new-host-name]&lt;/code&gt; - Set the machines host name (view with &lt;code class="prettyprint"&gt;hostname&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Add &lt;code class="prettyprint"&gt;127.0.0.1 [hostname]&lt;/code&gt; into &lt;code class="prettyprint"&gt;/etc/hosts&lt;/code&gt; - Add host name to the hosts file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Add New Users&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;useradd -m [username] -c "[user full name]"&lt;/code&gt; - Create a new user (&lt;code class="prettyprint"&gt;-c&lt;/code&gt; Allows an associated name or comment)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;passwd [username]&lt;/code&gt; - Specify a password for new user&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo usermod -a -G sudo [username]&lt;/code&gt; - Gives the user root privileges (only apply if needed)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Set the Server Time&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo timedatectl set-timezone Europe/London&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo vi /etc/systemd/timesyncd.conf&lt;/code&gt; and add the address of the local NTP server&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo systemctl restart systemd-timesyncd.service&lt;/code&gt; - Restart the time sync service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="configure-ssh"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Configure SSH&lt;/h2&gt;

&lt;p&gt;Setup SSH Keys for Authentication&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install openssh-server&lt;/code&gt; - Install OpenSSH Server on remote host&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ssh-keygen -t rsa -b 4096&lt;/code&gt; - On the local system. Generates a new SSH key pair (enter a strong passphrase when prompted)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ssh-copy-id root@[0.0.0.0]&lt;/code&gt; - Uploads to the remote server, and update the hosts file&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;chmod go-w ~ ~/.ssh ~/.ssh/authorized_keys&lt;/code&gt; - On the remote host, updated permissions&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo ufw allow ssh&lt;/code&gt; - If UFW is enabled, then allow SSH access&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next we're going configure a couple of SSH security essentials&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vim /etc/ssh/sshd_config&lt;/code&gt; - To open the SSH daemon's config file , and update:

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;Protocol 2&lt;/code&gt; # Only use SSH 2 Protocol&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;PermitRootLogin no&lt;/code&gt; # Disable root SSH login&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;PasswordAuthentication no&lt;/code&gt; # Disable password-based SSH login&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;Compression delayed&lt;/code&gt; # Compression could be dangerous, only allow it once authenticated&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;MaxAuthTries 5&lt;/code&gt; # Limit the maximum authentication attempts&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;PrintLastLog yes&lt;/code&gt; # Display last login date for an extra check (should be default)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;PermitEmptyPasswords no&lt;/code&gt; # Disallow empty passwords (Not relevant for SSH Keys, but still good to have)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;IgnoreRhosts yes&lt;/code&gt; # Disallow access via rhosts, which is rarely used anymore&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;IgnoreUserKnownHosts yes&lt;/code&gt; # Only trust the global known hosts list&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;HostBasedAuthentication no&lt;/code&gt; # Similar to rhosts, this is rarely used&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;Port 2200&lt;/code&gt; # Set SSH access to a non-standard port&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;StrictModes yes&lt;/code&gt; # Prevent users from accidentally leaving their directories/ files as writable&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;UsePrivilegeSeparation sandbox&lt;/code&gt; # Prevent privilege escalation&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;PubkeyAuthentication yes&lt;/code&gt; # Public key authentication should be preferred (should be default)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;GSSAPIAuthentication no&lt;/code&gt; # If you are not using GSSAPI authentication, this should be disabled&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;KerberosAuthentication no&lt;/code&gt; # If you are not using Kerberos authentication, this again should be disabled&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;Ciphers aes128-ctr,aes192-ctr,aes256-ctr&lt;/code&gt; # Use FIPS 140-2 compliant ciphers, to avoid weak encryption algorithms&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;MACs hmac-sha2-256,hmac-sha2-512&lt;/code&gt; # Use FIPS 140-2 Compliant MACs, to avoid weak cryptographic hashes&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;HashKnownHosts yes&lt;/code&gt; - Storing host data in plaintext gives an attacker a clear picture of the network&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The SSH daemon must be restarted, in order for these config changes to take effect: &lt;code class="prettyprint"&gt;sudo systemctl restart ssh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Protect SSH Host Keys&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo chmod 0600 /etc/ssh/*key&lt;/code&gt; - Set permissions for private keys&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo chmod 0644 /etc/ssh/*pub&lt;/code&gt; - Set permissions for public keys&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If your system stores keys in a different directory, you can find them with &lt;code class="prettyprint"&gt;grep -i hostkey /etc/ssh/sshd_config&lt;/code&gt;. You can list the permissions of keys with &lt;code class="prettyprint"&gt;ls -l /etc/ssh/*key&lt;/code&gt; (or &lt;code class="prettyprint"&gt;*pub&lt;/code&gt; for public keys)&lt;/p&gt;

&lt;p&gt;Optionally, &lt;a href="https://listed.to/p/7TvtqtSBZg" rel="noopener nofollow" target="_blank"&gt;configure an SSH tarpit&lt;/a&gt;, to lock up the bots hammering port 22, with Endlessh&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="install-packages"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Install Essential Software&lt;/h2&gt;

&lt;p&gt;Install Packages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt update&lt;/code&gt; - Ensure the package list is up-to-date&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y git vim tmux zsh ranger&lt;/code&gt; - Install essentials: vim, git, tmux, ZSH and ranger&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y make curl&lt;/code&gt; - Install utilities&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y fzf exa&lt;/code&gt; - Install command line improvements&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y ctags xsel glances fonts-powerline&lt;/code&gt; - Install visual improvements&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y clamav rkhunter lynis&lt;/code&gt; - Install security audit tools&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y neofetch figlet lolcat&lt;/code&gt; - Optionally, install fun stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Optionally,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If needed, &lt;a href="https://listed.to/p/frKPhkrWVq" rel="noopener nofollow" target="_blank"&gt;install Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If needed, &lt;a href="https://listed.to/p/xyAgKFe7JL" rel="noopener nofollow" target="_blank"&gt;install Go Lang&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If needed, install Rust and Cargo, with &lt;code class="prettyprint"&gt;sudo curl https://sh.rustup.rs -sSf | sh&lt;/code&gt; (check the script first!)&lt;/li&gt;
&lt;li&gt;If needed, install Python and PIP, with &lt;code class="prettyprint"&gt;sudo apt install python3 python3-pip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If needed, install Node.js and NPM, with &lt;code class="prettyprint"&gt;sudo apt install nodejs npm&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Or use &lt;a href="https://github.com/nodesource/distributions" rel="noopener nofollow" target="_blank"&gt;NodeSource&lt;/a&gt;'s  Node.js PPA: &lt;code class="prettyprint"&gt;curl -fsSL https://deb.nodesource.com/setup_current.x | bash -&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="firewall"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Configure Firewall with UFW&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install ufw&lt;/code&gt; - Install UFW&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo vi /etc/default/ufw&lt;/code&gt; and set &lt;code class="prettyprint"&gt;IPV6=yes&lt;/code&gt; to use IPv6&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo ufw default deny incoming&lt;/code&gt; and &lt;code class="prettyprint"&gt;sudo ufw default allow outgoing&lt;/code&gt; to deny all incoming traffic, and allow outgoing&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo ufw allow 2200/tcp&lt;/code&gt; to for example, allow incoming SSH traffic on port 2200&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo ufw disable&lt;/code&gt; and &lt;code class="prettyprint"&gt;sudo ufw enable&lt;/code&gt; (or &lt;code class="prettyprint"&gt;systemctl restart ufw&lt;/code&gt;) to restart UFW&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo ufw status&lt;/code&gt; - Check the current status&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Whenever a new application is configured, UFW needs to be updated to allow incoming traffic to that port and protocol. &lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="intrusion-prevention"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Intrusion Prevention with Fail2Ban&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install fail2ban&lt;/code&gt; - Install Fail2ban&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo cp /etc/fail2ban/jail.{conf,local}&lt;/code&gt; - Copy &lt;code class="prettyprint"&gt;jail.conf&lt;/code&gt; to &lt;code class="prettyprint"&gt;jail.local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo vi /etc/fail2ban/jail.local&lt;/code&gt; - To edit the local config file, and add:

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ignoreip = 127.0.0.1/8 ::1 192.168.1.0/24&lt;/code&gt; - with local IP addresses&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bantime  = 1d&lt;/code&gt; - Increase the ban time to 1 day&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;findtime  = 10m&lt;/code&gt; - Time between each attempt&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;maxretry = 7&lt;/code&gt; - Number of failures before IP is banned&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo systemctl restart fail2ban&lt;/code&gt; - Restart Fail2ban, for changes to take effect&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo systemctl status fail2ban&lt;/code&gt; - Show the current status&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code class="prettyprint"&gt;fail2ban-client&lt;/code&gt; can also be used to interact with the Fail2ban service from the CLI&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="malicious-traffic-detection"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Malicious Traffic Detection with MalTrail&lt;/h2&gt;

&lt;p&gt;For systems that have services exposed to the internet, or for a firewall device that protects internal devices, then MalTrail can be really useful for flagging anything out of the ordinary.&lt;/p&gt;

&lt;p&gt;Install dependencies and get the MalTrail source&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install schedtool python-pcapy git&lt;/code&gt; - SchedTool for better CPU scheduling, and Python for MalTrail&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git clone https://github.com/stamparm/maltrail.git&lt;/code&gt; - Get the MalTrail code&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;cd maltrail&lt;/code&gt; - Navigate into the directoru&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run MalTrail. There are two components, a sensor and a server.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo python sensor.py &amp;amp;&lt;/code&gt; - Start the sensor (&lt;code class="prettyprint"&gt;&amp;amp;&lt;/code&gt; will run it in the background)&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;python server.py &amp;amp;&lt;/code&gt; - Start the server, in order to log results and allow access through a GUI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Access the GUI&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Navigate to &lt;code class="prettyprint"&gt;http://[ip]:8338&lt;/code&gt; and enter username: &lt;code class="prettyprint"&gt;admin&lt;/code&gt; and password: &lt;code class="prettyprint"&gt;changeme!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To test things are working correctly, try &lt;code class="prettyprint"&gt;ping -c 1 136.161.101.53&lt;/code&gt; or, for DNS capturing &lt;code class="prettyprint"&gt;nslookup morphed.ru&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;Results for both should display on the dashboard and in the logs: &lt;code class="prettyprint"&gt;/var/log/maltrail/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To view today's logs, run &lt;code class="prettyprint"&gt;cat /var/log/maltrail/$(date +"%Y-%m-%d").log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Configure MalTrail's Settings&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;echo -n '[your-desired-password]' | sha256sum | cut -d " " -f 1&lt;/code&gt; - Choose a strong password and hash it&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo vim /home/tech/maltrail/maltrail.conf&lt;/code&gt; - Open the configuration file&lt;/li&gt;
&lt;li&gt;Under &lt;code class="prettyprint"&gt;USERS&lt;/code&gt; section, replace the current &lt;code class="prettyprint"&gt;Admin:05a181f00c15...&lt;/code&gt; with &lt;code class="prettyprint"&gt;Admin:[your-hashed-password]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;From within the &lt;code class="prettyprint"&gt;maltrail.conf&lt;/code&gt; you can configure other settings for the server component&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;pkill -f server.py &amp;amp;&amp;amp; python server.py &amp;amp;&lt;/code&gt; - Restart MalTrail&lt;/li&gt;
&lt;li&gt;Under normal circumstances the logs are fairly sparse, so it is possible to use a system like &lt;a href="https://github.com/eradman/entr" rel="noopener nofollow" target="_blank"&gt;entr&lt;/a&gt; to monitor them for changes and notify you using a channel of your choice.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="security-audit"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Security Scanning with ClamAV, Lynis and RKhunter&lt;/h2&gt;

&lt;p&gt;For security monitoring, I am using Lynis to audit general system config, ClamAV for detecting malware and rkhunter for checking for root kits. &lt;/p&gt;

&lt;p&gt;Install Packages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install -y clamav rkhunter lynis&lt;/code&gt; - Install security audit tools&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo rkhunter --propupd&lt;/code&gt; - Update rkhunter's file properties database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Run a System Audit&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo lynis audit system&lt;/code&gt; - Run a full security audit&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo clamscan / -r&lt;/code&gt; - Scan for malware&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo rkhunter -c --sk --rwo&lt;/code&gt; - Check for rootkits (c for check, sk for skip keypress and rwo for report wanrings only)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These commands can also be put into an &lt;code class="prettyprint"&gt;.sh&lt;/code&gt; file, and run periodically as a scheduled cron job, sending results to your email.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="setup-dotfiles"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Setup Dotfiles&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If not already done, set ZSH as default shell: &lt;code class="prettyprint"&gt;chsh -s /usr/bin/zsh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;git clone https://github.com/Lissy93/dotfiles.git --recursive&lt;/code&gt; - Download my dotfiles&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;cd ./dotfiles&lt;/code&gt; - Navigate to directory&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;./install.sh&lt;/code&gt; - Run the install script&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="borg-backup"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Automated Backups&lt;/h2&gt;

&lt;p&gt;&lt;a href="https://www.borgbackup.org/" rel="noopener nofollow" target="_blank"&gt;Borg&lt;/a&gt; is a deduplicating archiver with compression and encryption, it's space efficient, secure and easy. &lt;a href="https://www.borgbase.com/" rel="noopener nofollow" target="_blank"&gt;BorgBase&lt;/a&gt; provides affordable, performant, simple and safe Borg repositories (10 GB free or 100 GB for $24/year). I am also using &lt;a href="https://healthchecks.io/" rel="noopener nofollow" target="_blank"&gt;HealthChecks.io&lt;/a&gt; for monitoring backup status.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Install dependencies: &lt;code class="prettyprint"&gt;sudo apt install borgbackup borgmatic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Generate SSH key pair:

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ssh-keygen -t ed25519 -a 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make note of the public key, within &lt;code class="prettyprint"&gt;~/.ssh/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Sign up + create a new repo on &lt;a href="https://www.borgbase.com/" rel="noopener nofollow" target="_blank"&gt;BorgBase&lt;/a&gt; (or your provider of choice)

&lt;ul&gt;
&lt;li&gt;Import the public key generated previously&lt;/li&gt;
&lt;li&gt;Make note of the repo address&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Create a Borgmatic config file in &lt;code class="prettyprint"&gt;/etc/borgmatic/config.yaml&lt;/code&gt;. You can create a sample file, with &lt;code class="prettyprint"&gt;generate-borgmatic-config&lt;/code&gt;, then populate it with your preferences (files to backup, source of BorgBase repo, etc)&lt;/li&gt;
&lt;li&gt;Make backup

&lt;ul&gt;
&lt;li&gt;Initilize your repo with: &lt;code class="prettyprint"&gt;sudo borgmatic init --encryption repokey-blake2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Make your first backup with: &lt;code class="prettyprint"&gt;borgmatic&lt;/code&gt; (add &lt;code class="prettyprint"&gt;--verbosity 1&lt;/code&gt; to see logs)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Automate with a cron job

&lt;ul&gt;
&lt;li&gt;First allow borgmatic to be run without needing password, run &lt;code class="prettyprint"&gt;sudo visudo&lt;/code&gt;, and paste &lt;code class="prettyprint"&gt;my-username ALL=(root) NOPASSWD: /usr/bin/borgmatic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Then run &lt;code class="prettyprint"&gt;crontab -e&lt;/code&gt;, and paste &lt;code class="prettyprint"&gt;0 0 * * * sudo borgmatic&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="final-steps"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Final Steps&lt;/h2&gt;

&lt;p&gt;Setup Welcome Banner&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo cp ~/dotfiles/utils/welcome-banner.sh /etc/profile.d/motd.sh&lt;/code&gt; - Copy welcome banner from utils to system&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo chmod +x /etc/profile.d/motd.sh&lt;/code&gt; - Update permissions for all users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install NetData, for web-based resource monitoring&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bash &amp;lt;(curl -Ss https://my-netdata.io/kickstart.sh) --stable-channel --disable-telemetry&lt;/code&gt; - Install NetData&lt;/li&gt;
&lt;li&gt;You will need to allow firewall access, &lt;code class="prettyprint"&gt;sudo ufw allow from [your-static-ip]  to any port 19999&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If using a cloud platform (like AWS, Azure, GCP) then you may need specify an inbound port rule to allow access&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Setup Glances&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install: &lt;code class="prettyprint"&gt;sudo apt install glances&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To enable Glances to start up at boot time, run it as a service with &lt;code class="prettyprint"&gt;systemd&lt;/code&gt;. See &lt;a href="https://github.com/nicolargo/glances/wiki/Start-Glances-through-Systemd" rel="noopener nofollow" target="_blank"&gt;docs&lt;/a&gt; for more info&lt;/li&gt;
&lt;li&gt;If you need to access Glances remotely, either VPN into your server (recommended), or setup a reverse proxy to the Glances web page, as per &lt;a href="https://github.com/nicolargo/glances/wiki/Reverse-proxy-to-the-Glances-Web-UI" rel="noopener nofollow" target="_blank"&gt;docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install Bpytop&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo pip3 install bpytop --upgrade&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In some situations, Cockpit might be useful. It's an efficient, extendable, all-in-one web-based server management app. It's useful for carrying out basic tasks, without having to SSH into a rarely used box and re-familiarize yourself all over again.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;echo 'deb http://deb.debian.org/debian buster-backports main' &amp;gt; /etc/apt/sources.list.d/backports.list&lt;/code&gt; - Enable the backports repository&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt update&lt;/code&gt; and &lt;code class="prettyprint"&gt;sudo apt install -t buster-backports cockpit&lt;/code&gt; - Update and install&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you're using Ubuntu, Cockpit is already included as an official backport, to install just run &lt;code class="prettyprint"&gt;sudo apt install cockpit&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If needed, use &lt;a href="https://www.smartmontools.org/" rel="noopener nofollow" target="_blank"&gt;Smartmontool&lt;/a&gt; to monitor the status of you're disks. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo apt install smartmontools&lt;/code&gt; - Install smartmontool, which includes &lt;code class="prettyprint"&gt;smartctl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo fdisk -l&lt;/code&gt; - Find the disk(s) you wish to ceck&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo smartctl -t short /dev/sdX&lt;/code&gt; - Run a quick check, where X is you're drive number&lt;/li&gt;
&lt;li&gt;For more info regarding the output, see &lt;a href="https://linuxhandbook.com/check-ssd-health/#understanding-the-output-of-smartctl-command" rel="noopener nofollow" target="_blank"&gt;this post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Optionally, setup Bash Hub for indexed and searchable terminal history in the cloud&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;curl -OL https://bashhub.com/setup &amp;amp;&amp;amp; zsh setup&lt;/code&gt; - Check the installation script first, then install&lt;/li&gt;
&lt;li&gt;When prompted, log into your account. Restart your session, and run &lt;code class="prettyprint"&gt;bh&lt;/code&gt; to access the help menu&lt;/li&gt;
&lt;li&gt;Add an environmental variable, indicating which commands should not be saved, e.g. &lt;code class="prettyprint"&gt;export BH_FILTER="(scp|ssh|--password)"&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Precede any command that contains sensitive information with &lt;code class="prettyprint"&gt;#ignore&lt;/code&gt; to prevent it being saved&lt;/li&gt;
&lt;li&gt;See usage docs: &lt;a href="https://bashhub.com/usage" rel="noopener nofollow" target="_blank"&gt;https://bashhub.com/usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Optionally, setup &lt;a href="https://github.com/alseambusher/crontab-ui" rel="noopener nofollow" target="_blank"&gt;Crontab UI&lt;/a&gt;, for web-based management of cron jobs&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;npm install -g crontab-ui&lt;/code&gt; - Install&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;HOST=0.0.0.0 PORT=9000 CRON_DB_PATH=/home/user/path/to/folder crontab-ui&lt;/code&gt; - Start crontab UI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Additional Tasks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;If needed, &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-debian-10" rel="noopener nofollow" target="_blank"&gt;Setup VNC with Tight VNC Server and XFCE4 DE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href="https://devcenter.heroku.com/articles/heroku-cli#other-installation-methods" rel="noopener nofollow" target="_blank"&gt;Install Heroku&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spelling Auto-Correct System ‚úèÔ∏è‚ùå</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      <link>https://notes.aliciasykes.com/22944/spelling-auto-correct-system</link>
      <guid>https://notes.aliciasykes.com/22944/spelling-auto-correct-system</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;TDLR; Auto-correct is a lot more efficient than manually correcting misspelled words. Espanso is awesome. &lt;br&gt;
Beyond that, this isn't too interesting - I just documented this so I can refer back to it in the future.&lt;br&gt;
If you're just looking for a generic word list, see &lt;a href="https://listed.to/p/nWcfB31ZTD" rel="noopener nofollow" target="_blank"&gt;this post&lt;/a&gt;, which contains 4,200 common misspellings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#word-list"&gt;Word List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#convertor"&gt;Converter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="intro"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Intro&lt;/h2&gt;

&lt;p&gt;I am terrible at spelling. About 15% of what I've typed will be underlined in red. It's usually the same couple hundred words that I forget how to write. The best solution would probably be to learn how to spell, but I've instead I use a system to auto-correct my mistakes.&lt;/p&gt;

&lt;p&gt;I use &lt;a href="https://espanso.org/" rel="noopener nofollow" target="_blank"&gt;Espanso&lt;/a&gt; to implement this.&lt;/p&gt;

&lt;p&gt;There are of course standalone applications that do exactly this (like &lt;a href="https://github.com/client9/misspell" rel="noopener nofollow" target="_blank"&gt;client9/misspell&lt;/a&gt;, &lt;a href="https://github.com/streetsidesoftware/cspell" rel="noopener nofollow" target="_blank"&gt;streetsidesoftware/cspell&lt;/a&gt; and &lt;a href="https://github.com/sedm0784/vim-you-autocorrect" rel="noopener nofollow" target="_blank"&gt;sedm0784/vim-you-autocorrect&lt;/a&gt;), but I have other Espanso scripts for various tasks, so it made sense to bundle it all into one  simple, cross-platform solution. I've previously used &lt;a href="https://www.autohotkey.com/" rel="noopener nofollow" target="_blank"&gt;Auto-Hot-Key&lt;/a&gt; which is also very good, but only available for Windows systems. Esprano's &lt;a href="https://espanso.org/docs/matches/" rel="noopener nofollow" target="_blank"&gt;matching system&lt;/a&gt; makes it an extremely powerful tool, this is a very trivial task compared to all the other awesome stuff you can use it for.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="word-list"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;My Auto-Correction List&lt;/h2&gt;

&lt;p&gt;These are just the 220-ish words that I most often miss type/ spell, along with their &lt;a href="https://listed.to/p/0zNFIsk6mk" rel="noopener nofollow" target="_blank"&gt;correct spellings&lt;/a&gt;. It is written as an AHK script (because it's easier to maintain), but I made a &lt;a href="https://ahk-to-espanso.as93.net" rel="noopener nofollow" target="_blank"&gt;quick utility&lt;/a&gt; to convert AHK into YAML for use with Espanso.&lt;/p&gt;

&lt;p&gt;For a more comprehensive list of 4,200 crowd source common misspellings, see here: &lt;a href="https://listed.to/p/nWcfB31ZTD" rel="noopener nofollow" target="_blank"&gt;https://listed.to/p/nWcfB31ZTD&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;; This is my personal list of words I commonly misspelled plus auto-corrections
; Licensed under MIT - (C) Alicia Sykes, 2021 &amp;lt;https://aliciasykes.com/&amp;gt;
; Format: '::[Incorrect Word]::[Correct Word]'

::acount::account
::acsent::accent
::activley::actively
::adress::address
::advesary::adversary
::alchol::alcohol
::alein::alien
::alighn::align
::alternativley::alternatively
::alterntive::alternative
::anivesary::anniversary
::anonimity::anonymity
::anual::annual
::appologies::apologies
::appropriatley::appropriately
::arbitary::arbitrary
::arbitory::arbitrary
::arcitecture::architecture
::artifecial::artificial
::atatchment::attachment
::athalete::athlete
::attatched::attached
::availible::available
::availiblity::availability
::bandwith::bandwidth
::beginer::beginner
::behaviour::behavior
::boredem::boredom
::borogh::borough
::braile::braille
::caffine::caffeine
::cancelation::cancellation
::capsual::capsule
::celestrial::celestial
::cerial::cereal
::chanel::channel
::chrisis::crisis
::chrismas::Christmas
::christmas::Christmas
::collabrotive::collaborative
::collapsable::collapsible
::coloumn::column
::coloumns::columns
::comercial::commercial
::concious::conscious
::concisley::concisely
::consistant::consistent
::consistenctcy::consistency
::contributers::contributors
::controll::control
::controversal::controversial
::convertor::converter
::convinience::convenience
::convinient::convenient
::conviniently::conveniently
::coppied::copied
::createing::creating
::critisise::criticize
::cypher::cipher
::deafault::default
::deamon::daemon
::decentralised::decentralized
::decission::decision
::dedacated::dedicated
::deffinitive::definitive
::definatley::definitely
::definetive::definitive
::deinal::denial
::deleteing::deleting
::delivaring::delivering
::diferent::different
::digestable::digestible
::direcitve::directive
::direcroty::directory
::disapear::disappear
::disapearing::disappearing
::disastear::disaster
::disopointed::disappointed
::donut::doughnut
::duplecate::duplicate
::dupplicate::duplicate
::earnt::earned
::easyiest::easiest
::eddition::edition
::effectivley::effectively
::elderley::elderly
::embeding::embedding
::embrase::embrace
::emited::emitted
::emiting::emitting
::entirley::entirely
::entropey::entropy
::entrpreners::entrepreneurs
::entrpreneures::entrepreneurs
::entrpreneurs::entrepreneurs
::enviroment::environment
::errased::erased
::erruption::eruption
::esculation::escalation
::everythings::everything's
::Etherium::Ethereum
::exactley::exactly
::existance::existence
::experence::experience
::expirey::expiry
::expirienced::experienced
::exstersential::existential
::extendible::extendable
::extremley::extremely
::extrmley::extremely
::failrly::fairly
::favourite::favorite
::filiment::filament
::flavour::flavour
::gaurantee::guarantee
::geomatry::geometry
::grammer::grammar
::greatful::grateful
::guurantee::guarantee
::habbit::habit
::happines::happiness
::hault::halt
::hense::hence
::hiearachy::hierarchy
::honney::honey
::hummility::humility
::hygine::hygiene
::immediatley::immediately
::immidiate::immediate
::imune::immune
::indapendent::independent
::indefinatley::indefinitely
::indeinetley::indefinitely
::independant::independent
::infomation::information
::inherintly::inherently
::inteligence::intelligence
::interpritations::interpretations
::intiger::integer
::joyfull::joyful
::kernal::kernel
::lavendar::lavender
::lengh::length
::lenght::length
::lentgh::length
::lettice::lettuce
::leveles::levels
::likley::likely
::lonley::lonely
::lunimance::luminescence
::luxary::luxury
::maintanance::maintenance
::managment::management
::maximising::maximizing
::merley::merely
::messanger::messenger
::metior::meteor
::microfibre::microfiber
::minamal::minimal
::misarey::misery
::missuse::misuse
::moulding::molding
::mundaine::mundane
::mystries::mysteries
::mystry::mystery
::neatley::neatly
::neaural::neural
::neautral::neutral
::neccisity::necessity
::necissarily::necessarily
::necissary::necessary
::neighbours::neighbors
::nicley::nicely
::noicse::noise
::noticable::noticeable
::ocassion::occasion
::occour::occur
::occoured::occurred
::occours::occurs
::ofline::offline
::ommited::omited
::ommiting::omitting
::oppertunities::opportunities
::ourself::our self
::overidden::overridden
::overidding::overriding
::overide::override
::overiding::overriding
::overridding::overriding
::overriden::overridden
::pallette::palette
::pannel::panel
::panpha::panther
::pantfer::panther
::pantpha::panther
::paramaters::parameters
::particuarly::particularly
::particulary::particularly
::peice::piece
::percieive::perceive
::permant::permanent
::permenent::permanent
::permenently::permanently
::permently::permanently
::persiverence::perseverance
::poisen::poison
::poridge::porridge
::practicle::practical
::prefering::preferring
::prerequsites::prerequisites
::presance::presence
::privilage::privilege
::privilages::privileges
::profesional::professional
::profesor::professor
::programatically::programmatically
::proove::prove
::propietry::propriety
::propiety::propriety
::protacol::protocol
::protien::protein
::purley::purely
::quater::quarter
::razer::razor
::reccomend::recommend
::reccomended::recommended
::receits::receipts
::receiveing::receiving
::receve::receive
::recipie::recipe
::recognise::recognize
::recomended::recommended
::relevent::relevant
::remotley::remotely
::reoccoouring::reoccurring
::repeatidly::repeatedly
::repositry::repository
::restraunt::restaurant
::revele::reveal
::revoction::revocation
::reythem::rhythm
::rubish::rubbish
::safley::safely
::saftey::safety
::sandwitch::sandwich
::satallite::satellite
::satelite::satellite
::sattelite::satellite
::scafold::scaffold
::scafolding::scaffolding
::scafolds::scaffolds
::scenerio::scenario
::secondry::secondary
::securley::securely
::semmi::semi
::semmy::semi
::senario::scenario
::sensetive::sensitive
::sentance::sentence
::sepena::subpoena
::seperate::separate
::sercinctly::succinctly
::sersincltly::succinctly
::shaddow::shadow
::shiney::shiny
::siezed::seized
::sighn::sign
::signirure::signature
::signiture::signature
::signitures::signatures
::similary::similarly
::simultaniously::simultaneously
::siutably::suitably
::spair::spare
::sparce::sparse
::specalist::specialist
::squirel::squirrel
::streatch::stretch
::strengh::strength
::stright::straight
::subpena::subpoena
::subsintley::succinctly
::succesfully::successfully
::sucinctley::succinctly
::sucinctly::succinctly
::sufice::suffice
::supena::subpoena
::suppliment::supplement
::survelance::surveillance
::susincltley::succinctly
::susincltly::succinctly
::symol::symbol
::synonim::synonym
::synonims::synonyms
::targetted::targeted
::tatoo::tattoo
::tedius::tedious
::teh::the
::teir::tier
::thouh::though
::tourch::torch
::tracable::traceable
::trafic::traffic
::triaged::
::trophey::trophy
::unauthorised::unauthorized
::uneque::unique
::unfortunently::unfortunately
::unlikly::unlikely
::unnecissary::unnecessary
::ussage::usage
::utilisation::utilization
::vacencies::vacancies
::vacency::vacancy
::vegtable::vegetable
::vegtables::vegetables
::versitile::versatile
::visualisations::visualizations
::voulenteering::volunteering
::vulnerabilites::vulnerabilities
::weekley::weekly
::werabouts::whereabouts
::wheather::whether
::yeild::yield
::youghurt::yogurt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For more words, see: &lt;a href="https://listed.to/p/nWcfB31ZTD" rel="noopener nofollow" target="_blank"&gt;https://listed.to/p/nWcfB31ZTD&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;iframe id="convertor" title="UI" src="https://ahk-to-espanso.as93.net/" style="border:none;width:100%;height:800px;"&gt;&lt;/iframe&gt;

&lt;p&gt;Source code for &lt;a href="https://repl.it/@Lissy93/Word-List-Convertor#index.js" rel="noopener nofollow" target="_blank"&gt;Converter Script&lt;/a&gt; on Repl.it&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;hr id="usage"&gt;&lt;p&gt;&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;For Espanso, first convert your source into YAML, then run &lt;code class="prettyprint"&gt;espanso path&lt;/code&gt; to find your config file location, drop the script into that directory, and restart Espanso, it should now be running.&lt;/p&gt;

&lt;p&gt;For the Auto Hot Key script, once you have AHK installed, then just download the above script (save it with the &lt;code class="prettyprint"&gt;.ahk&lt;/code&gt; extension), double click on it and it will be running.&lt;/p&gt;

&lt;hr&gt;

&lt;style&gt;blockquote p { font-size: 0.9rem;}&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Top 25 Raspberry Pi Projects ü•ß</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      <link>https://notes.aliciasykes.com/23239/top-25-raspberry-pi-projects</link>
      <guid>https://notes.aliciasykes.com/23239/top-25-raspberry-pi-projects</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;img src="https://i.ibb.co/LP1wZtc/Top-Raspberry-Pi-Projects.png" alt="Banner Image - Raspberry Pi Projects" title="Icons from various Raspberry Pi Projects" class="banner"&gt;&lt;/p&gt;

&lt;h3&gt;Intro&lt;/h3&gt;

&lt;p&gt;Ever since the first version was released in 2012, the Raspberry Pi has been a staple piece of kit for professionals, hobbyists, educators and everyone in between. And for good reason, it's small, low power, affordable but extremely versatile. There are of course other single board computers on the market, but the Pi has a strong community behind it and provides a good balance between capabilities, form factor and price.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Raspberry Pi Projects&lt;/h3&gt;

&lt;p&gt;Here is a curated list of projects that I have used, enjoyed and would recommend for anyone looking to put their Pi to use. For links to each projects GitHub repo, see: &lt;a href="https://github.com/stars/Lissy93/lists/raspberry-pi" rel="noopener nofollow" target="_blank"&gt;https://github.com/stars/Lissy93/lists/raspberry-pi&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There's nothing too complicated here, so this should also provide a good starting point for beginners. Everything here is fully open source and backed by strong communities with large user bases. &lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pi-hole.net/" rel="noopener nofollow" target="_blank"&gt;Pi-Hole&lt;/a&gt; - Network-wide DNS-based ad blocker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://retropie.org.uk/" rel="noopener nofollow" target="_blank"&gt;RetroPi&lt;/a&gt; - Retro game emulator&lt;/li&gt;
&lt;li&gt;&lt;a href="https://magicmirror.builders/" rel="noopener nofollow" target="_blank"&gt;Magic Mirror&lt;/a&gt; - Easy modular smart mirror project&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pikvm.org/" rel="noopener nofollow" target="_blank"&gt;Pi-KVM&lt;/a&gt; - Easy and fully-featured KVM-over-IP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://octoprint.org/" rel="noopener nofollow" target="_blank"&gt;OctoPrint&lt;/a&gt; - 3D printer remote controller interface&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pimusicbox.com/" rel="noopener nofollow" target="_blank"&gt;PiMusicBox&lt;/a&gt; - An all-in-one streaming device with Spotify support (see also &lt;a href="https://www.picoreplayer.org/" rel="noopener nofollow" target="_blank"&gt;PiCorePlayer&lt;/a&gt; or &lt;a href="https://sound.balenalabs.io/" rel="noopener nofollow" target="_blank"&gt;Balena Sound&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sonic-pi.net/" rel="noopener nofollow" target="_blank"&gt;SonicPi&lt;/a&gt; - Code-based music creation tool&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.kiwix.org/en/downloads/kiwix-hotspot/" rel="noopener nofollow" target="_blank"&gt;Kiwix Hotspot&lt;/a&gt; - An off-grid WiFi hotspot serving up all the world's knowledge (Wikipedia, StackExchange, TED, the Gutenburg Library and more)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raspap.com/" rel="noopener nofollow" target="_blank"&gt;RaspAP&lt;/a&gt; - Fully-features wireless access point, with GUI user interface. Supports ad-blocking, VPN, data usage, and more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pivpn.io/" rel="noopener nofollow" target="_blank"&gt;PiVPN&lt;/a&gt; - Super simple OpenVPN or WireGuard server&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/RoganDawes/P4wnP1_aloa" rel="noopener nofollow" target="_blank"&gt;P4wnP1_aloa&lt;/a&gt; - All-in-one highly customizable Pi Zero attack platform (see also &lt;a href="http://pwnpi.sourceforge.net/" rel="noopener nofollow" target="_blank"&gt;PwnPi&lt;/a&gt;, a pen test drop box)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ccrisan/motioneyeos/wiki" rel="noopener nofollow" target="_blank"&gt;MotionEye&lt;/a&gt; - Easy multi-camera CCTV surveillance system (see also &lt;a href="https://github.com/SvenVD/rpisurv" rel="noopener nofollow" target="_blank"&gt;Rpisurv&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/rootzoll/raspiblitz" rel="noopener nofollow" target="_blank"&gt;RaspiBlitz&lt;/a&gt; - Run a BTC lightning node (see also &lt;a href="https://getumbrel.com/" rel="noopener nofollow" target="_blank"&gt;Umbrel&lt;/a&gt; or &lt;a href="https://raspnode.com/diyBitcoin.html" rel="noopener nofollow" target="_blank"&gt;RaspNode&lt;/a&gt; and &lt;a href="https://stadicus.github.io/RaspiBolt/" rel="noopener nofollow" target="_blank"&gt;this tutorial&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ownyourbits.com/nextcloudpi/" rel="noopener nofollow" target="_blank"&gt;NextCloudPi&lt;/a&gt; - Self-host a local file server, with tons of useful plugins available&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scottlawsonbc/audio-reactive-led-strip" rel="noopener nofollow" target="_blank"&gt;Audio-Reactive-LED-Strip&lt;/a&gt; - Create lighting effects in time with music&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.brewpi.com/" rel="noopener nofollow" target="_blank"&gt;BrewPi&lt;/a&gt; - Fully automated brewery controller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://raspberryshake.org/" rel="noopener nofollow" target="_blank"&gt;RaspberryShake&lt;/a&gt; - Earthquake monitoring with seismographs and infrasound&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sensor.community/en/" rel="noopener nofollow" target="_blank"&gt;Sensor.Community&lt;/a&gt; - Host a Pi environment sensor, using the &lt;a href="https://shop.pimoroni.com/products/enviro?variant=31155658457171" rel="noopener nofollow" target="_blank"&gt;Enviro Air Quality&lt;/a&gt; pHAT&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/FD-/RPiPlay" rel="noopener nofollow" target="_blank"&gt;RPiPlay&lt;/a&gt; - Turn a Raspberry Pi into an Airplay server to enable screen mirroring on TVs, monitors and projectors&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/F5OEO/rpitx" rel="noopener nofollow" target="_blank"&gt;RpiITX&lt;/a&gt; - RF transmitter 5 KHz to 1500 MHz&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uk.flightaware.com/adsb/piaware/" rel="noopener nofollow" target="_blank"&gt;PiAware&lt;/a&gt; - ADS-B aircraft tracking from FlightAware (see also &lt;a href="http://stratux.me/" rel="noopener nofollow" target="_blank"&gt;Startus ADS-B&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://piratebox.cc/raspberry_pi:diy" rel="noopener nofollow" target="_blank"&gt;Pirate Box&lt;/a&gt; - Anonymous offline mobile file-sharing and communications system &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.mod-bros.com/" rel="noopener nofollow" target="_blank"&gt;MoBro&lt;/a&gt; - An external resource monitor screen for your PC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mycroft.ai/" rel="noopener nofollow" target="_blank"&gt;Mycroft AI&lt;/a&gt; - Privacy-respecting AI voice assistant similar to Alexa. You can also &lt;a href="https://www.instructables.com/Mycroft-Mark-II-Developer-Kit-Assembly/" rel="noopener nofollow" target="_blank"&gt;build a full enclosure&lt;/a&gt; out of the developer kit. (Alternatively, build a Google Home, using &lt;a href="https://aiyprojects.withgoogle.com/voice/" rel="noopener nofollow" target="_blank"&gt;Voice Kit&lt;/a&gt; or an &lt;a href="https://mytechbuild.com/2021/03/07/build-a-raspberry-pi-amazon-echo-in-7-steps/" rel="noopener nofollow" target="_blank"&gt;Alexa&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is almost no limit to what you can do with a Pi, this list is just intended to serve as an example and a provide a starting point.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Operating Systems&lt;/h3&gt;

&lt;p&gt;Raspberry Pi can also be used as a normal computer; either a desktop, mini handheld or headless as a server. You're not just limited to &lt;a href="https://www.raspberrypi.org/software/" rel="noopener nofollow" target="_blank"&gt;Raspberry Pi OS&lt;/a&gt;, it also works very well with &lt;a href="https://www.debian.org/ports/arm/" rel="noopener nofollow" target="_blank"&gt;Debian&lt;/a&gt;, &lt;a href="https://wiki.freebsd.org/action/show/arm/Raspberry%20Pi?action=show&amp;amp;redirect=FreeBSD%2Farm%2FRaspberry+Pi" rel="noopener nofollow" target="_blank"&gt;FreeBSD&lt;/a&gt;, &lt;a href="https://archlinuxarm.org/" rel="noopener nofollow" target="_blank"&gt;Arch&lt;/a&gt;, &lt;a href="https://www.offensive-security.com/kali-linux-arm-images/" rel="noopener nofollow" target="_blank"&gt;Kali&lt;/a&gt;, &lt;a href="https://rpi.fatdog.eu/" rel="noopener nofollow" target="_blank"&gt;Slackware&lt;/a&gt; and &lt;a href="https://ubuntu.com/raspberry-pi" rel="noopener nofollow" target="_blank"&gt;Ubuntu&lt;/a&gt; to name a few.&lt;/p&gt;

&lt;p&gt;For more specific use cases, there's also &lt;a href="https://dietpi.com/" rel="noopener nofollow" target="_blank"&gt;Diet Pi&lt;/a&gt; (super light-weight OS specifically for single-board computers), &lt;a href="https://openelec.tv/" rel="noopener nofollow" target="_blank"&gt;OpenElec&lt;/a&gt; (lightweight system for running a Kodi media center), &lt;a href="https://www.microsoft.com/en-us/software-download/windows10iotcore" rel="noopener nofollow" target="_blank"&gt;Windows IoT Core&lt;/a&gt;, &lt;a href="https://osmc.tv/" rel="noopener nofollow" target="_blank"&gt;OCMC&lt;/a&gt; (media center), &lt;a href="https://emteria.com/" rel="noopener nofollow" target="_blank"&gt;Emteria Android&lt;/a&gt; (for Android) and &lt;a href="https://sourceforge.net/projects/chromnium-os-for-all-sbc/files/Raspberry%20Pi%20Images/" rel="noopener nofollow" target="_blank"&gt;Chromium OS&lt;/a&gt; (similar to open source alternative to Chrome OS), &lt;a href="https://nemslinux.com/download/nagios-for-raspberry-pi-4.php" rel="noopener nofollow" target="_blank"&gt;Nems&lt;/a&gt; (for network monitoring) and &lt;a href="https://raspberrypi.stackexchange.com/questions/534/definitive-list-of-operating-systems" rel="noopener nofollow" target="_blank"&gt;many more&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Self-Hosted Applications&lt;/h3&gt;

&lt;p&gt;Once running an OS of your choice, the Pi is also perfect for self-hosting Linux applications. For example;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.home-assistant.io/getting-started/" rel="noopener nofollow" target="_blank"&gt;Home Assistant&lt;/a&gt; - Smart home dashboard and controller&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openmediavault.org/" rel="noopener nofollow" target="_blank"&gt;OpenMediaVault&lt;/a&gt; - Network attached storage with plugins&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nextcloud.com/" rel="noopener nofollow" target="_blank"&gt;NextCloud&lt;/a&gt; - Full productivity platform&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.plex.tv/" rel="noopener nofollow" target="_blank"&gt;Plex&lt;/a&gt; - Media server&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sonarr.tv/" rel="noopener nofollow" target="_blank"&gt;Sonar&lt;/a&gt; - Smart Media Downloading for BitTorrent&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.netdata.cloud" rel="noopener nofollow" target="_blank"&gt;NetData&lt;/a&gt; - Real-time system resource monitoring&lt;/li&gt;
&lt;li&gt;&lt;a href="https://howchoo.com/pi/how-to-set-up-steam-link-on-raspberry-pi" rel="noopener nofollow" target="_blank"&gt;StreamLink&lt;/a&gt; - Stream your PC games to your TV (or your Plex content, with &lt;a href="http://www.rasplex.com/" rel="noopener nofollow" target="_blank"&gt;RasPlex&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;... and &lt;a href="https://github.com/awesome-selfhosted/awesome-selfhosted" rel="noopener nofollow" target="_blank"&gt;tons more&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;If you're interested in self-hosting multiple apps, or using your Pi as a little home server, then check out &lt;a href="https://homelabos.com/" rel="noopener nofollow" target="_blank"&gt;Home Lab OS&lt;/a&gt; by &lt;a href="https://gitlab.com/NickBusey" rel="noopener nofollow" target="_blank"&gt;Nick Busey&lt;/a&gt;, it makes correctly configuring a complex lab as easy as running a single command.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Tools for Flashing SD Card/ USB&lt;/h3&gt;

&lt;p&gt;For flashing an OS to you're Pi's SD card or USB: &lt;a href="https://www.raspberrypi.org/software/" rel="noopener nofollow" target="_blank"&gt;Official Pi Imager&lt;/a&gt;, &lt;a href="https://www.balena.io/etcher/" rel="noopener nofollow" target="_blank"&gt;Etcher&lt;/a&gt; or use the &lt;a href="https://www.computerhope.com/unix/dd.htm" rel="noopener nofollow" target="_blank"&gt;dd&lt;/a&gt; (CLI utility on Unix systems). &lt;a href="https://rufus.ie/" rel="noopener nofollow" target="_blank"&gt;Rufus&lt;/a&gt; and &lt;a href="https://sourceforge.net/projects/win32diskimager/" rel="noopener nofollow" target="_blank"&gt;Win32 Disk Imager&lt;/a&gt; are also good utilities, but only available on Windows.&lt;/p&gt;

&lt;p&gt;To backup you're Pi's SD card of USB, you can also use &lt;code class="prettyprint"&gt;dd&lt;/code&gt; (the same as cloning, but in reverse). For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Backup: &lt;code class="prettyprint"&gt;sudo dd bs=4M if=/dev/sdb of=PiOS.img&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Restore: &lt;code class="prettyprint"&gt;sudo dd bs=4M if=PiOS.img of=/dev/sdb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For more information, see &lt;a href="https://www.cyberpunk.rs/clone-micro-sd-card" rel="noopener nofollow" target="_blank"&gt;this tutorial&lt;/a&gt;. Alternatively, on Windows systems, you can use &lt;a href="https://sourceforge.net/projects/win32diskimager/" rel="noopener nofollow" target="_blank"&gt;Win32 Disk Imager&lt;/a&gt; to clone the SD card.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;More Project Ideas &amp;amp; Tutorials&lt;/h3&gt;

&lt;p&gt;The following projects are a bit more hands-on&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Truly WiFi extender - A very performant and inexpensive WiFi repeater solution: via &lt;a href="https://www.instructables.com/Truly-WiFi-Extender/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @mrtejas99&lt;/li&gt;
&lt;li&gt;Print Server - Turn any old printer into an internet-connected WiFi printer: via &lt;a href="https://www.makeuseof.com/tag/make-wireless-printer-raspberry-pi/" rel="noopener nofollow" target="_blank"&gt;makeuseof.com&lt;/a&gt; by Christian Cawley&lt;/li&gt;
&lt;li&gt;YouTube Streaming Bird Box: via &lt;a href="https://www.instructables.com/YouTube-Streaming-Bird-Box/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @buestad&lt;/li&gt;
&lt;li&gt;Smart Glasses with a treansparent OLED display: via &lt;a href="https://www.instructables.com/Smart-Glasses-V2/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @Bradley_Campbell&lt;/li&gt;
&lt;li&gt;3D-Printed Mini Macintosh PC: via &lt;a href="https://www.instructables.com/Making-a-Tiny-Mac-From-a-Raspberry-Pi-Zero/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mini Desktop PC with the Pi 4: via &lt;a href="https://www.instructables.com/DIY-Raspberry-Pi-Desktop-Case-With-Stats-Display/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @thediylife&lt;/li&gt;
&lt;li&gt;Internet Radio Player - Stream content from Pandora's Radio: via &lt;a href="https://www.instructables.com/Pandoras-Box-An-Internet-Radio-player-made-with/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @Ayy&lt;/li&gt;
&lt;li&gt;Raspberry Pi Zero Cherry MX Split Mechanical Keyboard: via &lt;a href="https://www.instructables.com/Cherry-Pi-Split-Mechanical-Keyboard/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by Gosse Adema&lt;/li&gt;
&lt;li&gt;Step-by-step Pi NAS with OpenMediaVault: via &lt;a href="https://www.instructables.com/PiNAS-the-Raspberry-Pi-NAS/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @araymbox&lt;/li&gt;
&lt;li&gt;Distraction-Free Writing Machine: via &lt;a href="https://www.instructables.com/FeatherQuill-34-Hours-of-Distraction-Free-Writing/" rel="noopener nofollow" target="_blank"&gt;Instructables&lt;/a&gt; by @CameronCoward&lt;/li&gt;
&lt;/ul&gt;

&lt;style&gt;
img.banner { width: 100%; max-width: 600px; margin: 0 auto; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Top 50 Windows Apps üñ•</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Fri, 01 Jan 2021 21:00:00 +0000</pubDate>
      <link>https://notes.aliciasykes.com/21879/my-top-50-windows-apps</link>
      <guid>https://notes.aliciasykes.com/21879/my-top-50-windows-apps</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;img src="https://i.ibb.co/yqQcGGm/windows-open-source-apps-banner.png" alt="Open Source Apps on Microsoft Windows"&gt;&lt;/p&gt;

&lt;p&gt;This is my personal reference list of useful software for Microsoft Windows.&lt;br&gt;
Typically I only install what I need, and uninstall software that hasn't been used for a while. Where possible I prefer to run containerized or portable apps. There's nothing installed on my system that isn't on this list.&lt;/p&gt;

&lt;p&gt;Before setting anything up, the first task is to disable telemetry, remove pre-installed bloatware and make a few security tweaks. For this I use a series of PowerShell scripts provided by &lt;a href="https://privacy.sexy/" rel="noopener nofollow" target="_blank"&gt;Privacy.Sexy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Items marked with '‚ùå' are not fully open source, and 'üí≤' indicates either not free, or has premium tier&lt;/small&gt;&lt;/p&gt;

&lt;h3&gt;Networking&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.torproject.org/" rel="noopener nofollow" target="_blank"&gt;Tor Browser&lt;/a&gt;&lt;/strong&gt; - For more anonymous browsing + access to the Tor network &lt;a href="https://gitlab.torproject.org/tpo"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.virtualbox.org/" rel="noopener nofollow" target="_blank"&gt;VirtualBox&lt;/a&gt;&lt;/strong&gt; - x86, AMD64, and Intel64 virtual machines &lt;a href="https://www.virtualbox.org/wiki/Source_code_organization"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://winscp.net/" rel="noopener nofollow" target="_blank"&gt;WinSCP&lt;/a&gt;&lt;/strong&gt; - SFTP client and remote access file manager &lt;a href="https://github.com/winscp/winscp"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.qbittorrent.org/" rel="noopener nofollow" target="_blank"&gt;qBittorrent&lt;/a&gt;&lt;/strong&gt; - BitTorrent client &lt;a href="https://github.com/qbittorrent/qBittorrent"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.wireshark.org/" rel="noopener nofollow" target="_blank"&gt;WireShark&lt;/a&gt;&lt;/strong&gt; - Packet analyzer &lt;a href="https://github.com/wireshark/wireshark"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://angryip.org/" rel="noopener nofollow" target="_blank"&gt;Angry IP Scanner&lt;/a&gt;&lt;/strong&gt; - Quickly find IPs within a range, open ports and other info &lt;a href="https://github.com/angryip/ipscan"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.netlimiter.com/" rel="noopener nofollow" target="_blank"&gt;NetLimiter&lt;/a&gt;&lt;/strong&gt; - ‚ùåüí≤ Network traffic monitoring tool with simple firewall functionality&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/jopohl/urh" rel="noopener nofollow" target="_blank"&gt;Universal Radio Hacker&lt;/a&gt;&lt;/strong&gt; - SDR client for investigating wireless protocols &lt;a href="https://github.com/jopohl/urh"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;General Apps&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.hwinfo.com/" rel="noopener nofollow" target="_blank"&gt;HWiNFO64&lt;/a&gt;&lt;/strong&gt; - ‚ùå System info and diagnostics&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://processhacker.sourceforge.io/" rel="noopener nofollow" target="_blank"&gt;Process Hacker&lt;/a&gt;&lt;/strong&gt; - Monitor system resources and analyse currently running processes &lt;a href="https://github.com/processhacker/processhacker"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.balena.io/etcher/" rel="noopener nofollow" target="_blank"&gt;Etcher&lt;/a&gt;&lt;/strong&gt; - For flashing ISOs onto USB drives with a overly-fancy UI &lt;a href="https://github.com/balena-io/etcher"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/szTheory/exifcleaner" rel="noopener nofollow" target="_blank"&gt;ExifCleaner&lt;/a&gt;&lt;/strong&gt; -  Tool to easily remove metadata from images and media &lt;a href="https://github.com/szTheory/exifcleaner"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://x410.dev/" rel="noopener nofollow" target="_blank"&gt;X410&lt;/a&gt;&lt;/strong&gt; - ‚ùåüí≤ Fork of &lt;a href="https://x.org/" rel="noopener nofollow" target="_blank"&gt;X.org&lt;/a&gt; to run Linux GUI apps in Xfce via WSL&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://new.linphone.org/technical-corner/linphone" rel="noopener nofollow" target="_blank"&gt;LinPhone&lt;/a&gt;&lt;/strong&gt; - VOIP client for making/ receiving phone calls and SMS messages &lt;a href="https://gitlab.linphone.org/BC/public/linphone-desktop"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Security Utilities&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://cryptomator.org/" rel="noopener nofollow" target="_blank"&gt;Cryptomator&lt;/a&gt;&lt;/strong&gt; - Fast file encryption for cloud storage &lt;a href="https://github.com/cryptomator/cryptomator"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.veracrypt.fr/" rel="noopener nofollow" target="_blank"&gt;VeraCrypt&lt;/a&gt;&lt;/strong&gt; - Strong disk, container and file encryption &lt;a href="https://github.com/veracrypt/VeraCrypt"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://keepassxc.org/" rel="noopener nofollow" target="_blank"&gt;KeePassXC&lt;/a&gt;&lt;/strong&gt; - Password manager for KeePass files &lt;a href="https://github.com/keepassxreboot/keepassxc"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://apps.kde.org/en/kleopatra" rel="noopener nofollow" target="_blank"&gt;Kleopatra&lt;/a&gt;&lt;/strong&gt; - Certificate manager and PGP file encryption suit &lt;a href="https://github.com/KDE/kleopatra"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.wireguard.com/" rel="noopener nofollow" target="_blank"&gt;WireGuard&lt;/a&gt;&lt;/strong&gt; - VPN connection client using WireGuard protocol &lt;a href="https://github.com/WireGuard"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.clamav.net/" rel="noopener nofollow" target="_blank"&gt;CalmAV&lt;/a&gt;&lt;/strong&gt; - Anti-virus scanner (See also, &lt;a href="http://www.clamwin.com/" rel="noopener nofollow" target="_blank"&gt;ClamWin&lt;/a&gt; GUI app) &lt;a href="https://www.clamav.net/downloads#sourcecode"&gt;&lt;img src="https://i.ibb.co/Xjqpn77/Website-icon.png" alt="Website"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.bleachbit.org/" rel="noopener nofollow" target="_blank"&gt;BleachBit&lt;/a&gt;&lt;/strong&gt; - Frees up disk space by deleting unneeded data in the cache and temporary files &lt;a href="https://github.com/bleachbit/bleachbit"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://crazymax.dev/WindowsSpyBlocker/" rel="noopener nofollow" target="_blank"&gt;Windows Spy Blocker&lt;/a&gt;&lt;/strong&gt; - Block Microsoft telemetry and data collection and manage application access &lt;a href="https://github.com/crazy-max/WindowsSpyBlocker"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/securitywithoutborders/hardentools" rel="noopener nofollow" target="_blank"&gt;Harden Tools&lt;/a&gt;&lt;/strong&gt; - Easily turn off undesired or privacy-invasive Windows features &lt;a href="https://github.com/securitywithoutborders/hardentools"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/wokhansoft/WFN" rel="noopener nofollow" target="_blank"&gt;WFN&lt;/a&gt;&lt;/strong&gt; - Firewall notifier to monitor outgoing connections &lt;a href="https://github.com/wokhansoft/WFN"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;UI Utilities&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://hluk.github.io/CopyQ/" rel="noopener nofollow" target="_blank"&gt;CopyQ&lt;/a&gt;&lt;/strong&gt; - Advanced clipboard manager &lt;a href="https://github.com/hluk/CopyQ"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/federico-terzi/espanso" rel="noopener nofollow" target="_blank"&gt;Espanso&lt;/a&gt;&lt;/strong&gt; - Text expander with powerful matching system (similar to AHK) &lt;a href="https://github.com/federico-terzi/espanso"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.autohotkey.com/" rel="noopener nofollow" target="_blank"&gt;AutoHotKey&lt;/a&gt;&lt;/strong&gt; - Keyboard remapping, macros and automation scripting &lt;a href="https://github.com/Lexikos/AutoHotkey_L"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://pooi.moe/QuickLook/" rel="noopener nofollow" target="_blank"&gt;Quick Look&lt;/a&gt;&lt;/strong&gt; - Small utility that lets you quickly preview a file by pressing &lt;code class="prettyprint"&gt;Space&lt;/code&gt; &lt;a href="https://github.com/QL-Win/QuickLook"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://eartrumpet.app/" rel="noopener nofollow" target="_blank"&gt;EarTrumpet&lt;/a&gt;&lt;/strong&gt; - A utility that provides better volume control on a per app basis &lt;a href="https://github.com/File-New-Project/EarTrumpet"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://colorpicker.fr/" rel="noopener nofollow" target="_blank"&gt;ColorPicker&lt;/a&gt;&lt;/strong&gt; - Minimal but complete color picker &lt;a href="https://github.com/Toinane/colorpicker"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/powertoys/" rel="noopener nofollow" target="_blank"&gt;Power Toys&lt;/a&gt;&lt;/strong&gt; - Color picker, fancy zones, run dialog, rename utility, shortcuts and more &lt;a href="https://github.com/microsoft/PowerToys"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ArcadeRenegade/SidebarDiagnostics" rel="noopener nofollow" target="_blank"&gt;SidebarDiagnostics&lt;/a&gt;&lt;/strong&gt; - Customizable desktop widget showing system resource and hardware info &lt;a href="https://github.com/ArcadeRenegade/SidebarDiagnostics"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="http://www.wox.one/" rel="noopener nofollow" target="_blank"&gt;Wox&lt;/a&gt;&lt;/strong&gt; - Global search, run commands and execute actions with &lt;code class="prettyprint"&gt;Alt&lt;/code&gt; + &lt;code class="prettyprint"&gt;Space&lt;/code&gt; &lt;a href="https://github.com/Wox-launcher/Wox"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.stardock.com/products/groupy/" rel="noopener nofollow" target="_blank"&gt;Groupy&lt;/a&gt;&lt;/strong&gt; ‚ùå- Group multiple windows into browser-like tabs, while preserving Alt + Tab switching&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Creativity&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.gimp.org/" rel="noopener nofollow" target="_blank"&gt;Gimp&lt;/a&gt;&lt;/strong&gt; - Image and photo editing application &lt;a href="https://gitlab.gnome.org/GNOME/gimp"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.darktable.org/" rel="noopener nofollow" target="_blank"&gt;DarkTable&lt;/a&gt;&lt;/strong&gt; - Organize and bulk edit photos (similar to Lightroom) &lt;a href="https://github.com/darktable-org/darktable"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://inkscape.org/" rel="noopener nofollow" target="_blank"&gt;InkScape&lt;/a&gt;&lt;/strong&gt; - Digital drawing/ illustration &lt;a href="https://gitlab.com/inkscape/inkscape"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.audacityteam.org/" rel="noopener nofollow" target="_blank"&gt;Audacity&lt;/a&gt;&lt;/strong&gt; - Multi-track audio editor and recording &lt;a href="https://github.com/audacity/audacity"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://obsproject.com/" rel="noopener nofollow" target="_blank"&gt;OBS Studio&lt;/a&gt;&lt;/strong&gt; - High performance streaming/ broadcasting and recording &lt;a href="https://github.com/obsproject/obs-studio"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.videolan.org/vlc/" rel="noopener nofollow" target="_blank"&gt;VLC Player&lt;/a&gt;&lt;/strong&gt; - Multimedia player and play back framework &lt;a href="https://github.com/videolan/vlc"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://shotcut.org/" rel="noopener nofollow" target="_blank"&gt;Shotcut&lt;/a&gt;&lt;/strong&gt; - Video editing platform &lt;a href="https://github.com/mltframework/shotcut"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://handbrake.fr/" rel="noopener nofollow" target="_blank"&gt;HandBrake&lt;/a&gt;&lt;/strong&gt; - For converting video from any format to a selection of modern codecs &lt;a href="https://github.com/HandBrake/HandBrake"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.synfig.org/" rel="noopener nofollow" target="_blank"&gt;Synfig Studio&lt;/a&gt;&lt;/strong&gt; - 2D animation &lt;a href="https://github.com/synfig/synfig"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.blender.org/" rel="noopener nofollow" target="_blank"&gt;Blender&lt;/a&gt;&lt;/strong&gt; - 3D modelling, rendering and sculpting &lt;a href="https://github.com/blender/blender"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://ultimaker.com/software/ultimaker-cura" rel="noopener nofollow" target="_blank"&gt;Cura&lt;/a&gt;&lt;/strong&gt; - 3D Printing software, for slicing models &lt;a href="https://github.com/Ultimaker/Cura"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://wiki.gnome.org/Apps/Dia" rel="noopener nofollow" target="_blank"&gt;Dia&lt;/a&gt;&lt;/strong&gt; - Versatile diagramming tool, useful for UML (similar to MS Visio) &lt;a href="https://gitlab.gnome.org/GNOME/dia"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://getsharex.com/" rel="noopener nofollow" target="_blank"&gt;ShareX&lt;/a&gt;&lt;/strong&gt; - Quick and easy screen recorder &lt;a href="https://github.com/ShareX/ShareX"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.smugmug.com/" rel="noopener nofollow" target="_blank"&gt;SmugMug&lt;/a&gt;&lt;/strong&gt; ‚ùåüí≤- Premium photography backup, sync, sharing and publishing service &lt;a href="https://github.com/smugmug"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Media&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://freetubeapp.io/" rel="noopener nofollow" target="_blank"&gt;FreeTube&lt;/a&gt;&lt;/strong&gt; - YouTube client &lt;a href="https://github.com/FreeTubeApp/FreeTube"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://nuclear.js.org/" rel="noopener nofollow" target="_blank"&gt;Nuclear&lt;/a&gt;&lt;/strong&gt; - Free music streaming &amp;amp; downloads &lt;a href="https://github.com/nukeop/nuclear"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.spotify.com/" rel="noopener nofollow" target="_blank"&gt;Spotify&lt;/a&gt;&lt;/strong&gt; ‚ùå- Premium music subscription&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://amarok.kde.org/" rel="noopener nofollow" target="_blank"&gt;Amarok&lt;/a&gt;&lt;/strong&gt; - Powerful local music player &lt;a href="https://github.com/KDE/amarok"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.pocketcasts.com/" rel="noopener nofollow" target="_blank"&gt;Pocket Casts&lt;/a&gt;&lt;/strong&gt; ‚ùå- Podcast player&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.plex.tv/" rel="noopener nofollow" target="_blank"&gt;Plex Client&lt;/a&gt;&lt;/strong&gt; - Client for accessing self-hosted media server&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://steampowered.com/" rel="noopener nofollow" target="_blank"&gt;Steam&lt;/a&gt;&lt;/strong&gt; ‚ùå- PC game store&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Productivity&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://standardnotes.org/" rel="noopener nofollow" target="_blank"&gt;Standard Notes&lt;/a&gt;&lt;/strong&gt; - Encrypted, synced notes application&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.thunderbird.net/en-US/" rel="noopener nofollow" target="_blank"&gt;Thunderbird&lt;/a&gt;&lt;/strong&gt; - Email, calendar and contacts client&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://protonmail.com/bridge/" rel="noopener nofollow" target="_blank"&gt;ProtonMail Bridge&lt;/a&gt;&lt;/strong&gt; - Allows for ProtonMail to be used with client&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://tresorit.com/" rel="noopener nofollow" target="_blank"&gt;Tresorit&lt;/a&gt;&lt;/strong&gt; ‚ùå- Cloud storage sync and backup&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://1password.com/" rel="noopener nofollow" target="_blank"&gt;1Password&lt;/a&gt;&lt;/strong&gt; ‚ùå- Cloud-synced, multi-device password manager and auto-fill&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.mozilla.org/en-GB/firefox/" rel="noopener nofollow" target="_blank"&gt;Firefox&lt;/a&gt;&lt;/strong&gt; - Web browser with containers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://brave.com/" rel="noopener nofollow" target="_blank"&gt;Brave Browser&lt;/a&gt;&lt;/strong&gt; - Chromium-based web browser&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.binance.com/en/support/articles/115002585651" rel="noopener nofollow" target="_blank"&gt;Binance&lt;/a&gt;&lt;/strong&gt; ‚ùå- Full-screen crypto trading&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.libreoffice.org/" rel="noopener nofollow" target="_blank"&gt;LibreOffice&lt;/a&gt;&lt;/strong&gt; - Basic Office suit&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Development&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://code.visualstudio.com/" rel="noopener nofollow" target="_blank"&gt;VS Code&lt;/a&gt;&lt;/strong&gt; - Customizable code editor, with InteliSense, built-in compilers, git and plugins&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://cmder.net/" rel="noopener nofollow" target="_blank"&gt;Cmder&lt;/a&gt;&lt;/strong&gt; - Better console emulator for Windows, with Tmux-like features, great for SSH sessions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.postman.com/" rel="noopener nofollow" target="_blank"&gt;PostMan&lt;/a&gt;&lt;/strong&gt; - For testing and developing API endpoints&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://developer.android.com/studio/" rel="noopener nofollow" target="_blank"&gt;Android Studio&lt;/a&gt;&lt;/strong&gt; - For native Android development with Java/ Kotlin&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.arduino.cc/en/Main.Software" rel="noopener nofollow" target="_blank"&gt;Arduino IDE&lt;/a&gt;&lt;/strong&gt; - Compile and upload for IoT devices&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://processing.org/" rel="noopener nofollow" target="_blank"&gt;Processing&lt;/a&gt;&lt;/strong&gt; - IDE and compiler for creative coding with the Processing language&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://sqlitebrowser.org/" rel="noopener nofollow" target="_blank"&gt;DB Browser for SQLite&lt;/a&gt;&lt;/strong&gt; - Create, design, and edit database files for SQLite&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lukehaas/RunJS" rel="noopener nofollow" target="_blank"&gt;RunJS&lt;/a&gt;&lt;/strong&gt; - Real-time JavaScript playground, useful for writing quick scripts&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.docker.com/products/docker-desktop" rel="noopener nofollow" target="_blank"&gt;Docker Desktop&lt;/a&gt;&lt;/strong&gt; - Easy way to containerize applications&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://notepad-plus-plus.org/" rel="noopener nofollow" target="_blank"&gt;Notepad++&lt;/a&gt;&lt;/strong&gt; - Lightweight text editor with syntax highlighting&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.zaproxy.org/" rel="noopener nofollow" target="_blank"&gt;Zap&lt;/a&gt;&lt;/strong&gt; - Web app security analyzer&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://subgraph.com/vega/index.en.html" rel="noopener nofollow" target="_blank"&gt;Vega&lt;/a&gt;&lt;/strong&gt; - Automated security testing to find XXS, SQL injection and other issues&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://git-scm.com/" rel="noopener nofollow" target="_blank"&gt;Git&lt;/a&gt;&lt;/strong&gt; - Version control system&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Device-Specific&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.yubico.com/products/services-software/download/yubikey-manager/" rel="noopener nofollow" target="_blank"&gt;YubiKey Manager&lt;/a&gt;&lt;/strong&gt; - Configuring YubeKey devices&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://onlykey.io/" rel="noopener nofollow" target="_blank"&gt;OnlyKey&lt;/a&gt;&lt;/strong&gt; - For configuring the OnlyKey with PGP, SSH, Passwords, 2FA, Crypto and secure data&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.elgato.com/en/gaming/stream-deck" rel="noopener nofollow" target="_blank"&gt;StreamDeck&lt;/a&gt;&lt;/strong&gt; - Setting up macros on the StreamDeck&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.razer.com/" rel="noopener nofollow" target="_blank"&gt;Razer Synapse&lt;/a&gt;&lt;/strong&gt; ‚ùå- Customize the RGB for Razer products&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://us.creative.com/p/sound-blaster/sound-blaster-audigy-fx" rel="noopener nofollow" target="_blank"&gt;SoundBlaster Audigy FX&lt;/a&gt;&lt;/strong&gt; ‚ùå- Drivers and audio level customization for sound card&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.amd.com/en/support" rel="noopener nofollow" target="_blank"&gt;AMD Radeon Settings&lt;/a&gt;&lt;/strong&gt; ‚ùå- Drivers for customizing graphics card for different tasks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/emsec/ChameleonMini" rel="noopener nofollow" target="_blank"&gt;Chameleon&lt;/a&gt;&lt;/strong&gt; - For programming the ChameleonMini NFC / RFID contactless smartcard emulator &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://www.ledger.com/ledger-live" rel="noopener nofollow" target="_blank"&gt;Ledger Live&lt;/a&gt;&lt;/strong&gt; ‚ùå - App for managing assets stored on Ledger Hardware Wallet &lt;a href="https://github.com/LedgerHQ/ledger-live-desktop"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;On new installs, &lt;a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/" rel="noopener nofollow" target="_blank"&gt;Microsoft's Package Manager&lt;/a&gt; can be useful for quickly installing required software.&lt;/p&gt;

&lt;p&gt;See also, my &lt;a href="https://winstall.app/packs/xXFsNYmbT" rel="noopener nofollow" target="_blank"&gt;Winstall Collection&lt;/a&gt; of the above apps.&lt;/p&gt;

&lt;details&gt;
    &lt;summary class="expandable"&gt;Example &lt;code&gt;winget&lt;/code&gt; Script&lt;/summary&gt;
&lt;p&gt;
&lt;/p&gt;&lt;pre&gt;&lt;code&gt;
winget install --id=Lexikos.AutoHotkey -e
winget install --id=REALiX.HWiNFO -e
winget install --id=GNURadio.GNURadio -e
winget install --id=Balena.Etcher -e
winget install --id=WiresharkFoundation.Wireshark -e
winget install --id=Mozilla.Firefox -e
winget install --id=angryziber.AngryIPScanner -e
winget install --id=Microsoft.PowerToys -e
winget install --id=Docker.DockerDesktop -e
winget install --id=Oracle.VirtualBox -e
winget install --id=WinSCP.WinSCP -e
winget install --id=qBittorrent.qBittorrent -e
winget install --id=Cryptomator.Cryptomator -e
winget install --id=Keybase.Keybase -e
winget install --id=KeePassXCTeam.KeePassXC -e
winget install --id=StandardNotes.StandardNotes -e
winget install --id=Mozilla.Thunderbird -e
winget install --id=ProtonTechnologies.ProtonMailBridge -e
winget install --id=AgileBits.1Password -e
winget install --id=BraveSoftware.BraveBrowser -e
winget install --id=thehandbraketeam.handbrake -e
winget install --id=LibreOffice.LibreOffice -e
winget install --id=GIMP.GIMP -e
winget install --id=Inkscape.Inkscape -e
winget install --id=darktable.darktable -e
winget install --id=Audacity.Audacity -e
winget install --id=OBSProject.OBSStudio -e
winget install --id=VideoLAN.VLC -e
winget install --id=Meltytech.Shotcut -e
winget install --id=BlenderFoundation.Blender -e
winget install --id=Ultimaker.Cura -e
winget install --id=Spotify.Spotify -e
winget install --id=Valve.Steam -e
winget install --id=Postman.Postman -e
winget install --id=Arduino.Arduino -e
winget install --id=SQLiteBrowser.SQLiteBrowser -e
winget install --id=Notepad++.Notepad++ -e
winget install --id=elgato.streamdeck -e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
&lt;/details&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: It's very important to always carefully check the URL for each download before proceeding. Only install applications from their official source. &lt;/p&gt;

&lt;style&gt;
ul li { font-size: 1.1rem; }
img[alt=GitHub],img[alt=Git],img[alt=Website] { width: 24px; display: inline !important; margin: 0 2px !important; background: #70ffee; padding: 3px; border-radius: 16px; float: right; }
a:hover img[alt=GitHub],a:hover img[alt=Git],a:hover img[alt=Website] { background: #00ccb4 !important; border: 2px ‚Äãsolid #9660e !important; }
summary.expandable { cursor: pointer; border: 2px solid #00ccb4; width: fit-content; padding: 0.25rem 0.5rem; border-radius: 12px; }
summary.expandable:hover { background: #00ccb4; color: #060913; font-weight: bold; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[REFERENCE] Using Variable Fonts in CSS üî§</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 10 Dec 2020 18:16:52 +0000</pubDate>
      <link>https://notes.aliciasykes.com/20679/reference-using-variable-fonts-in-css</link>
      <guid>https://notes.aliciasykes.com/20679/reference-using-variable-fonts-in-css</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;This is just a short reference to using fonts with Variable Axes in CSS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h3&gt;What are Variable Fonts?&lt;/h3&gt;

&lt;p&gt;Variable fonts are font files that encapsulate the entire family, and allow for custom attributes (regarding things like weight, slant, grade, character-width) to be set. This brings several benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Much higher quality rendering of fonts, without browser distortions&lt;/li&gt;
&lt;li&gt;Greater control over customization, as you can specify each value separably&lt;/li&gt;
&lt;li&gt;The need only for a single font file (rather than a version for each style). Great for performance due to reduced file size and fewer requests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Variable fonts were &lt;a href="https://medium.com/variable-fonts/https-medium-com-tiro-introducing-opentype-variable-fonts-12ba6cd2369" rel="noopener nofollow" target="_blank"&gt;announced in 2016&lt;/a&gt;, and now are officially supported by all &lt;a href="https://caniuse.com/?search=font-variation-settings" rel="noopener nofollow" target="_blank"&gt;modern browsers&lt;/a&gt; and most major operating systems, as an extension to the &lt;a href="https://docs.microsoft.com/en-us/typography/opentype/spec/" rel="noopener nofollow" target="_blank"&gt;OpenType Specification&lt;/a&gt;. There are now &lt;a href="https://fonts.google.com/?vfonly=true" rel="noopener nofollow" target="_blank"&gt;many fonts&lt;/a&gt; that support variable axes.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Official Variation Axes&lt;/h3&gt;

&lt;h4&gt;Weight (&lt;code class="prettyprint"&gt;wght&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corresponding CSS attribute: to &lt;code class="prettyprint"&gt;font-weight&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'wght' 625;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range:  100 - 900&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Italic (&lt;code class="prettyprint"&gt;ital&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corresponding CSS attribute: to &lt;code class="prettyprint"&gt;font-style&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'ital' 1;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range: 0 - 1 (Indicating upright or italic)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Slant (&lt;code class="prettyprint"&gt;slnt&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Similar to italics, but allows you to specify an exact value (in a degree continuum) and it does not include glyph substitution&lt;/li&gt;
&lt;li&gt;Corresponding CSS attribute: to &lt;code class="prettyprint"&gt;font-style&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'slnt' 14;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range: -90 ‚Äì 90 degrees&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Optical Size (&lt;code class="prettyprint"&gt;opsz&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;This allows adding or removing detail to improve legibility on small or large screen sizes. Set to &lt;code class="prettyprint"&gt;auto&lt;/code&gt; by default, and usually this is adequate&lt;/li&gt;
&lt;li&gt;Corresponding CSS attribute: to &lt;code class="prettyprint"&gt;font-optical-sizing&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'opsz' 36;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range: value usually matches font-size&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Width(&lt;code class="prettyprint"&gt;wdth&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Corresponding CSS attribute: to &lt;code class="prettyprint"&gt;font-stretch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'wdth' 115;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range: 75% - 125%&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h3&gt;Custom Axes&lt;/h3&gt;

&lt;p&gt;Many fonts also have a number of custom axes that can be modified. Typically these are represented with capitals. The below are several common custom axis, but Nick Sherman's project &lt;a href="https://v-fonts.com/" rel="noopener nofollow" target="_blank"&gt;v-fonts.com&lt;/a&gt; provides an interactive playground, where you can properly check out many more of these axes.&lt;/p&gt;

&lt;h4&gt;Grade (&lt;code class="prettyprint"&gt;GRAD&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Lets you modify the weight, without effecting width. Useful for responding to low-resolution screens&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'GRAD' 88;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range: Decimal, between -1 - 1&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Ascenders and Descenders (&lt;code class="prettyprint"&gt;YTAS&lt;/code&gt; &amp;amp; &lt;code class="prettyprint"&gt;YTDE&lt;/code&gt;)&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Alters of height of the stems and tails of each character&lt;/li&gt;
&lt;li&gt;Example usage: &lt;code class="prettyprint"&gt;font-variation-settings: 'YTAS' 800, 'YTDE' -350;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Typical range: YTAS 650 - 850. YTDE -500 - -138&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h3&gt;Combining Properties&lt;/h3&gt;

&lt;p&gt;To use multiple variable font properties, you must combine them into a single line, using a comma-separated list.&lt;br&gt;
(Note: When overriding a single font-variation property, you must re-define all of the other properties.)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;font-variation-settings&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'wght'&lt;/span&gt; &lt;span class="err"&gt;375&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'GRAD'&lt;/span&gt; &lt;span class="err"&gt;88&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Supporting Older Browsers&lt;/h3&gt;

&lt;p&gt;In order to support older browsers, use the &lt;code class="prettyprint"&gt;@supports&lt;/code&gt; mixin to override text with variable font properties. For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some-non-variable-font-family&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@supports&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;font-variation-settings&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'wdth'&lt;/span&gt; &lt;span class="m"&gt;115&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
 &lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;font-family&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some-variable-font-family&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Quick Tips&lt;/h3&gt;

&lt;h4&gt;Slant &amp;amp; Italics&lt;/h4&gt;

&lt;p&gt;It is possible to use both slant (&lt;code class="prettyprint"&gt;slnt&lt;/code&gt;) and italics (&lt;code class="prettyprint"&gt;ital&lt;/code&gt;) at the same time. This enabled you to separate the angle change from the glyph substitution. &lt;br&gt;
i.e the italics font property replaces some characters with a different glyph, usually for ascetics. Turning italics off, and then using slant to italicize the text, means that no characters are replaced. The reserve is also true, enabling italics and setting the slant to 0 will replace the glyths. This makes a much bigger than expected difference.&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;font-variation-settings&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;'slnt'&lt;/span&gt; &lt;span class="err"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;'ital'&lt;/span&gt; &lt;span class="err"&gt;0&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Additional Resources&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Interactive Guide: via &lt;a href="https://variablefonts.io/about-variable-fonts/" rel="noopener nofollow" target="_blank"&gt;variablefonts.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A resource for finding and trying variable fonts: via &lt;a href="https://v-fonts.com/" rel="noopener nofollow" target="_blank"&gt;V-Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Variable Font Documentation: via &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide" rel="noopener nofollow" target="_blank"&gt;MDN Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Browser Support: via &lt;a href="https://caniuse.com/?search=font-variation-settings" rel="noopener nofollow" target="_blank"&gt;Can I Use?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fonts that Support Variable Axes: via &lt;a href="https://fonts.google.com/?vfonly=true" rel="noopener nofollow" target="_blank"&gt;Google Fonts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Microsoft Edge Demo: via &lt;a href="https://googlefonts.github.io/microsoft-edge-variable-fonts-demo/" rel="noopener nofollow" target="_blank"&gt;Google&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Articles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The Official Announcement: via &lt;a href="https://medium.com/variable-fonts/https-medium-com-tiro-introducing-opentype-variable-fonts-12ba6cd2369" rel="noopener nofollow" target="_blank"&gt;OpenType/ John Hudson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Variable Fonts: via &lt;a href="https://en.wikipedia.org/wiki/Variable_fonts" rel="noopener nofollow" target="_blank"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Variable Fonts Are Here to Stay: via &lt;a href="https://design.google/library/variable-fonts-are-here-to-stay/" rel="noopener nofollow" target="_blank"&gt;Google Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Variable Fonts Are the Next Generation: via &lt;a href="https://www.commarts.com/columns/variable-fonts-are-the-next-generation" rel="noopener nofollow" target="_blank"&gt;Communication Arts/ Thomas Phinney&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/n3xQtxp/variable-font-demo.gif" class="screen-rec"&gt;&lt;/p&gt;

&lt;style&gt;
img.screen-rec { margin: 0.5rem auto; border-radius: 7px; box-shadow: 1px 2px 4px 2px #000000cf; }
&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Try. üíØ</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 15 Nov 2020 20:00:00 +0000</pubDate>
      <link>https://notes.aliciasykes.com/25192/try</link>
      <guid>https://notes.aliciasykes.com/25192/try</guid>
      <description>&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Try&lt;/li&gt;
&lt;li&gt;Try again&lt;/li&gt;
&lt;li&gt;Try harder&lt;/li&gt;
&lt;li&gt;Try differently&lt;/li&gt;
&lt;li&gt;Try again tomorrow&lt;/li&gt;
&lt;li&gt;Try again the next day&lt;/li&gt;
&lt;li&gt;Try to find another way&lt;/li&gt;
&lt;li&gt;Try to fix what's not working&lt;/li&gt;
&lt;li&gt;Try to find someone who has done it&lt;/li&gt;
&lt;li&gt;Just keep trying, until you succeed &lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pi Zero Tor-Routed Access Point üì∂</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 17 Oct 2020 15:28:19 +0000</pubDate>
      <link>https://notes.aliciasykes.com/19109/pi-zero-tor-routed-access-point</link>
      <guid>https://notes.aliciasykes.com/19109/pi-zero-tor-routed-access-point</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;Quick guide on creating an always-on Tor-routed secondary wireless access point on a Pi Zero&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2&gt;Set up the Pi&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Download and Extract &lt;a href="https://www.raspberrypi.org/downloads/raspberry-pi-os/" rel="noopener nofollow" target="_blank"&gt;Raspberry Pi OS Lite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flash the ISO onto a MicroSD Card, with &lt;a href="https://www.etcher.net/" rel="noopener nofollow" target="_blank"&gt;Etcher&lt;/a&gt; or similar software&lt;/li&gt;
&lt;li&gt;Place a file called &lt;code class="prettyprint"&gt;ssh&lt;/code&gt; into the boot dir (to allow for SSH access)&lt;/li&gt;
&lt;li&gt;Insert SD card into Pi, plug in the Ethernet and power it up&lt;/li&gt;
&lt;li&gt;Determine the IP of the new Pi with &lt;a href="https://nmap.org/" rel="noopener nofollow" target="_blank"&gt;nmap&lt;/a&gt;, or in your router settings&lt;/li&gt;
&lt;li&gt;SSH into ssh &lt;code class="prettyprint"&gt;pi@&amp;lt;ip&amp;gt;&lt;/code&gt;, the password is &lt;code class="prettyprint"&gt;raspberry&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change the password with: &lt;code class="prettyprint"&gt;sudo passwd&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;Set up the Access Point&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Update packages, and get dependencies:&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo apt-get update&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo apt-get install iptables-persistent git&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get Pi Hostpot setup script:&lt;br&gt;
&lt;code class="prettyprint"&gt;git clone https://github.com/unixabg/RPI-Wireless-Hotspot.git&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Begin the Install Process&lt;br&gt;
&lt;code class="prettyprint"&gt;cd RPI-Wireless-Hotspot&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo ./install&lt;/code&gt;&lt;br&gt;
&lt;em&gt;The script will walk you through setting up a WiFi network, choosing a name, authentication type and password&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;Configure Tor&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Install Tor&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo apt-get install tor&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Configure&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo nano /etc/tor/torrc&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# Then enter the following at the bottom of the file&lt;/span&gt;
Log notice file /var/log/tor/notices.log
VirtualAddrNetwork 10.192.0.0/10
AutomapHostsSuffixes .onion,.exit
AutomapHostsOnResolve 1
TransPort 9040
TransListenAddress 192.168.42.1
DNSPort 53
DNSListenAddress 192.168.42.1
&lt;span class="c"&gt;# Save and exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update IP Tables&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo iptables -F&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo iptables -t nat -F&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo iptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 22 -j REDIRECT --to-ports 22&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo iptables -t nat -A PREROUTING -i wlan0 -p udp --dport 53 -j REDIRECT --to-ports 53&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo iptables -t nat -A PREROUTING -i wlan0 -p tcp --syn -j REDIRECT --to-ports 9040&lt;/code&gt;&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo sh -c iptables-save &amp;gt; /etc/iptables/rules.v4&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h2&gt;Start Tor Service&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Start the Tor service&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo service tor start&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check if it's running okay&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo service tor status&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start tor on boot&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo update-rc.d tor enable&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Finally, reboot the device&lt;br&gt;
&lt;code class="prettyprint"&gt;sudo reboot&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Done!&lt;/p&gt;

&lt;style&gt;code { color: #57e5ec !important; }&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[HOW-TO] Mullvad VPN using WireGuard on OPNsense üëÅÔ∏è‚Äçüó®Ô∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 04 Oct 2020 11:51:12 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18842/how-to-mullvad-vpn-using-wireguard-on-opnsense</link>
      <guid>https://notes.aliciasykes.com/18842/how-to-mullvad-vpn-using-wireguard-on-opnsense</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;I am new to OPNsense, and got totally stuck on this. There wasn't a lot of information online about this, so after I'd (finally) got it working, I wrote this step-by-step guide&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr&gt;

&lt;h3&gt;1. Install WireGuard&lt;/h3&gt;

&lt;p&gt;Navigate to System --&amp;gt; Firmware --&amp;gt; Plug-ins, and select and install 'os-wireguard'.&lt;br&gt;
Now you can refresh the page, and go to, go to VPN --&amp;gt; Wireguard&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;2. Create a Local Instance&lt;/h3&gt;

&lt;p&gt;Under VPN --&amp;gt; WireGuard --&amp;gt; Local, create a new instance which looks like this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: Mullvad&lt;/li&gt;
&lt;li&gt;Public Key: (Automatically Generated)&lt;/li&gt;
&lt;li&gt;Private Key: (Automatically Generated)&lt;/li&gt;
&lt;li&gt;Listen Port: 51820 (must be unique)&lt;/li&gt;
&lt;li&gt;DNS Server: 193.138.218.74 (this is Mullvad's privacy DNS service. If you are using a different VPN, use their DNS here instead)&lt;/li&gt;
&lt;li&gt;Tunnel Address: Leave blank for now, we'll come back to this&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hit save&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;3. Get Your Account Tunnel IP&lt;/h3&gt;

&lt;p&gt;Once your local config is saved, click edit, and a private and public key should have been automatically generated. Make note of the public key.&lt;/p&gt;

&lt;p&gt;SSH into your box, and run the following command, where account number is your 16-digit Mullvad key (without dashes), and public key is from your newly created local instance.&lt;/p&gt;

&lt;p&gt;&lt;code class="prettyprint"&gt;curl -sSL https://api.mullvad.net/wg/ -d account=[mullvad-account-number] --data-urlencode pubkey=[mullvad-public-key]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will give you an output with 2 IP addresses, like: &lt;code class="prettyprint"&gt;00.xx.xxx.xx/xx,fc00:bbbb:bbbb:bb00::0:0x00/128$&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It's linked to your account, so keep it safe.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;4. Add Tunnel Address to Local Instance&lt;/h3&gt;

&lt;p&gt;Go back to your Local Instance, and under Tunnel Address, add both the IPs returned from the above curl command&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;5. Choose a Mullvad Server&lt;/h3&gt;

&lt;p&gt;Navigate to &lt;a href="https://mullvad.net/en/servers/" rel="noopener nofollow" target="_blank"&gt;https://mullvad.net/en/servers/&lt;/a&gt; and select a WireGuard server that meets your requirements. Make note of it's name/ proxy address, public key and port.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;6. Create an Endpoint&lt;/h3&gt;

&lt;p&gt;Under VPN --&amp;gt; WireGuard --&amp;gt; Endpoints, and create a new instance, with the following data:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Name: MullvadInstance&lt;/li&gt;
&lt;li&gt;Enabled: true&lt;/li&gt;
&lt;li&gt;Public Key: (public key from your chosen Mullvad instance)&lt;/li&gt;
&lt;li&gt;Shared Secret: [blank]&lt;/li&gt;
&lt;li&gt;Allowed IPs: 0.0.0.0/0&lt;/li&gt;
&lt;li&gt;Endpoint Port: (multihop port from your chosen Mullvad instance)&lt;/li&gt;
&lt;li&gt;Keepalive: 20&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Your Endpoint should look something like this:&lt;br&gt;
&lt;img src="https://i.ibb.co/y8cCSdC/2-endpoint-instance.png" alt="Endpoint Instance"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;7. Assign Endpoint to Local Instance&lt;/h3&gt;

&lt;p&gt;Navigate back to VPN --&amp;gt; WireGuard --&amp;gt; Local, and click edit for your instance. Under Peers, select the name of your newly created endpoint&lt;/p&gt;

&lt;p&gt;Your Local Instance should now look like this:&lt;br&gt;
&lt;img src="https://i.ibb.co/4gkK10h/1-local-instance.png" alt="Local Instance"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;8. Add Outbound Rule&lt;/h3&gt;

&lt;p&gt;Under Firewall --&amp;gt; NAT --&amp;gt; Outbound, switch the Rule Generation mode to Hybrid (from automatic).&lt;/p&gt;

&lt;p&gt;Next, create a new manual rule, with the following details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Interface: WireGuard&lt;/li&gt;
&lt;li&gt;Source Address: LAN net&lt;/li&gt;
&lt;li&gt;Translation / Target: Interface address&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And all other fields can be left as default&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/mvL8yqK/3-firewall-nat-outbound-rule.png" alt="Firewall NAT Outbound Rule"&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;9. Enable VPN&lt;/h3&gt;

&lt;p&gt;Finally, go back to VPN --&amp;gt; WireGuard --&amp;gt; General - and hit Enable WireGuard VPN - Done!&lt;/p&gt;

&lt;p&gt;Under VPN --&amp;gt; WireGuard --&amp;gt; List Configuration, you should now see the connection details&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;10. Test&lt;/h3&gt;

&lt;p&gt;To test your connection to Mullvad, navigate to &lt;a href="https://mullvad.net/en/check/" rel="noopener nofollow" target="_blank"&gt;https://mullvad.net/en/check/&lt;/a&gt;&lt;br&gt;
Here you can also confirm that your IP is not blacklisted, and that there are no DNS or WebRTC leaks.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://i.ibb.co/2Syfh52/mullvad-connected.png" alt="Mullvad Check"&gt;&lt;/p&gt;

&lt;p&gt;Mullvad also has a simple API, that you can call to, and confirm your connection. This is useful for automation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight ssh"&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="k"&gt;curl&lt;/span&gt; https://am.i.mullvad.net/connected
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ curl https://am.i.mullvad.net/json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that everything's up and working, it's worth noting that if you haven't yet configured automated backups, don't forget to export your working config, under System --&amp;gt; Configuration --&amp;gt; Backups :)&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Additional Notes&lt;/h2&gt;

&lt;p&gt;Disabling and re-enabling WireGuard from the General tab does &lt;strong&gt;not&lt;/strong&gt; refresh updated data from the Local or Endpoints tab. For that, you need to disable, re-enable and save changes in these pages accordingly. This is useful to know for if your troubleshooting and unsure why your changes are not taking effect!&lt;/p&gt;

&lt;h4&gt;SOCKS5 Proxy&lt;/h4&gt;

&lt;p&gt;Optionally, you can use SOCKS5 on client devices or browsers, for additional protection, and improved performance. It's also possible to use the SOCKS5 proxies to multihop, enabling the client to exit from a server that is different from the one you connected to. Mullvad's WireGuard proxy can be found at &lt;strong&gt;10.64.0.1&lt;/strong&gt; port &lt;strong&gt;1080&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For more detailed info, see the &lt;a href="https://mullvad.net/en/help/socks5-proxy/" rel="noopener nofollow" target="_blank"&gt;SOCKS5 Proxy Guide&lt;/a&gt; on Mullvad's Docs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Port Forwarding&lt;/h4&gt;

&lt;p&gt;If you need to expose a service to the internet from behind Mullvad, then you need to individually assign the ports in your Mullvad account. Log into your Mullvad account, and navigate to &lt;a href="https://mullvad.net/en/account/#/ports" rel="noopener nofollow" target="_blank"&gt;mullvad.net/account/ports&lt;/a&gt;. From here you'll see a list of your public keys, simply press the "Add New" icon under the Ports section of your desired instance, and specify the port your internal service is running on.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For more detailed info, see the &lt;a href="https://mullvad.net/en/help/port-forwarding-and-mullvad/" rel="noopener nofollow" target="_blank"&gt;Port Forwarding Guide&lt;/a&gt; on Mullvad's Docs.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Primary sources I used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OPNsense Docs &lt;a href="https://wiki.opnsense.org/manual/how-tos/wireguard-client-mullvad.html" rel="noopener nofollow" target="_blank"&gt;WireGuard MullvadVPN Road Warrior Setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;OPNsense Forum &lt;a href="https://forum.opnsense.org/index.php?topic=15105.0" rel="noopener nofollow" target="_blank"&gt;Wireguard &amp;amp; Mullvad - I'm lost.....&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jonny's Screenshot Guide, via &lt;a href="https://imgur.com/gallery/JBf2RF6" rel="noopener nofollow" target="_blank"&gt;Imgur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Thomas Krenn's guide to &lt;a href="https://www.thomas-krenn.com/en/wiki/OPNsense_WireGuard_VPN_for_Road_Warrior_configuration" rel="noopener nofollow" target="_blank"&gt;OPNsense WireGuard Configuration&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks to the users over at the &lt;a href="https://forum.opnsense.org/" rel="noopener nofollow" target="_blank"&gt;OPNsense forum&lt;/a&gt;, who were also a big help.&lt;/p&gt;

&lt;style&gt;.post-body img{border-radius:5px;box-shadow:0 3px 10px rgba(0, 0, 0, 0.83), 0 3px 1px rgba(0, 0, 0, 0.57);margin:0.5rem auto}&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Custom Styling for Listed Blog üíÖ</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 01 Oct 2020 14:29:13 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18756/custom-styling-for-listed-blog</link>
      <guid>https://notes.aliciasykes.com/18756/custom-styling-for-listed-blog</guid>
      <description>&lt;p&gt;&lt;p&gt;Here's &lt;a href="https://listed.to/p/cp4JphXIAv" rel="noopener nofollow" target="_blank"&gt;the stylesheet&lt;/a&gt; that I'm using currently.&lt;/p&gt;

&lt;p&gt;This theme is for the new version of Listed. For older versions see &lt;a href="https://listed.to/p/CnFbLUep7C" rel="noopener nofollow" target="_blank"&gt;this post&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Colors&lt;/h2&gt;

&lt;div class="wrapper"&gt;
&lt;div class="color-block"&gt;
&lt;h3&gt;Main&lt;/h3&gt;
&lt;section class="color-pallet"&gt;
&lt;div class="color" style="background: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Background&lt;/span&gt;
    &lt;span class="color-code"&gt;#0b1021&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #060913;"&gt;
    &lt;span class="color-name"&gt;Background Darken&lt;/span&gt;
    &lt;span class="color-code"&gt;#060913&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #141b33;"&gt;
    &lt;span class="color-name"&gt;Background Lighten&lt;/span&gt;
    &lt;span class="color-code"&gt;#141b33&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #00CCB4; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Primary&lt;/span&gt;
    &lt;span class="color-code"&gt;#00CCB4&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #092935;"&gt;
    &lt;span class="color-name"&gt;Primary Dark&lt;/span&gt;
    &lt;span class="color-code"&gt;#092935&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;br&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;

&lt;div class="color-block"&gt;
&lt;h3&gt;Action Colors&lt;/h3&gt;
&lt;section class="color-pallet"&gt;
&lt;div class="color" style="background: #04e4f4; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Info&lt;/span&gt;
    &lt;span class="color-code"&gt;#04e4f4&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #20e253; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Success&lt;/span&gt;
    &lt;span class="color-code"&gt;#20e253&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #f6f000; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Warning&lt;/span&gt;
    &lt;span class="color-code"&gt;#f6f000&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #f80363; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Danger&lt;/span&gt;
    &lt;span class="color-code"&gt;#f80363&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #272f4d;"&gt;
    &lt;span class="color-name"&gt;Neutral&lt;/span&gt;
    &lt;span class="color-code"&gt;#272f4d&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;br&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;

&lt;div class="color-block"&gt;
&lt;h3&gt;Greyscale&lt;/h3&gt;
&lt;section class="color-pallet"&gt;
&lt;div class="color" style="background: #ffffff; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Bright White&lt;/span&gt;
    &lt;span class="color-code"&gt;#ffffff&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #f0f0f0; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Off-White&lt;/span&gt;
    &lt;span class="color-code"&gt;#f0f0f0&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #dcdcdc; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Pale Grey&lt;/span&gt;
    &lt;span class="color-code"&gt;#dcdcdc&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #a9a9a9; color: #0b1021;"&gt;
    &lt;span class="color-name"&gt;Mid-Grey&lt;/span&gt;
    &lt;span class="color-code"&gt;#a9a9a9&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #414141;"&gt;
    &lt;span class="color-name"&gt;Dark Grey&lt;/span&gt;
    &lt;span class="color-code"&gt;#414141&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #202020;"&gt;
    &lt;span class="color-name"&gt;Off-Black&lt;/span&gt;
    &lt;span class="color-code"&gt;#202020&lt;/span&gt;
&lt;/div&gt;

&lt;div class="color" style="background: #000000;"&gt;
    &lt;span class="color-name"&gt;Pitch-Black&lt;/span&gt;
    &lt;span class="color-code"&gt;#000000&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;&lt;/p&gt;&lt;/section&gt;&lt;br&gt;
&lt;/div&gt;&lt;br&gt;
&lt;/div&gt;&lt;p&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Typefaces&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Body&lt;/strong&gt;: &lt;a href="https://fonts.google.com/specimen/Roboto+Mono" rel="noopener nofollow" target="_blank"&gt;Roboto Mono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Headings&lt;/strong&gt;: &lt;a href="https://fonts.google.com/specimen/Roboto+Slab" rel="noopener nofollow" target="_blank"&gt;Roboto Slab&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Example Screenshots&lt;/h2&gt;

&lt;div class="screenshot-wrapper"&gt;
&lt;img alt="Home Page" src="https://i.ibb.co/Jn4MjxZ/standard-notes-home.png" class="callisto-screenshot"&gt;&lt;img alt="Post Page 1" src="https://i.ibb.co/XYtH4Yh/standard-notes-post1.png" class="callisto-screenshot"&gt;&lt;img alt="Post Page 2" src="https://i.ibb.co/n0VpxgT/standard-notes-post2.png" class="callisto-screenshot"&gt;&lt;img alt="Post Page 3" src="https://i.ibb.co/fFyQ6bZ/standard-notes-post3.png" class="callisto-screenshot"&gt;&lt;img alt="Settings Page" src="https://i.ibb.co/mvTFvP9/standard-notes-settings.png" class="callisto-screenshot"&gt;&lt;img alt="Thank Page" src="https://i.ibb.co/4dBjhNv/standard-notes-thank.png" class="callisto-screenshot"&gt;
&lt;/div&gt;

&lt;style&gt;

div.wrapper {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
}

div.color-block {
    margin: 0 0.5rem;
}

section.color-pallet {
      width: fit-content;
    border: 1px solid #ffffff47;
    border-radius: 2px;
}

section.color-pallet div.color {
    padding: 0.1rem 0.5rem;
  min-width: 275px;
    display: flex;
  flex-wrap: wrap;
    justify-content: space-between;
    font-size: 1rem;
}

section.color-pallet div.color span.color-name {
    font-weight: bold;
}

section.color-pallet div.color span.color-code{
     font-family: monospace;
}

@media (min-width: 800px) and (max-width: 1250px) {
    section.color-pallet div.color {
        flex-direction: column;
    text-align: center;
        min-width: 200px;
    }
}
@media (max-width: 800px) {
    div.wrapper {
        flex-direction: column;
    align-items: center;
    }
}



img.callisto-screenshot {
        border: 1px solid #ffffffcc !important;
        box-shadow: 2px 4px 3px 2px #00000070;
        margin: 0.25rem 0.5rem !important;
    display: inline-block !important;
        border-radius: 2px !important;
    height: 330px !important;
    width: 47% !important;
}
div.screenshot-wrapper {
        text-align: center;
    background: #092935;
    border-radius: 4px;
    padding: 1rem 0;
}

@media (max-width: 900px) {
    div.screenshot-wrapper { background: none; }
    img.callisto-screenshot { width: 400px !important; height: auto !important; }
}

&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Epic Internet Stuff! ‚ú®</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 30 Sep 2020 11:37:36 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18724/epic-internet-stuff</link>
      <guid>https://notes.aliciasykes.com/18724/epic-internet-stuff</guid>
      <description>&lt;p&gt;&lt;p&gt;Bored? Here's a collection of stuff I stumbled upon on the internet, and thought was pretty epic üåà&lt;/p&gt;

&lt;p&gt;Full credit to the legends behind each of these sites ü¶∏‚Äç‚ôÇÔ∏è&lt;/p&gt;

&lt;p&gt;Enjoy! ü§©&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stars.chromeexperiments.com/" rel="noopener nofollow" target="_blank"&gt;100,000 Stars&lt;/a&gt; - A WebGL 3D Visualization of out Solar System, Galaxy and Universe&lt;/li&gt;
&lt;li&gt;&lt;a href="https://1001albumsgenerator.com" rel="noopener nofollow" target="_blank"&gt;1001 Albums Generator&lt;/a&gt; - Gives you a new album to listen to everyday&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.acapella-extractor.com/" rel="noopener nofollow" target="_blank"&gt;Acapella Extractor&lt;/a&gt; - Isolates voice from any track/ removes music and background&lt;/li&gt;
&lt;li&gt;&lt;a href="https://asknature.org/" rel="noopener nofollow" target="_blank"&gt;Ask Nature&lt;/a&gt; - Search for a query, to find how nature has adapted to solve problems&lt;/li&gt;
&lt;li&gt;&lt;a href="https://agoodmovietowatch.com/" rel="noopener nofollow" target="_blank"&gt;A Good Movie to Watch&lt;/a&gt; - Find top-rated TV and Movies, for your chosen streaming services and country&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apod.nasa.gov/" rel="noopener nofollow" target="_blank"&gt;APOD&lt;/a&gt; - NASA's astronomy picture of the day - High quality, beautiful space images updated daily&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.abbreviations.com/" rel="noopener nofollow" target="_blank"&gt;Abbreviations.com&lt;/a&gt; - The World's largest collection of abbreviations and acronyms&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sketch.metademolab.com/canvas" rel="noopener nofollow" target="_blank"&gt;Animated Drawings&lt;/a&gt; - Upload a sketch or drawing, and have it be animated with AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ancient.eu/" rel="noopener nofollow" target="_blank"&gt;Ancient History Encyclopedia&lt;/a&gt; - Professionally curated online encyclopedia for research, teaching and travel&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.ritsumei.ac.jp/%7Eakitaoka/index-e.html" rel="noopener nofollow" target="_blank"&gt;Akiyoshi's Illusion's&lt;/a&gt; - Static visual illusions that appear to be moving&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amazondating.co/" rel="noopener nofollow" target="_blank"&gt;Amazon Dating&lt;/a&gt; - Order a date with free next day delivery and buyer protection (satire)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.atlasobscura.com/" rel="noopener nofollow" target="_blank"&gt;AtlasObscura&lt;/a&gt; - Hidden things to see and do around the world&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.autodraw.com/" rel="noopener nofollow" target="_blank"&gt;AutoDraw&lt;/a&gt; - Drawing, but AI guesses what you drew and can auto-complete it&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bbcsfx.acropolis.org.uk/" rel="noopener nofollow" target="_blank"&gt;BBC Sound Effects&lt;/a&gt; - A database of all 16,000+ sound effects as .wav, created &amp;amp; used by the UK's BBC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mixedname.com/" rel="noopener nofollow" target="_blank"&gt;Bilingual baby name finder&lt;/a&gt; - Useful to find names that can be pronounced&lt;/li&gt;
&lt;li&gt;&lt;a href="https://outrider.org/nuclear-weapons/interactive/bomb-blast/?airburst=false&amp;amp;bomb=2&amp;amp;lat=51.50722&amp;amp;location=London%2C%20Greater%20London%2C%20England%2C%20United%20Kingdom&amp;amp;long=-0.1275" rel="noopener nofollow" target="_blank"&gt;Bomb Blast&lt;/a&gt; - Search a location, and nuclear weapon, to see the damage area&lt;/li&gt;
&lt;li&gt;&lt;a href="https://betterexplained.com/" rel="noopener nofollow" target="_blank"&gt;Better Explained&lt;/a&gt; - Clear, easy to understand and engaging math tutorials (by Kalid Azad)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bops.fm/" rel="noopener nofollow" target="_blank"&gt;Bops.fm&lt;/a&gt; - Click a year, and here a song from that time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bongo.cat/" rel="noopener nofollow" target="_blank"&gt;Bongo Cat&lt;/a&gt; - Hit the bongos like Bongo Cat!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.boredpanda.com/" rel="noopener nofollow" target="_blank"&gt;Bored Panda&lt;/a&gt; - Slightly click-batey articles from around the web, great for destroying boredom&lt;/li&gt;
&lt;li&gt;&lt;a href="http://britneyspears.ac/lasers.htm" rel="noopener nofollow" target="_blank"&gt;Britney Spears' Guide to Semiconductor Physics&lt;/a&gt; - A humorous play on the teaching of physics (by Carl Hepburn)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.calligrapher.ai/" rel="noopener nofollow" target="_blank"&gt;Calligrapher.ai&lt;/a&gt; - Convert text to real-looking hand writing, with AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cameronsworld.net/" rel="noopener nofollow" target="_blank"&gt;Camerons World&lt;/a&gt; - View real Geo Cities sites, from the archive&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.capitoltrades.com/" rel="noopener nofollow" target="_blank"&gt;CapitolTrades&lt;/a&gt; - View which stocks US politicians are buying&lt;/li&gt;
&lt;li&gt;&lt;a href="https://channelcrawler.com/" rel="noopener nofollow" target="_blank"&gt;Channel Crawler&lt;/a&gt; - Discover new YouTube channels by keywords and filters (by Geoffrey Reemer)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cinetrii.com/" rel="noopener nofollow" target="_blank"&gt;Cinetrii&lt;/a&gt; - Analyses reviews to infer possible inspirations behind a film&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cityextremes.com/" rel="noopener nofollow" target="_blank"&gt;City Extremes&lt;/a&gt; - Lookup any city, and find the closest and furthest geographic cities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://citizen-dj.labs.loc.gov/" rel="noopener nofollow" target="_blank"&gt;Citizen DJ&lt;/a&gt; - Make music using the free-to-use audio and video materials from the Library of Congress&lt;/li&gt;
&lt;li&gt;&lt;a href="https://clash.me/" rel="noopener nofollow" target="_blank"&gt;Clash&lt;/a&gt; - Type in any sentence and have it sung back to you using a variety of artists&lt;/li&gt;
&lt;li&gt;&lt;a href="https://classicreload.com/Windows-1-01.html" rel="noopener nofollow" target="_blank"&gt;Classic Reload&lt;/a&gt; - A series of retro emulators in the browser&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.classcentral.com/" rel="noopener nofollow" target="_blank"&gt;Class Central&lt;/a&gt; - Huge collection of free courses and certifications from top Universities and companies&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.connectedpapers.com/" rel="noopener nofollow" target="_blank"&gt;Connected Papers&lt;/a&gt; - Visually shows connections between academic journals&lt;/li&gt;
&lt;li&gt;&lt;a href="https://conversao.net/eng/" rel="noopener nofollow" target="_blank"&gt;Conversao&lt;/a&gt; - Instantly convert a unit to all others&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.quiverquant.com/sources/corporateflights" rel="noopener nofollow" target="_blank"&gt;Corporate Private Jet Tracker&lt;/a&gt; - See live locations of the rich and famous's private jets in the US&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cryptovoxels.com/" rel="noopener nofollow" target="_blank"&gt;Cryptovoxels&lt;/a&gt; - A virtual world&lt;/li&gt;
&lt;li&gt;&lt;a href="http://cursordanceparty.com/" rel="noopener nofollow" target="_blank"&gt;Cursor Dance Party&lt;/a&gt; - Real-time cursor dance party&lt;/li&gt;
&lt;li&gt;&lt;a href="https://datenightmovies.com/" rel="noopener nofollow" target="_blank"&gt;DateNightMovies&lt;/a&gt; - Input a movie each of you like, to find a movie you'll likely both like&lt;/li&gt;
&lt;li&gt;&lt;a href="https://denigma.app/" rel="noopener nofollow" target="_blank"&gt;Denigma&lt;/a&gt; - Paste in a block of code, and Denigma will use AI to explain what it does in plain English&lt;/li&gt;
&lt;li&gt;&lt;a href="https://deskspacing.com" rel="noopener nofollow" target="_blank"&gt;Desk Spacing&lt;/a&gt; - Create your own virtual desk setup (or r/BattleStation!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.desolhar-philo.com/" rel="noopener nofollow" target="_blank"&gt;Desolhar Philosophy&lt;/a&gt; - Simplifying hundreds of Philosophy books into easy-to-follow formulas (by Patrick Milani)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.deepl.com/translator" rel="noopener nofollow" target="_blank"&gt;Deepl&lt;/a&gt; - A surprisingly good, AI-powered online translator- much smarter than Google Translate!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dimensions.com/" rel="noopener nofollow" target="_blank"&gt;Dimensions.com&lt;/a&gt; - Huge reference database containing the exact dimensions of products and objects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.drmemes.com/" rel="noopener nofollow" target="_blank"&gt;Dr Meme&lt;/a&gt; - Meme generator (without watermarks, ads or sign up)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hey.science/dumpster-fire/" rel="noopener nofollow" target="_blank"&gt;Dumpster Fire&lt;/a&gt; - Watch your message being burnt in real flames!!&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.dontevenreply.com/" rel="noopener nofollow" target="_blank"&gt;Don't Even Reply&lt;/a&gt; - Some hilariously funny email chains&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.doesthedogdie.com/" rel="noopener nofollow" target="_blank"&gt;Does the dog die?&lt;/a&gt; - Crowdsourced content warnings for movies, tv, books and more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bouncingdvdlogo.com/" rel="noopener nofollow" target="_blank"&gt;DVD Screensaver&lt;/a&gt; - Brings back memories, that classic bouncing DVD screen&lt;/li&gt;
&lt;li&gt;&lt;a href="https://epic.gsfc.nasa.gov/" rel="noopener nofollow" target="_blank"&gt;Earth Polychromatic Imaging Camera&lt;/a&gt; - Hourly photos of the Earth from NASA&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aatishb.com/entropy/" rel="noopener nofollow" target="_blank"&gt;Entropy by Aatish Bhatia&lt;/a&gt; - Interactive article, explaining entropy with sheep&lt;/li&gt;
&lt;li&gt;&lt;a href="https://emupedia.net/beta/emuos/" rel="noopener nofollow" target="_blank"&gt;EmuOS&lt;/a&gt; - A very nostalgic web-based emulation of Windows 98 (by Emupedia)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eyes.nasa.gov/apps/orrery/" rel="noopener nofollow" target="_blank"&gt;Eyes.Nasa.gov&lt;/a&gt; - Interactive 3D solar system, showing info about NASA missions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fsymbols.com/emoticons/" rel="noopener nofollow" target="_blank"&gt;FSymbols Emoticons&lt;/a&gt; - Copy/ Paste text-based emojis&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fbi.gov/history/famous-cases" rel="noopener nofollow" target="_blank"&gt;FBI Infamous Cases &amp;amp; Criminals&lt;/a&gt; - A collection of the most infamous criminals &amp;amp; cases investigated&lt;/li&gt;
&lt;li&gt;&lt;a href="https://krikienoid.github.io/flagwaver/" rel="noopener nofollow" target="_blank"&gt;Flag Waver&lt;/a&gt; - Generates a waving flag for any image (some very clever coding, by @krikienoid)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://findaspring.com/" rel="noopener nofollow" target="_blank"&gt;Find a Spring&lt;/a&gt; - A tool to locate a fresh water spring near you, or anywhere in the World, plus info about it&lt;/li&gt;
&lt;li&gt;&lt;a href="https://flipanim.com/" rel="noopener nofollow" target="_blank"&gt;Flipanim&lt;/a&gt; - Create flipbook animations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2.flexiple.com/scale/all-illustrations" rel="noopener nofollow" target="_blank"&gt;Scale Illustrations&lt;/a&gt; - Royalty-free, high-quality vectors (by @KarthikS2206 + Flexiple)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fakeupdate.net/win8" rel="noopener nofollow" target="_blank"&gt;Fake Windows Update&lt;/a&gt; - This is a great prank to play on your colleges when they don't lock their laptop!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paveldogreat.github.io/WebGL-Fluid-Simulation/" rel="noopener nofollow" target="_blank"&gt;Fluid Simulation&lt;/a&gt; - Impressive, and kinda relaxing, WebGL dynamic simulation of fluid&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fontgeneratoronline.com/" rel="noopener nofollow" target="_blank"&gt;Font Generator&lt;/a&gt; - Convert a string into various plain text ASCII fonts (Great for Social Media + Messaging)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forekast.com/" rel="noopener nofollow" target="_blank"&gt;Forekast&lt;/a&gt; - Upcoming dates of notable internet events&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forgotify.com/" rel="noopener nofollow" target="_blank"&gt;Forgotify&lt;/a&gt; - Listen to a song that's never been heard before on Spotify (produces some questionable tracks)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://forvo.com/" rel="noopener nofollow" target="_blank"&gt;Forvo&lt;/a&gt; - Pronunciation Dictionary&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freelearninglist.org/" rel="noopener nofollow" target="_blank"&gt;Free Learning List&lt;/a&gt; - A collection of awesome educational resources from around the internet&lt;/li&gt;
&lt;li&gt;&lt;a href="https://grep.app/" rel="noopener nofollow" target="_blank"&gt;Grep.app&lt;/a&gt; - Allows you to search the contents of files within GitHub repos, with a RegEx option too&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gethuman.com/" rel="noopener nofollow" target="_blank"&gt;Get Human&lt;/a&gt; - Bypass automated phone menus and long hold times, and get put through to a human&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.goodtricks.net/" rel="noopener nofollow" target="_blank"&gt;Good Tricks&lt;/a&gt; - Tons of magic tricks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://akash.dev/clock/" rel="noopener nofollow" target="_blank"&gt;Gradient Clock&lt;/a&gt; - Beautiful real-time clock of the big screen&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hackertyper.net/" rel="noopener nofollow" target="_blank"&gt;Hacker Typer&lt;/a&gt; - A classic.. pretend to be a hacker&lt;/li&gt;
&lt;li&gt;&lt;a href="https://helpmap.io/" rel="noopener nofollow" target="_blank"&gt;HelpMap&lt;/a&gt; - A website that lets you find local charities to support&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hemingwayapp.com/" rel="noopener nofollow" target="_blank"&gt;Hemingway&lt;/a&gt; - Analyses a writing, and suggests edits to make it easier to read&lt;/li&gt;
&lt;li&gt;&lt;a href="https://howlongtoread.com/" rel="noopener nofollow" target="_blank"&gt;How long to Read&lt;/a&gt; - Tells you how long it will take to read a certain book&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hostrider.com/" rel="noopener nofollow" target="_blank"&gt;HostRider&lt;/a&gt; - Lo-fi music for coding, with a coding-kitty as a companion&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hotspot3d.com/" rel="noopener nofollow" target="_blank"&gt;HotSpot 3D&lt;/a&gt; - Compare any 2 smart phones, in a size-accurate 3D environment, to easily visualize dimensions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fieggen.com/shoelace/" rel="noopener nofollow" target="_blank"&gt;Ian's Shoelace Site&lt;/a&gt; - An internet classic, everything you've ever wanted to know about laces&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engaging-data.com/iceberger-remixed" rel="noopener nofollow" target="_blank"&gt;Icebergr Remixed&lt;/a&gt; - Draw an iceberg to visualize how it will float&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ikeamuseum.com/sv/ikea-kataloger/" rel="noopener nofollow" target="_blank"&gt;Ikea Museum&lt;/a&gt; - Every Ikea catalog since 1950&lt;/li&gt;
&lt;li&gt;&lt;a href="https://imagecolorizer.com/colorize.html" rel="noopener nofollow" target="_blank"&gt;Image Colorize&lt;/a&gt; - Free tool that uses AI to add color to black and white photos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://daumann.github.io/imdb-compare-shows/?shows=Dark,Black%20Mirror" rel="noopener nofollow" target="_blank"&gt;IMDB Compare Shows&lt;/a&gt; - Compares ratings over time of TV shows&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.importyeti.com/" rel="noopener nofollow" target="_blank"&gt;Import Yeti&lt;/a&gt; - Find any companies suppliers, using data from U.S Customs Sea Shipment Records&lt;/li&gt;
&lt;li&gt;&lt;a href="https://illustrationkit.com/illustrations" rel="noopener nofollow" target="_blank"&gt;Illustration Kit&lt;/a&gt; - Hundreds of free and open source illustrations, with customizable colors&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.isleoftune.com/" rel="noopener nofollow" target="_blank"&gt;Isle of Tune&lt;/a&gt; - Fun game where you make music from a street plan&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inviterick.com/" rel="noopener nofollow" target="_blank"&gt;Invite Rick&lt;/a&gt; - Invite Rick Astlet to Rick Roll your Zoom meetings&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iwastesomuchtime.com/" rel="noopener nofollow" target="_blank"&gt;I Waste so much Time&lt;/a&gt; - Just some funny pictures, to waste your time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.justtherecipe.app/" rel="noopener nofollow" target="_blank"&gt;Just the Recipe&lt;/a&gt; - Removes all the clutter from cooking websites, just paste a URL to a recipe&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.judyrecords.com/" rel="noopener nofollow" target="_blank"&gt;Judy Records&lt;/a&gt; - Instantly search over 400 million US Court Records&lt;/li&gt;
&lt;li&gt;&lt;a href="https://defonic.com/jungle-rain-generator.html" rel="noopener nofollow" target="_blank"&gt;Jungle Simulator&lt;/a&gt; - Nice relaxing, and customizable jungle sounds&lt;/li&gt;
&lt;li&gt;&lt;a href="https://killedbygoogle.com/" rel="noopener nofollow" target="_blank"&gt;Killed by Google&lt;/a&gt; - Google has killed off over 200 of their services - checkout the grave yard&lt;/li&gt;
&lt;li&gt;&lt;a href="https://discotraystudios.github.io/my-life-in-months/" rel="noopener nofollow" target="_blank"&gt;Life in Months&lt;/a&gt; - Create a grid of your life&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lines.chromeexperiments.com/" rel="noopener nofollow" target="_blank"&gt;Lines&lt;/a&gt; - Draw a line, and let Google Earth complete the picture&lt;/li&gt;
&lt;li&gt;&lt;a href="https://listeningtogether.atspotify.com/" rel="noopener nofollow" target="_blank"&gt;ListeningTogether&lt;/a&gt; - Shows when two people start listening to the same song, at the same time, via Spotify&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.litsolutions.org/" rel="noopener nofollow" target="_blank"&gt;LitSolutions&lt;/a&gt; - Find step-by-step solutions to the questions in your textbook&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.lofi.cafe/" rel="noopener nofollow" target="_blank"&gt;Lofi.Cafe&lt;/a&gt; - Just non-stop lofi, with several stations/ genres to pick from&lt;/li&gt;
&lt;li&gt;&lt;a href="https://localingual.com/" rel="noopener nofollow" target="_blank"&gt;Localingual&lt;/a&gt; - A map that you can click on, to hear voices from around the world&lt;/li&gt;
&lt;li&gt;&lt;a href="https://littlealchemy2.com/" rel="noopener nofollow" target="_blank"&gt;Little Alchemy 2&lt;/a&gt; - Weirdly addictive simple element-mixing game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mcbroken.com/" rel="noopener nofollow" target="_blank"&gt;McBroken&lt;/a&gt; - A map which keeps track of which McFlurry machines are broken across the US (by @rashiq)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pcottle.github.io/MSOutlookit/" rel="noopener nofollow" target="_blank"&gt;MSOutlook-Reddis&lt;/a&gt; - Makes Reddit look like Microsoft Outlook (useful for work)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bluebulbprojects.com/measureofthings/default.php" rel="noopener nofollow" target="_blank"&gt;Measure of Things&lt;/a&gt; - See real-world comparisons of a measurement&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.menneske.no/sudoku/" rel="noopener nofollow" target="_blank"&gt;Menneske&lt;/a&gt; - Clean site to find, print and solve sudokus of all sizes and difficulties, and other puzzles&lt;/li&gt;
&lt;li&gt;&lt;a href="https://moontoday.jatan.space/" rel="noopener nofollow" target="_blank"&gt;Moon Today&lt;/a&gt; - Browse the moons craters, mountains and lava channels&lt;/li&gt;
&lt;li&gt;&lt;a href="morsecode.me"&gt;MorseCode.me&lt;/a&gt; - Morse Code-only chat room&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.micro-pano.com/pearl/" rel="noopener nofollow" target="_blank"&gt;MicroPano&lt;/a&gt; - Zoom into Vermeer's masterpiece with this 10 billion pixel scan&lt;/li&gt;
&lt;li&gt;&lt;a href="https://musclewiki.com/" rel="noopener nofollow" target="_blank"&gt;Muscle Wiki&lt;/a&gt; - Select a muscle, for exercises on how to work it&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.musicroamer.com/" rel="noopener nofollow" target="_blank"&gt;Music Roamer&lt;/a&gt; - Finds music from similar artists you love: &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.my90stv.com" rel="noopener nofollow" target="_blank"&gt;My90sTV&lt;/a&gt; - Simulates a 90's TV - so nostalgic! See also &lt;a href="https://my60stv.com/" rel="noopener nofollow" target="_blank"&gt;My60sTV&lt;/a&gt;, &lt;a href="https://my70stv.com/" rel="noopener nofollow" target="_blank"&gt;My70sTv&lt;/a&gt; and &lt;a href="https://my80stv.com/" rel="noopener nofollow" target="_blank"&gt;My80sTV&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mysterysear.ch/" rel="noopener nofollow" target="_blank"&gt;Mystery Search&lt;/a&gt; - Search for something, and get results of what the previous person searched for&lt;/li&gt;
&lt;li&gt;&lt;a href="https://nobody.live/" rel="noopener nofollow" target="_blank"&gt;Nobody.live&lt;/a&gt; - Shows live Twitch streams, that currently don't have any viewers (by Charles Stross)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neural.love/" rel="noopener nofollow" target="_blank"&gt;Neural Love&lt;/a&gt; - Uses AI to restore old photos (or videos) to modern quality&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.nitrotype.com/" rel="noopener nofollow" target="_blank"&gt;NitroType&lt;/a&gt; - Multi-player typing car racing game&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.spoonbill.org/n+7/" rel="noopener nofollow" target="_blank"&gt;N+7&lt;/a&gt; - Replaces every noun in a body of text, with the seventh word following it in the dictionary&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neave.tv/" rel="noopener nofollow" target="_blank"&gt;Neave.tv&lt;/a&gt; - TV without context. Click to channel hop&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openculture.com/" rel="noopener nofollow" target="_blank"&gt;Open Culture&lt;/a&gt; - Free cultural &amp;amp; educational content from across the web&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opslagify.deruever.nl/" rel="noopener nofollow" target="_blank"&gt;Opslagify&lt;/a&gt; - Calculates how much storage you'll need to download your Spotify playlists&lt;/li&gt;
&lt;li&gt;&lt;a href="https://orb.farm/" rel="noopener nofollow" target="_blank"&gt;Orb.Farm&lt;/a&gt; - Relaxing lil game, where you create your own eco-system&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ownersman.com/" rel="noopener nofollow" target="_blank"&gt;OwnersMan&lt;/a&gt; - All car manuals&lt;/li&gt;
&lt;li&gt;&lt;a href="https://felixboiii.github.io/paper-plotter/#create-function" rel="noopener nofollow" target="_blank"&gt;Paper Plotter&lt;/a&gt; - Create math functions out of paper&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paint.wtf/" rel="noopener nofollow" target="_blank"&gt;Paint.wtf&lt;/a&gt; - Draw something and get scored based on AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.myphysicslab.com/" rel="noopener nofollow" target="_blank"&gt;Physics Simulations&lt;/a&gt; - Physics simulations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dood.al/pinktrombone/" rel="noopener nofollow" target="_blank"&gt;Pink Trombone&lt;/a&gt; - An oral cavity and vocal tract simulator, for helping with speech disorders&lt;/li&gt;
&lt;li&gt;&lt;a href="https://playphrase.me/" rel="noopener nofollow" target="_blank"&gt;PlayPhrase.me&lt;/a&gt; - Search any phrase, to see all the movies it appears in&lt;/li&gt;
&lt;li&gt;&lt;a href="http://boilthefrog.playlistmachinery.com/" rel="noopener nofollow" target="_blank"&gt;Playlist Machinery&lt;/a&gt; - Create a (nearly) seamless playlist between (almost) any two artists&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pointerpointer.com/" rel="noopener nofollow" target="_blank"&gt;Pointer Pointer&lt;/a&gt; - Displays a random photo, of someone pointing to exactly where your cursor is&lt;/li&gt;
&lt;li&gt;&lt;a href="https://printer.tools/" rel="noopener nofollow" target="_blank"&gt;Printer Tools&lt;/a&gt; - 3D Printer Utilities, including a 3D QR Code Generator&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.qrpicture.com/" rel="noopener nofollow" target="_blank"&gt;QR Picture&lt;/a&gt; - Turn any picture into a working QR code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quickdraw.withgoogle.com/" rel="noopener nofollow" target="_blank"&gt;Quick Draw AI Game&lt;/a&gt; - See if the neural network can recognize what you've drawn&lt;/li&gt;
&lt;li&gt;&lt;a href="https://quillbot.com/" rel="noopener nofollow" target="_blank"&gt;QuillBot&lt;/a&gt; - AI tool that rephrases text&lt;/li&gt;
&lt;li&gt;&lt;a href="http://radio.garden/" rel="noopener nofollow" target="_blank"&gt;Radio Garden&lt;/a&gt; - Listen to Live Radio from all over the world&lt;/li&gt;
&lt;li&gt;&lt;a href="https://radiooooo.com/" rel="noopener nofollow" target="_blank"&gt;Radiooooo&lt;/a&gt; - Pick a country, and a decade, to hear the songs that would have been on the radio&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rainbowhunt.com/?droprainz" rel="noopener nofollow" target="_blank"&gt;RainbowHunt&lt;/a&gt; - Amazing rain simulation, built with WebGL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://relaxcalm.netlify.app/" rel="noopener nofollow" target="_blank"&gt;RelaxCalm&lt;/a&gt; - Do nothing for 90 Seconds&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.remove.bg/" rel="noopener nofollow" target="_blank"&gt;Remove BG&lt;/a&gt; - Automatically removes the background of any image&lt;/li&gt;
&lt;li&gt;&lt;a href="https://808303.studio/" rel="noopener nofollow" target="_blank"&gt;Roland 808303 Studio&lt;/a&gt; - Computer Controlled Rhythm Composer, built with HTML5&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.rubiksolve.com/" rel="noopener nofollow" target="_blank"&gt;RubikSolve&lt;/a&gt; - Rrbik's Cube Solver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stephaneginier.com/sculptgl/" rel="noopener nofollow" target="_blank"&gt;SculptGL&lt;/a&gt; - Digital Sculpting Web App&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.shadyurl.com/" rel="noopener nofollow" target="_blank"&gt;ShadyURL&lt;/a&gt; - A URL Shortener, that makes legitimate websites sound dodgy&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.sharedrop.io/" rel="noopener nofollow" target="_blank"&gt;ShareDrop&lt;/a&gt; - Share files with other local clients on your network (by Cowbell Labs)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexanderperrin.com.au/paper/shorttrip/#" rel="noopener nofollow" target="_blank"&gt;Short Trip&lt;/a&gt; - A beautiful interactive, hand-illustrated short animation (by Alexander Perrin)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.shortlyai.com/" rel="noopener nofollow" target="_blank"&gt;ShortlyAI&lt;/a&gt; - This one is really epic! Enter a title, start writing, and the AI will write you an essay&lt;/li&gt;
&lt;li&gt;&lt;a href="https://shortcuts.design/" rel="noopener nofollow" target="_blank"&gt;Shortcuts&lt;/a&gt; - Keyboard shortcuts for lots of apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sidewaysdictionary.com/#/" rel="noopener nofollow" target="_blank"&gt;Sideways Dictionary&lt;/a&gt; - Like a dictionary, but uses analogies to simply explain infosec definitions &lt;/li&gt;
&lt;li&gt;&lt;a href="https://signalstickers.com/" rel="noopener nofollow" target="_blank"&gt;Signal Stickers&lt;/a&gt; - An unofficial directory for Signal (messaging app) sticker packs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neal.fun/size-of-space/" rel="noopener nofollow" target="_blank"&gt;Size of Space&lt;/a&gt; - Shows the relative size of items in space (Tldr; we're really really small)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sketch2code.azurewebsites.net/" rel="noopener nofollow" target="_blank"&gt;Sketch 2 Code&lt;/a&gt; - Convert any hand-drawn wireframe, into HTML code&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snapdrop.net/" rel="noopener nofollow" target="_blank"&gt;SnapDrop&lt;/a&gt; - Share files with other devices on your network, no signup or software required&lt;/li&gt;
&lt;li&gt;&lt;a href="https://playsnake.org/" rel="noopener nofollow" target="_blank"&gt;Snake&lt;/a&gt; - Play snake, the classic retro phone game rebuilt by Paul Neave&lt;/li&gt;
&lt;li&gt;&lt;a href="https://soundescape.io/" rel="noopener nofollow" target="_blank"&gt;SoundeScape&lt;/a&gt; - 3-Dimensional, generative sound environments for Focus, Relax or Sleep&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spacetelescopelive.org/" rel="noopener nofollow" target="_blank"&gt;Space Telescope Live&lt;/a&gt; - See what the Hubble space telescope is looking at right now&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spacejam.com/" rel="noopener nofollow" target="_blank"&gt;Space Jam&lt;/a&gt; - The original Space Jam site from 1996, still online!&lt;/li&gt;
&lt;li&gt;&lt;a href="https://strobe.cool/" rel="noopener nofollow" target="_blank"&gt;Strobe.Cool&lt;/a&gt; - Weirdly hypothesizing illusion (WARNING: Contains fast-flickering/ strobe lighting)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.supercook.com/#/recipes" rel="noopener nofollow" target="_blank"&gt;Super Cook&lt;/a&gt; - Search recipes based on what's in your fridge&lt;/li&gt;
&lt;li&gt;&lt;a href="https://engaging-data.com/sunlight-latitude/" rel="noopener nofollow" target="_blank"&gt;Sunlight Hours per Day&lt;/a&gt; - Visualize the number of hours of sunlight parts of the Earth receive per day&lt;/li&gt;
&lt;li&gt;&lt;a href="https://remarkapp.io/" rel="noopener nofollow" target="_blank"&gt;Temark&lt;/a&gt; - Convert any bit of long writing, into a short summary&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tosdr.org/" rel="noopener nofollow" target="_blank"&gt;Terms of Service; Didn't Read&lt;/a&gt; - Professionally written, short summaries of important Terms of Service&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.thefacesoffacebook.com/" rel="noopener nofollow" target="_blank"&gt;The Faces of Facebook&lt;/a&gt; - Shows tons of public facebook profile pictures (broken)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gcemetery.co/" rel="noopener nofollow" target="_blank"&gt;The Google Cemetery&lt;/a&gt; - Collection of all 162+ products that Google killed&lt;/li&gt;
&lt;li&gt;&lt;a href="https://theskullery.net/" rel="noopener nofollow" target="_blank"&gt;The Skullery&lt;/a&gt; - Collection of free, well-presented and easy-to-follow recipes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.merriam-webster.com/time-traveler" rel="noopener nofollow" target="_blank"&gt;TimeTraveler&lt;/a&gt; - Shows which new words, were first used in print for each year&lt;/li&gt;
&lt;li&gt;&lt;a href="https://titlescraper.herokuapp.com/" rel="noopener nofollow" target="_blank"&gt;TitleScraper&lt;/a&gt; - Scrapes any given sub-reddit, and looks for commonly used words and upvotes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://torrent.parts/" rel="noopener nofollow" target="_blank"&gt;Torrent.parts&lt;/a&gt; - Inspect and edit what's in your Torrent file or Magnet link (by Leo herzog)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.arvindguptatoys.com/toys.html" rel="noopener nofollow" target="_blank"&gt;Toys from Trash&lt;/a&gt; - Hundreds of Science projects using common household items &amp;amp; trash&lt;/li&gt;
&lt;li&gt;&lt;a href="https://app.traveltime.com/search/" rel="noopener nofollow" target="_blank"&gt;Travel Time&lt;/a&gt; - Travel time calculator, great for finding somewhere to live for a commute&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trumpizer.com/" rel="noopener nofollow" target="_blank"&gt;Trumpizer&lt;/a&gt; - An AI trained to answer questions like Donald Trump&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.tunemymusic.com/" rel="noopener nofollow" target="_blank"&gt;Tune my Music&lt;/a&gt; - Free tool for exporting or transferring music playlists from one service to another&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.typelit.io/" rel="noopener nofollow" target="_blank"&gt;TypeLit&lt;/a&gt; - Practice touch typing, by typing out classic novels&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.umeetmehere.com/" rel="noopener nofollow" target="_blank"&gt;U Meet Me&lt;/a&gt; - Find meeting places between 2 addresses&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unim.press/" rel="noopener nofollow" target="_blank"&gt;Unim.Press&lt;/a&gt; - Read Reddit like a newspaper&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unogs.com/" rel="noopener nofollow" target="_blank"&gt;Unogs&lt;/a&gt; - Search for a movie, to find which country Netflix it is on (useful for choosing VPN location)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://virtualvacation.us/guess" rel="noopener nofollow" target="_blank"&gt;Virtual Vacation - City Guesser Game&lt;/a&gt; - Shows parts of cities, to guess location (great for quizzes)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://visualping.io/" rel="noopener nofollow" target="_blank"&gt;VisualPing&lt;/a&gt; - Monitor website for changes&lt;/li&gt;
&lt;li&gt;&lt;a href="http://weavesilk.com/" rel="noopener nofollow" target="_blank"&gt;WeaveSilk.com&lt;/a&gt; - Mesmerizing generative art&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webamp.org/" rel="noopener nofollow" target="_blank"&gt;WebAmp&lt;/a&gt; - HTML5 implementation of WinAmp in-browser&lt;/li&gt;
&lt;li&gt;&lt;a href="https://whattowatchon.tv/" rel="noopener nofollow" target="_blank"&gt;What to Watch on TV&lt;/a&gt; - Find TV shows, based on IMDB ratings&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.whatshouldireadnext.com/" rel="noopener nofollow" target="_blank"&gt;What Should I read Next&lt;/a&gt; - Discover books, based on other books you've enjoyed&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.africam.com/wildlife/live-african-wildlife-safari-channels/" rel="noopener nofollow" target="_blank"&gt;Wildlife Africam&lt;/a&gt; - Live wildlife cameras in Africa&lt;/li&gt;
&lt;li&gt;&lt;a href="https://skins.webamp.org/" rel="noopener nofollow" target="_blank"&gt;Winamp Skin Museum&lt;/a&gt; - I don't know why...&lt;/li&gt;
&lt;li&gt;&lt;a href="https://window-swap.com/window" rel="noopener nofollow" target="_blank"&gt;Window Swap&lt;/a&gt; - Look through a random window- shows videos out of peoples windows&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ybenbihi.github.io/windows-error-worm/" rel="noopener nofollow" target="_blank"&gt;Windows Error Worm&lt;/a&gt; - Have fun dragging Windows XP-style crashed Windows once again&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.concerthotels.com/worlds-greatest-vocal-ranges" rel="noopener nofollow" target="_blank"&gt;Worlds Greatest Singers&lt;/a&gt; - Vocal ranges of the top singers visualized&lt;/li&gt;
&lt;li&gt;&lt;a href="https://xkcd.com/" rel="noopener nofollow" target="_blank"&gt;Xkcd&lt;/a&gt; - The original source of xkcd's classic comic strips, on Romance, Sarcasm, Math, Computing &amp;amp; Language&lt;/li&gt;
&lt;li&gt;&lt;a href="https://okay.wasv.me/" rel="noopener nofollow" target="_blank"&gt;You Okay?&lt;/a&gt; - A little something to take your mind of things (by Billy Stevens)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://zoom.earth/#view=51,0.6,4z/date=2020-09-28,16:00,+1" rel="noopener nofollow" target="_blank"&gt;Zoom Earth&lt;/a&gt; - Live satellite photos of Earth&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for visiting ü•∞&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;This list serves as a boredom destroyer, or something to take your mind of things- I look for sites that are either amazing, genius, funny, random or useful. There's currently over 200 websites, but this list is still very much a work in progress, and I continue to add new stuff üöß&lt;/p&gt;

&lt;p&gt;I always love discovering new eipc internet stuff, so if you know of something I should check out, drop me a line at &lt;code class="prettyprint"&gt;alicia at omg dot lol&lt;/code&gt; - Thanks for all the messages and suggestions so far!&lt;/p&gt;

&lt;style&gt;ul li{font-size: 1rem !important;}&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fun with Real-Time Data üå†</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Fri, 25 Sep 2020 17:26:12 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18611/fun-with-real-time-data</link>
      <guid>https://notes.aliciasykes.com/18611/fun-with-real-time-data</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;img src="https://i.ibb.co/cDyDCY4/fun-with-live-data-banner.png" alt="Fun with live data_banner"&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A curated collection of data-related awesomeness, with a focus on internet, communication &amp;amp; security&lt;/em&gt;&lt;br&gt;
&lt;em&gt;Work in progress- I'm continuing to update the list, whenever I come across something epic&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;My respect goes out to the legends behind each of these projects üëè&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Awesome Real-Time Data Visualizations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Internet&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://torflow.uncharted.software" rel="noopener nofollow" target="_blank"&gt;Tor Flow&lt;/a&gt; - Real-time data flow between Tor nodes&lt;/li&gt;
&lt;li&gt;&lt;a href="http://census2012.sourceforge.net/images/geovideo.gif" rel="noopener nofollow" target="_blank"&gt;Internet Census&lt;/a&gt; - 24-hour world map of average utilization of IPv4 addresses

&lt;ul&gt;
&lt;li&gt; ICMP ping requests sent out with &lt;a href="https://en.wikipedia.org/wiki/Carna_botnet" rel="noopener nofollow" target="_blank"&gt;Carna botnet&lt;/a&gt;. Learn more on the &lt;a href="http://census2012.sourceforge.net" rel="noopener nofollow" target="_blank"&gt;Official Site&lt;/a&gt; / see similar &lt;a href="https://ant.isi.edu/datasets/all.html" rel="noopener nofollow" target="_blank"&gt;datasets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://labs.mapbox.com/labs/twitter-gnip/brands/" rel="noopener nofollow" target="_blank"&gt;Map of Mobile Internet&lt;/a&gt; - Shows world data coverage, according to Twitter data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iknowwhatyoudownload.com/en/stat/GB/daily" rel="noopener nofollow" target="_blank"&gt;IKnow&lt;/a&gt; - Live data showing what content is being downloaded + distributed via torrents&lt;/li&gt;
&lt;li&gt;&lt;a href="http://internet-map.net" rel="noopener nofollow" target="_blank"&gt;Semantic Internet Map&lt;/a&gt; - Shows how different websites link together&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wigle.net" rel="noopener nofollow" target="_blank"&gt;Wiggle&lt;/a&gt; - Worlds largest WiFi Map showing personal hotspot statistics geographically&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bgpstream.com" rel="noopener nofollow" target="_blank"&gt;BGP Stream&lt;/a&gt; - Shows all current outages (see also live maps from &lt;a href="https://livemap.pingdom.com/" rel="noopener nofollow" target="_blank"&gt;Pingdom&lt;/a&gt;, &lt;a href="https://www.thousandeyes.com/outages/" rel="noopener nofollow" target="_blank"&gt;Thousand Eyes&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://research.domaintools.com/statistics" rel="noopener nofollow" target="_blank"&gt;DomainTools Statistics&lt;/a&gt; - Domain registration Numbers and Charts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://freedomhouse.org/explore-the-map" rel="noopener nofollow" target="_blank"&gt;Freedom House - Censorship Map&lt;/a&gt; - Global internet freedom and democracy status per country, over time&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.insecam.org" rel="noopener nofollow" target="_blank"&gt;Insecam&lt;/a&gt; - A directory and feed of insecure or public live webcams&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Air &amp;amp; Sea&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://satellitemap.space/" rel="noopener nofollow" target="_blank"&gt;StarLink Satellite Map&lt;/a&gt; - Real-time positions of StarLink and OneWeb Satellites, showing heights, IDs and more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.submarinecablemap.com" rel="noopener nofollow" target="_blank"&gt;Submarine Cable Map&lt;/a&gt; - An up-to-date map of major global internet cables (see also &lt;a href="https://he.net/3d-map" rel="noopener nofollow" target="_blank"&gt;he.net&lt;/a&gt; and &lt;a href="https://submarine-cable-map-2016.telegeography.com" rel="noopener nofollow" target="_blank"&gt;this&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.flightradar24.com" rel="noopener nofollow" target="_blank"&gt;FlightRadar24&lt;/a&gt; - World-wide map of live aircraft positions (see also &lt;a href="https://opensky-network.org/network/explorer" rel="noopener nofollow" target="_blank"&gt;opensky-network&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.marinetraffic.com/" rel="noopener nofollow" target="_blank"&gt;Marine Traffic&lt;/a&gt; - World-wide map of live ships, tankers, cargo &amp;amp; passenger vessels and more&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stuffin.space" rel="noopener nofollow" target="_blank"&gt;Stuff in Space&lt;/a&gt; - Shows objects orbiting Earth&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.asterank.com/" rel="noopener nofollow" target="_blank"&gt;Asterank&lt;/a&gt; - A scientific and economic database of over 600,000 asteroids&lt;/li&gt;
&lt;li&gt;&lt;a href="https://uk.flightaware.com/miserymap/" rel="noopener nofollow" target="_blank"&gt;Flight Misery Map&lt;/a&gt; - Real-time US geographical flight delay &amp;amp; cancellation trends&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meteorshowers.org/" rel="noopener nofollow" target="_blank"&gt;Meteor Showers&lt;/a&gt; - Shows commit locations, simulating meteor showers with time&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.google.com/maps/d/u/0/viewer?mid=1Z1dI8hoBZSJNWFx2xr_MMxSxSxY" rel="noopener nofollow" target="_blank"&gt;Airport WiFi Map&lt;/a&gt; - Shows WiFi networks and their passwords for airports around the world&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Crypto&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fiatleak.com/" rel="noopener nofollow" target="_blank"&gt;FiatLeak&lt;/a&gt; - Real-time crypto asset movement stats&lt;/li&gt;
&lt;li&gt;&lt;a href="https://coin360.com/" rel="noopener nofollow" target="_blank"&gt;Coin360&lt;/a&gt; - Customizable heatmap shows the current state of prices and market caps across the Cryptoverse&lt;/li&gt;
&lt;li&gt;&lt;a href="http://bitcoinrain.io/" rel="noopener nofollow" target="_blank"&gt;BitCoin Rain&lt;/a&gt; - Real BTC transactions and values falling from the sky&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bitnodes.io/nodes/network-map/" rel="noopener nofollow" target="_blank"&gt;BitNodes&lt;/a&gt; - Network map of all currently reachable nodes in the BTC network, can also be viewed on a &lt;a href="https://bitnodes.io/nodes/live-map/" rel="noopener nofollow" target="_blank"&gt;geographical map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.bitlisten.com/" rel="noopener nofollow" target="_blank"&gt;BitListen&lt;/a&gt; - The sound of BitCoin, live transactions represented by bubbles and tones&lt;/li&gt;
&lt;li&gt;&lt;a href="https://symphony.iohk.io/en/" rel="noopener nofollow" target="_blank"&gt;Symphony&lt;/a&gt; - BTC transactions rendered in a 3D outer-space virtual world, with flight simulator mode&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cryptowat.ch/" rel="noopener nofollow" target="_blank"&gt;Crypto Watch&lt;/a&gt; - Real-time professional crypto market dashboards and trading data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.livecoinwatch.com/crypto-market-cap" rel="noopener nofollow" target="_blank"&gt;LiveCoinWatch&lt;/a&gt; - Crypto coin listings, and customizable dashboards and widgets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mempool.space/" rel="noopener nofollow" target="_blank"&gt;Mempool&lt;/a&gt; - A BTC block explorer with real-time stats inferred from recent blocks, with a &lt;a href="https://mempool.ninja/tv" rel="noopener nofollow" target="_blank"&gt;TV mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buyhodlsell.com/tx-watch/" rel="noopener nofollow" target="_blank"&gt;TX Watch&lt;/a&gt; - Live BCH and BTC transactions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://txstreet.com/" rel="noopener nofollow" target="_blank"&gt;TxStreet&lt;/a&gt; - a live blockchain and mempool visualizer, where data is represented by crowds on the street&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mempool.space/" rel="noopener nofollow" target="_blank"&gt;Mempool&lt;/a&gt; - Real-time visualization of the Bitcoin transaction fee market&lt;/li&gt;
&lt;li&gt;&lt;a href="https://telemetry.polkadot.io/#map/Polkadot" rel="noopener nofollow" target="_blank"&gt;Polkadot Telemetry&lt;/a&gt; - Live Polkadot staking and transaction blocks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://utxo.live/" rel="noopener nofollow" target="_blank"&gt;utxo&lt;/a&gt; - Static charts generated daily, showing inputs, outputs and spend dates&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Social&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://onemilliontweetmap.com/" rel="noopener nofollow" target="_blank"&gt;One in a Million&lt;/a&gt; - A real-time Twitter map&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sentiment-sweep.com/now" rel="noopener nofollow" target="_blank"&gt;Sentiment Sweep&lt;/a&gt; - Geographic sentiment analysis on real-time Twitter data (- I made this one)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Misc&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://listen.hatnote.com/" rel="noopener nofollow" target="_blank"&gt;ListenToWikipedia&lt;/a&gt; - Wikipedia edits, represented by a tone, depending on size, built by Hatnote&lt;/li&gt;
&lt;li&gt;&lt;a href="https://trends.google.com/trends/hottrends/visualize?pn=p9&amp;amp;nrow=4&amp;amp;ncol=4" rel="noopener nofollow" target="_blank"&gt;Google Search Terms&lt;/a&gt; - Hourly Google Search Trends, in your location&lt;/li&gt;
&lt;li&gt;&lt;a href="http://histography.io/" rel="noopener nofollow" target="_blank"&gt;Three Thousand Years&lt;/a&gt; - Shows major events throughout history, using Wikipedia data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki-atlas.org/" rel="noopener nofollow" target="_blank"&gt;Wiki-Atlas&lt;/a&gt; - Wikipedia articles, categorized and plotted on a map&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ncov2019.live/" rel="noopener nofollow" target="_blank"&gt;ncov2019/live&lt;/a&gt; - Real-time Covid-19 data, map and dashboard (by Avi Schiffmann)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://grid.iamkate.com/" rel="noopener nofollow" target="_blank"&gt;National Grid: Live Status&lt;/a&gt; - Real-time UK energy stats (by Kate Morley) (similar to &lt;a href="https://www.gridwatch.templar.co.uk/" rel="noopener nofollow" target="_blank"&gt;Grid Watch&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://globe.cid.harvard.edu/" rel="noopener nofollow" target="_blank"&gt;Globe of Economic Complexity&lt;/a&gt; - Visualize's 15 Trillion dollars of world trade, where each dot is $100,000,000 of export&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.audio/" rel="noopener nofollow" target="_blank"&gt;GitHub Audio&lt;/a&gt; - Real-time GitHub commits and PR merges, represented by audio and bubbles&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cyber&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.comparitech.com/ransomware-attack-map/" rel="noopener nofollow" target="_blank"&gt;Comparitech Ransomware Attack Map&lt;/a&gt; - Geographically plotted ransomware attacks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://threatmap.checkpoint.com" rel="noopener nofollow" target="_blank"&gt;Checkpoint&lt;/a&gt; - Geographical plotting of Malware, Phishing and Exploits&lt;/li&gt;
&lt;li&gt;&lt;a href="https://threatmap.fortiguard.com" rel="noopener nofollow" target="_blank"&gt;FortiGuard&lt;/a&gt; - Incoming &amp;amp; Outgoing Attacks per Country&lt;/li&gt;
&lt;li&gt;&lt;a href="https://artmotion.eu/en/insights/cloud-security-risks-map.html" rel="noopener nofollow" target="_blank"&gt;Cloud Security Risk Map&lt;/a&gt; - Map of the world's safest and riskiest data locations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cybermap.kaspersky.com/stats" rel="noopener nofollow" target="_blank"&gt;Kaspersky Stats&lt;/a&gt; - Shows detailed threats per second from a variety of categories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://apt.securelist.com" rel="noopener nofollow" target="_blank"&gt;Kaspersky LogBook&lt;/a&gt; - Historic Threat Time Line&lt;/li&gt;
&lt;li&gt;See also

&lt;ul&gt;
&lt;li&gt;Every AV-provider and wannabe security company has a matrix-style cyber map nowadays, here are some less-spectacular ones, which didn't make it onto the list: &lt;a href="https://www.fireeye.com/cyber-map/threat-map.html" rel="noopener nofollow" target="_blank"&gt;Fire Eye&lt;/a&gt;, &lt;a href="https://threatmap.bitdefender.com" rel="noopener nofollow" target="_blank"&gt;BitDefender&lt;/a&gt;, &lt;a href="https://www.virusradar.com" rel="noopener nofollow" target="_blank"&gt;ESET&lt;/a&gt;, &lt;a href="https://map.lookingglasscyber.com" rel="noopener nofollow" target="_blank"&gt;Looking Glass Cyber Map&lt;/a&gt;, &lt;a href="https://www.digitalattackmap.com" rel="noopener nofollow" target="_blank"&gt;Digital Attack Map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/hrbrmstr/pewpew" rel="noopener nofollow" target="_blank"&gt;pewpew&lt;/a&gt; is a sweet web component, that you can use to build your own threat map (with sound effects!)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Info Sec - Databases, APIs, References&lt;/h2&gt;

&lt;p&gt;Want to build your own live data visualization? The below data sources may be of help&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://reports.exodus-privacy.eu.org/en/trackers/stats" rel="noopener nofollow" target="_blank"&gt;Exodus&lt;/a&gt; - Trackers in Android Apps&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.exploit-db.com" rel="noopener nofollow" target="_blank"&gt;Exploit Database&lt;/a&gt; - A database or Current software vulnerabilities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://urlscan.io" rel="noopener nofollow" target="_blank"&gt;URLScan&lt;/a&gt; - Service scanning for malicious domains, with historical results&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.dehashed.com/breach" rel="noopener nofollow" target="_blank"&gt;Dehashed&lt;/a&gt; - Data Breaches and Credentials&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.virustotal.com/v3.0/reference" rel="noopener nofollow" target="_blank"&gt;VirusTotal&lt;/a&gt; - Detailed virus scans of software&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.abuseipdb.com" rel="noopener nofollow" target="_blank"&gt;Abuse IP DB&lt;/a&gt; - Database of IPs reported for abuse&lt;/li&gt;
&lt;li&gt;&lt;a href="https://snusbase.com" rel="noopener nofollow" target="_blank"&gt;SnusBase&lt;/a&gt; - Long standing database hosting breached data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openphish.com" rel="noopener nofollow" target="_blank"&gt;OpenPhish&lt;/a&gt; - A feed of current phishing endpoints&lt;/li&gt;
&lt;li&gt;&lt;a href="http://hashtoolkit.com" rel="noopener nofollow" target="_blank"&gt;HashToolkit&lt;/a&gt; - Database of 'cracked' hashes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danielmiessler/SecLists" rel="noopener nofollow" target="_blank"&gt;SecLists&lt;/a&gt; - Starter list of leaked databases, passwords, usernames etc (Great for programming)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ssllabs.com/ssl-pulse/" rel="noopener nofollow" target="_blank"&gt;Qualys SSL Pulse&lt;/a&gt; - A continuous and global dashboard for monitoring the quality of SSL / TLS support over time across 150,000 SSL- and TLS-enabled websites, based on Alexa‚Äôs list of the most popular sites in the world&lt;/li&gt;
&lt;li&gt;&lt;a href="https://check.torproject.org/torbulkexitlist" rel="noopener nofollow" target="_blank"&gt;Tor Bulk Exit List&lt;/a&gt; - List of all exit nodes (IP) in use on the Tor network&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mempool.space/api" rel="noopener nofollow" target="_blank"&gt;Mempool API&lt;/a&gt; - API for Bitcoin addresses, blocks, feed, memory, transactions and a real-time websocket feed&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Info Sec - Data Research &amp;amp; Results&lt;/h2&gt;

&lt;p&gt;A collection of interesting studies that have collected, analysed and presented findings using internet data&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ant.isi.edu/datasets" rel="noopener nofollow" target="_blank"&gt;Internet Census Data&lt;/a&gt; - Includes data on address space allocation, traffic, DNS, service enumeration, internet outages and other internet topology data&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webtransparency.cs.princeton.edu/webcensus/#data" rel="noopener nofollow" target="_blank"&gt;Web Tracking Data&lt;/a&gt; by Princeton University - This is the largest and most detailed analysis of online tracking to date, and measures both stateful (cookie-based) and stateless (fingerprinting-based) tracking. The crawls were made with &lt;a href="https://github.com/mozilla/OpenWPM" rel="noopener nofollow" target="_blank"&gt;OpenWPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eff.org/files/2019/06/11/whyb_2019_report.pdf" rel="noopener nofollow" target="_blank"&gt;Who has your Back?&lt;/a&gt; by EFF - Anual report assessing how companies handle personal data

&lt;ul&gt;
&lt;li&gt;Historic Reports: &lt;a href="https://www.eff.org/files/who-has-your-back-2012_0.pdf" rel="noopener nofollow" target="_blank"&gt;2012&lt;/a&gt; | &lt;a href="https://www.eff.org/sites/default/files/who-has-your-back-2013-report-20130513.pdf" rel="noopener nofollow" target="_blank"&gt;2013&lt;/a&gt; | &lt;a href="https://www.eff.org/files/2014/05/15/who-has-your-back-2014-govt-data-requests.pdf" rel="noopener nofollow" target="_blank"&gt;2014&lt;/a&gt; | &lt;a href="https://www.eff.org/files/2015/06/18/who_has_your_back_2015_protecting_your_data_from_government_requests_20150618.pdf" rel="noopener nofollow" target="_blank"&gt;2015&lt;/a&gt; | &lt;a href="https://www.eff.org/files/2016/05/04/who-has-your-back-2016.pdf" rel="noopener nofollow" target="_blank"&gt;2016&lt;/a&gt; | &lt;a href="https://www.eff.org/files/2017/07/08/whohasyourback_2017.pdf" rel="noopener nofollow" target="_blank"&gt;2017&lt;/a&gt; | &lt;a href="https://www.eff.org/files/2018/05/31/whyb_2018_report.pdf" rel="noopener nofollow" target="_blank"&gt;2018&lt;/a&gt; | &lt;a href="https://www.eff.org/files/2019/06/11/whyb_2019_report.pdf" rel="noopener nofollow" target="_blank"&gt;2019&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://webtransparency.cs.princeton.edu/no_boundaries/session_replay_sites.html" rel="noopener nofollow" target="_blank"&gt;Lists of Websites Abusing Session Replay&lt;/a&gt; - Third-party sesssion replay scripts, record all your acions and allow them to be watched by a human. This list of websites include this

&lt;ul&gt;
&lt;li&gt;See also, the accompaniing &lt;a href="https://freedom-to-tinker.com/2017/11/15/no-boundaries-exfiltration-of-personal-data-by-session-replay-scripts/" rel="noopener nofollow" target="_blank"&gt;blog post&lt;/a&gt; and the &lt;a href="https://webtap.princeton.edu/" rel="noopener nofollow" target="_blank"&gt;WebTAP&lt;/a&gt; project&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://databank.illinois.edu/datasets/IDB-9213932" rel="noopener nofollow" target="_blank"&gt;Sensor Access Data&lt;/a&gt; - A Crawl of the Mobile Web Measuring Sensor Accesses, Illinois&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.canalys.com/newsroom" rel="noopener nofollow" target="_blank"&gt;Canalys Newsroom&lt;/a&gt; - Research Studies on Security, Privacy, Technology and Finance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web-assets.domo.com/blog/wp-content/uploads/2019/07/data-never-sleeps-7-896kb.jpg" rel="noopener nofollow" target="_blank"&gt;Data Never Sleeps&lt;/a&gt; - An infographic visualizing how much data is generated every minute (2019)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://external-preview.redd.it/KU3pS4LIhLWqeYSluiYyJMhLQW1fEjTdh8lEKL2jafc.png?auto=webp&amp;amp;s=fe015c1e32731bc61cd0d57313f5a261173846ca" rel="noopener nofollow" target="_blank"&gt;What they Know about You&lt;/a&gt; - An Infographic showing what information are Giant Tech Companies collecting from you (2020)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Finally- Here's a selection of pretty screenshots...&lt;/p&gt;

&lt;p&gt;&lt;a href="https://i.ibb.co/HqJ77Mf/Fun-with-live-data-banner.png"&gt;&lt;img src="https://i.ibb.co/HqJ77Mf/Fun-with-live-data-banner.png" alt="A selection of pretty screenshots"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[REFERENCE] InfoSec Abbreviations üî°</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Tue, 22 Sep 2020 16:36:36 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18536/reference-infosec-abbreviations</link>
      <guid>https://notes.aliciasykes.com/18536/reference-infosec-abbreviations</guid>
      <description>&lt;p&gt;&lt;p&gt;Background: While getting started in information security, I kept coming across acronyms I wasn't familiar with/ had forgotten. So I have started compiling a list, for future reference. I will keep this list updated, as I go along üòö&lt;/p&gt;

&lt;h3&gt;Common InfoSec Abbreviations&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AES&lt;/strong&gt;: Advanced Encryption Standard&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C2&lt;/strong&gt;: Command &amp;amp; Control (sometimes CC)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CBSP&lt;/strong&gt;: Cloud-Based Security Providers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CSP&lt;/strong&gt;: Content Security Policy&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CORS&lt;/strong&gt;: Cross-Origin Resource Sharing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CVSS&lt;/strong&gt;: Common Vulnerability Scoring System&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DAST&lt;/strong&gt;: Dynamic Application Security Testing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DLP&lt;/strong&gt;: Data-loss Prevention&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DDoS&lt;/strong&gt;: Distributed Denial of Service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DES&lt;/strong&gt;: Data Encryption Standard&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DOS&lt;/strong&gt;: Dinial of Service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DSA&lt;/strong&gt;: Digital Signature Algorithm&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EDR&lt;/strong&gt;: Endpoint Detection &amp;amp; Response&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IPSec&lt;/strong&gt;: Internet Protocol Security&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;IIoT&lt;/strong&gt;: (Industrial) Internet of Things&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MFA&lt;/strong&gt;: Multi-Factor Authentication&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PAM&lt;/strong&gt;: Privilege Access Management&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PIM&lt;/strong&gt;: Privilege Identity Management&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RAT&lt;/strong&gt;: Remote Adimistration Tool&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SAST&lt;/strong&gt;: Static Application Security Testing&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SPF&lt;/strong&gt;: Sender Policy Framework&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SSE&lt;/strong&gt;: Server-Side Encryption&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;STS&lt;/strong&gt;: Security Token Service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TLS&lt;/strong&gt;: Transport Layer Security&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WAF&lt;/strong&gt;: Web Application Firewall&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WAP&lt;/strong&gt;: Web Application Protection&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;XSS&lt;/strong&gt;: Cross-Site Scripting&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Of course, there are other, much more complete glossaries, but they can get overwhelming- these are the basics, and my personal resource. For some much more complete lists, see:&lt;/p&gt;

&lt;p&gt;ü°Ü A lot of acronyms: via &lt;a href="https://www.infosecmatter.com/infosec-glossary/" rel="noopener nofollow" target="_blank"&gt;InfoSec Matter&lt;/a&gt;&lt;br&gt;
ü°Ü Glossary of Terms: via &lt;a href="https://niccs.us-cert.gov/about-niccs/cybersecurity-glossary" rel="noopener nofollow" target="_blank"&gt;NICCS&lt;/a&gt; &lt;em&gt;(National Initiative for Cybersecurity Careers and Studies in the US)&lt;/em&gt;&lt;/p&gt;

&lt;style&gt;.post-body ul{border:1px solid #ffffff54;border-radius:4px;padding:0.5rem 1rem;width:max-content;background:#ffffff0f;list-style:inside circle}&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[REFERENCE] Wireshark Display Filters üíª</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 20 Sep 2020 14:20:21 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18452/reference-wireshark-display-filters</link>
      <guid>https://notes.aliciasykes.com/18452/reference-wireshark-display-filters</guid>
      <description>&lt;p&gt;&lt;blockquote&gt;
&lt;p&gt;Wirechark has some comprehensive packet filtering capabilities, and display filters let you utilize these multi-pass packet processing capabilities. This goes far beyond just filtering based on IP, port and protocol.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Essential Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Getting Started Guide: &lt;a href="https://www.maketecheasier.com/use-display-filters-in-wireshark/" rel="noopener nofollow" target="_blank"&gt;https://www.maketecheasier.com/use-display-filters-in-wireshark/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Basic Filter Syntax: &lt;a href="https://www.wireshark.org/docs/wsug_html_chunked/ChWorkBuildDisplayFilterSection.html" rel="noopener nofollow" target="_blank"&gt;https://www.wireshark.org/docs/wsug_html_chunked/ChWorkBuildDisplayFilterSection.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Full Display Filter Docs: &lt;a href="https://www.wireshark.org/docs/dfref/" rel="noopener nofollow" target="_blank"&gt;https://www.wireshark.org/docs/dfref/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Full Protocol References: &lt;a href="https://wiki.wireshark.org/ProtocolReference" rel="noopener nofollow" target="_blank"&gt;https://wiki.wireshark.org/ProtocolReference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can debug filters using the &lt;a href="https://www.wireshark.org/docs/man-pages/dftest.html" rel="noopener nofollow" target="_blank"&gt;dftest&lt;/a&gt; command&lt;/p&gt;

&lt;h2&gt;Cheat Sheet&lt;/h2&gt;

&lt;p&gt;I created this list from the Wiki, to be a Ctrl + F personal reference to common display filters&lt;/p&gt;

&lt;h3&gt;Operators&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eq&lt;/code&gt; or &lt;code class="prettyprint"&gt;==&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ne&lt;/code&gt; or &lt;code class="prettyprint"&gt;!=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;gt&lt;/code&gt; or &lt;code class="prettyprint"&gt;&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;lt&lt;/code&gt; or &lt;code class="prettyprint"&gt;&amp;lt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ge&lt;/code&gt; or &lt;code class="prettyprint"&gt;&amp;gt;=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;le&lt;/code&gt; or &lt;code class="prettyprint"&gt;&amp;lt;=&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Logic&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;and&lt;/code&gt; or &lt;code class="prettyprint"&gt;&amp;amp;&amp;amp;&lt;/code&gt; - Logical AND&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;or&lt;/code&gt; or &lt;code class="prettyprint"&gt;||&lt;/code&gt; - Logical OR&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;xor&lt;/code&gt; or &lt;code class="prettyprint"&gt;^^&lt;/code&gt; - Logical XOR&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;not&lt;/code&gt; or &lt;code class="prettyprint"&gt;!&lt;/code&gt; - Logical NOT&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;[n] [‚Ä¶]&lt;/code&gt; - Sub-String Operator&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Ethernet&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.addr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.dst&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.ig&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.lg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.multicast&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.src&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.trailer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth.type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;IEEE 802.1Q&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vlan.cfi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vlan.etype&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vlan.id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vlan.len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vlan.priority&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;`vlan.trailer&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;IPv4&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.addr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.checksum_bad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.checksum_good&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.checksum&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.dsfield.ce&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.dsfield.dscp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.dsfield.ect&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.dsfield&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.dst_host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.dst&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.flags.df&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.flags.mf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.flags.rb&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.flags&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.frag_offset&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragment.error&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragment.multipletails&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragment.overlap.conflict&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragment.overlap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragment.toolongfragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.fragments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.hdr_len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.proto&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.reassembled_in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.src_host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.src&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.tos.cost&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.tos.delay&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.tos.precedence&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.tos.reliability&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.tos.throughput&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.tos&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.ttl&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.version&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;IPv6&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.addr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.class&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.dst_host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.dst_opt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.dst&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.flow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.error&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.more&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.multipletails&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.offset&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.overlap.conflict&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.overlap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment.toolongfragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.fragments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.hlim&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.hop_opt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.mipv6_home_address&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.mipv6_length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.mipv6_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.nxt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.opt.pad1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.opt.padn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.plen&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.reassembled_in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.routing_hdr.addr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.routing_hdr.left&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.routing_hdr.type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.routing_hdr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.src_host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.src&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ipv6.version&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ARP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.dst.hw_mac&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.dst.proto_ipv4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.hw.size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.hw.type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.opcode&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.proto.size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.proto.type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.src.hw_mac&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;arp.src.proto_ipv4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;TCP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.ack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.checksum_bad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.checksum_good&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.checksum&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.continuation_to&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.dstport&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.ack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.cwr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.ecn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.fin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.reset&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.syn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags.urg&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.hdr_len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.nxtseq&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.cc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.ccecho&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.ccnew&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.echo_reply&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.echo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.md5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.mss_val&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.mss&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.qs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.sack_le&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.sack_perm&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.sack_re&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.sack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.time_stamp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.wscale_val&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options.wscale&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.options&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.pdu.last_frame&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.pdu.size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.pdu.time&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.port&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.reassembled_in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segment.error&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segment.multipletails&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segment.overlap.conflict&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segment.overlap&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segment.toolongfragment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segment&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.segments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.seq&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.srcport&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.time_delta&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.time_relative&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.urgent_pointer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.window_size&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;UDP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.checksum_bad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.checksum_good&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.checksum&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.dstport&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.port&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;udp.srcport&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Frame Relay&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.becn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.chdlctype&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.f&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.ftype&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.n_r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.n_s&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.s_ftype&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.u_modifier_cmd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control.u_modifier_resp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.cr&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.dc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.de&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.dlci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.dlcore_control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.ea&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.fecn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.lower_dlci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.nlpid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.second_dlci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.snap.oui&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.snap.pid&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.snaptype&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.third_dlci&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;fr.upper_dlci&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ICMPv6&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.all_comp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.checksum_bad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.checksum&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.comp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.haad.ha_addrs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.identifier&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.cga&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.name_type.fqdn&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.name_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.name_x501&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.rsa.key_hash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option.type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.option&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.ra.cur_hop_limit&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.ra.reachable_time&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.ra.retrans_timer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.ra.router_lifetime&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.recursive_dns_serv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmpv6.type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;PPP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ppp.address&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ppp.control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ppp.direction&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ppp.protocol&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;RIP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.auth.passwd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.auth.type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.command&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.family&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.ip&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.metric&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.netmask&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.next_hop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.route_tag&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.routing_domain&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;rip.version&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;MPLS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.bottom&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.cw.control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.cw.res&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.exp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.label&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.oam.bip16&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.oam.defect_location&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.oam.defect_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.oam.frequency&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.oam.function_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.oam.ttsi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;mpls.ttl&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;BGP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.aggregator_as&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.aggregator_origin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.as_path&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.cluster_identifier&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.cluster_list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.community_as&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.community_value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.local_pref&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.mp_nlri_tnl_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.mp_reach_nlri_ipv4_prefix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.mp_unreach_nlri_ipv4_prefix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.multi_exit_disc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.next_hop&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.nlri_prefix&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.origin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.originator_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;bgp.withdrawn_prefix&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ICMP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.checksum_bad&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.checksum&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.ident&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.mtu&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.redir_gw&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.seq&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;icmp.type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;DTP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;dtp.neighbor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;dtp.tlv_len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;dtp.tlv_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;dtp.version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.neighbor&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;VTP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.conf_rev_num&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.followers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.md5_digest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.md_len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.md&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.seq_num&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.start_value&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.upd_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.upd_ts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.802_10_index&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.isl_vlan_id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.mtu_size&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.status.vlan_susp&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.tlv_len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.tlv_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.vlan_name_len&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.vlan_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;vtp.vlan_info.vlan_type&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;HTTP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.accept_encoding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.accept_language&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.accept&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.authbasic&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.authorization&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.cache_control&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.connection&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.content_encoding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.content_length&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.content_type&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.cookie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.date&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.last_modified&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.location&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.notification&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.proxy_authenticate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.proxy_authorization&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.proxy_connect_host&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.proxy_connect_port&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.referer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.request.method&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.request.uri&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.request.version&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.request&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.response.code&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.response&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.server&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.set_cookie&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.transfer_encoding&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.user_agent&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.www_authenticate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;http.x_forwarded_for&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Example Usage&lt;/h2&gt;

&lt;p&gt;(Adapted from Chris Greer's Blog Post)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.addr == 10.0.0.1&lt;/code&gt;  - &lt;em&gt;Sets a filter for any packet with 10.0.0.1, as either the source or dest&lt;/em&gt;&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.addr==10.0.0.1  &amp;amp;&amp;amp; ip.addr==10.0.0.2&lt;/code&gt; - &lt;em&gt;sets a conversation filter between the two defined IP addresses&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.time_delta &amp;gt; .250&lt;/code&gt; - &lt;em&gt;sets a filter to display all tcp packets that have a delta time of greater than 250mSec in the context of their stream&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.port==4000&lt;/code&gt; - &lt;em&gt;Sets a filter for any TCP packet with 4000 as a source or dest port&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.flags == 0x012&lt;/code&gt; - &lt;em&gt;Displays all TCP SYN/ACK packets - shows the connections that had a positive response. Related to this is tcp.flags.syn==1&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;ip.addr == 10.0.0.0/24&lt;/code&gt; - &lt;em&gt;Shows packets to and from any address in the 10.0.0.0/24 space&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;frame contains traffic&lt;/code&gt; - &lt;em&gt;Displays all packets that contain the word ‚Äòtraffic‚Äô. Excellent when searching on a specific string or user ID&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;!(arp or icmp or stp)&lt;/code&gt; - &lt;em&gt;Masks out arp, icmp, stp, or whatever other protocols may be background noise. Allowing you to focus on the traffic of interest&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;eth[0x47:2] == 01:80&lt;/code&gt; - &lt;em&gt;This is an example of an offset filter. It sets a filter for the HEX values of 0x01 and 0x80 specifically at the offset location of 0x47&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;tcp.analysis.flags &amp;amp;&amp;amp; !tcp.analysis.window_update&lt;/code&gt; - &lt;em&gt;Displays all retransmissions, duplicate acks, zero windows, and more in the trace. Helps when tracking down slow application performance and packet loss. It will not include the window updates, since these aren't really important for me to see in most cases&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>My Top 50 Android Apps üì±</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Tue, 15 Sep 2020 19:32:33 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18336/my-top-50-android-apps</link>
      <guid>https://notes.aliciasykes.com/18336/my-top-50-android-apps</guid>
      <description>&lt;p&gt;&lt;style&gt;

img.banner-image {
    margin: 0 auto;
    width: 100%;
}

img[alt=F-Droid],
img[alt=Google-Play],
img[alt=GitHub],
img[alt=Git],
img[alt=Website] {
    width: 22px !important;
    display: inline !important;
    margin: 0 2px !important;
}

.post-body ul {
    margin-top: 0;
}

.post-body ul li a {
    font-weight: bold;
}

span.quick-note {
    font-size: 0.8rem;
    font-style: italic;
}
.post-body {margin-top: 1rem; }
p { margin-top: 0; }
h4 { margin-bottom: 0; }

&lt;/style&gt;

&lt;p&gt;&lt;img title="A selection of Android applications that I use often" class="banner-image" src="https://i.ibb.co/cc8WP4K/App-icons-banner-medium.png"&gt;&lt;/p&gt;

&lt;p&gt;These are all the Android applications that I use often, each app on this list serves a purpose and adds value to my day. The developers behind every one of these apps have done an amazing job, and for that, I am thankful. This in part is my motivation for writing this list&lt;/p&gt;

&lt;p&gt;This is, in no way a list of ultra-secure, privacy-respecting or fully FOSS apps. In fact, the very idea of having 50 apps on your device goes against the minimalist security principle, and increases attack surface. However, I do carefully manage permissions and connectivity features, blocking internet access for all apps that shouldn't need it&lt;/p&gt;

&lt;p&gt;&lt;span class="quick-note"&gt;Click the App Name to visit website, the GitHub icon to view source code, and the F-Droid/ Google Play icon to download APK&lt;/span&gt; üòä&lt;br&gt;
&lt;span class="quick-note"&gt;&lt;b&gt;Note&lt;/b&gt;: Any non-opensource apps are indicated with a red cross&lt;/span&gt; ‚ùå&lt;/p&gt;

&lt;h3&gt;Essentials:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getaegis.app/" rel="noopener nofollow" target="_blank"&gt;Aegis&lt;/a&gt; - 2-Factor Authentication Token Manager &lt;a href="https://f-droid.org/en/packages/com.beemdevelopment.aegis/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/beemdevelopment/Aegis"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.keepassdx.com/" rel="noopener nofollow" target="_blank"&gt;KeePassDX&lt;/a&gt; - Password Manager for KeePass files &lt;a href="https://f-droid.org/en/packages/com.kunzisoft.keepass.libre/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/Kunzisoft/KeePassDX"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://standardnotes.org/" rel="noopener nofollow" target="_blank"&gt;Standard Notes&lt;/a&gt; - Secure, Encrypted Cross-Platform Notes &lt;a href="https://f-droid.org/en/packages/com.standardnotes/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/standardnotes"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://k9mail.app/" rel="noopener nofollow" target="_blank"&gt;K-9 Mail&lt;/a&gt; - IMAP Mail Client with Multi-Account Support &lt;a href="https://f-droid.org/en/packages/com.fsck.k9/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/k9mail/k-9"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://protonmail.com/" rel="noopener nofollow" target="_blank"&gt;ProtonMail&lt;/a&gt; - Official Client for ProtonMail (PGP Encrypted Email) &lt;a href="https://play.google.com/store/apps/details?id=ch.protonmail.android"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/ProtonMail"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://simplelogin.io/" rel="noopener nofollow" target="_blank"&gt;SimpleLogin&lt;/a&gt; - PGP Encrypted Mail Forwarder for Multiple Aliases &lt;a href="https://f-droid.org/en/packages/io.simplelogin.android.fdroid/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/simple-login"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.etesync.com/" rel="noopener nofollow" target="_blank"&gt;EteSync&lt;/a&gt; - Secure, Encrypted Sync Engine for Calendar, Contacts and Tasks &lt;a href="https://f-droid.org/en/packages/com.etesync.syncadapter/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/etesync"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.xbrowsersync.org/" rel="noopener nofollow" target="_blank"&gt;xBrowserSync&lt;/a&gt; - Secure Bookmark Storage and Browser Syncing  &lt;a href="https://f-droid.org/en/packages/com.xBrowserSync.android/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/xbrowsersync"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.openkeychain.org/" rel="noopener nofollow" target="_blank"&gt;OpenKeychain&lt;/a&gt; - OpenPGP for encrypting files and communications &lt;a href="https://f-droid.org/en/packages/org.sufficientlysecure.keychain/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/open-keychain/open-keychain"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sovworks.com/eds/" rel="noopener nofollow" target="_blank"&gt;EDS Lite&lt;/a&gt; - Managing files in encrypted containers &lt;a href="https://f-droid.org/en/packages/com.sovworks.edslite/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/sovworks/edslite"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Networking:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://netguard.me/" rel="noopener nofollow" target="_blank"&gt;NetGuard&lt;/a&gt; - Firewall supporting per-app internet blocking and advanced rules &lt;a href="https://f-droid.org/en/packages/eu.faircode.netguard/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/M66B/NetGuard"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://guardianproject.info/apps/orbot/" rel="noopener nofollow" target="_blank"&gt;Orbot&lt;/a&gt; - Routes traffic via Tor network &lt;a href="https://f-droid.org/en/packages/org.torproject.android/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://gitweb.torproject.org/orbot.git"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mullvad.net/en/" rel="noopener nofollow" target="_blank"&gt;Mullvad&lt;/a&gt; - My VPN of choice &lt;a href="https://f-droid.org/en/packages/net.mullvad.mullvadvpn/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/mullvad"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.wireguard.com/" rel="noopener nofollow" target="_blank"&gt;WireGuard&lt;/a&gt; - VPN for connecting to private networks &lt;a href="https://f-droid.org/en/packages/com.wireguard.android/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://git.zx2c4.com/wireguard-android/"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.eakteam.networkmanager.pro" rel="noopener nofollow" target="_blank"&gt;Network Manager Pro&lt;/a&gt; - Complete suit of Network tools &lt;a href="https://play.google.com/store/apps/details?id=com.eakteam.networkmanager.pro"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Communication&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://signal.org/" rel="noopener nofollow" target="_blank"&gt;Signal&lt;/a&gt; - E2E Encrypted Messaging, (not anonymous, as it's linked to mobile number) &lt;a href="https://play.google.com/store/apps/details?id=org.thoughtcrime.securesms"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/signalapp"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://briarproject.org/" rel="noopener nofollow" target="_blank"&gt;Briar&lt;/a&gt; - Extremity secure and robust communication which can also work locally (via WiFi or Bluetooth) &lt;a href="https://f-droid.org/en/packages/org.briarproject.briar.android/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://code.briarproject.org/briar/briar"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://element.io/" rel="noopener nofollow" target="_blank"&gt;Element&lt;/a&gt; - Matrix Client (Matrix is a privacy-respecting P2P encrypted multi-user chat platform) &lt;a href="https://f-droid.org/en/packages/im.vector.app/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/vector-im"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Productivity Basics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://support.mozilla.org/en-US/kb/focus" rel="noopener nofollow" target="_blank"&gt;FireFox Focus&lt;/a&gt; - Fast &amp;amp; Private browser, with no persistent history and automatic tracker blocking &lt;a href="https://f-droid.org/en/packages/org.mozilla.klar/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/mozilla-mobile/focus-android"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/mobile/" rel="noopener nofollow" target="_blank"&gt;GitHub&lt;/a&gt; - Official GitHub client, for managing issues, pull-requests and browsing repositories &lt;a href="https://play.google.com/store/apps/details?id=com.github.android"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.eledev.digital/work/hour-blocks" rel="noopener nofollow" target="_blank"&gt;Hour Blocks&lt;/a&gt; - Simple hour-by-hour day planner, with calendar support &lt;a href="https://play.google.com/store/apps/details?id=com.jtsaeed.neon"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://opencamera.org.uk/" rel="noopener nofollow" target="_blank"&gt;Open Camera&lt;/a&gt; - Full-featured, privacy-respecting camera app with good feature support &lt;a href="https://f-droid.org/en/packages/net.sourceforge.opencamera/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://sourceforge.net/p/opencamera/code/ci/master/tree/"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://osmand.net/" rel="noopener nofollow" target="_blank"&gt;OsmAnd~ Maps&lt;/a&gt; - Maps with offline support, public transport directions and turn-by-turn navigation &lt;a href="https://f-droid.org/en/packages/net.osmand.plus/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/osmandapp/Osmand"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simplemobiletools.com/calendar/" rel="noopener nofollow" target="_blank"&gt;Simple Calendar&lt;/a&gt; - Highly customizable, privacy-respecting, offline, easy calendar app &lt;a href="https://f-droid.org/en/packages/com.simplemobiletools.calendar.pro/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/SimpleMobileTools/Simple-Calendar"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simplemobiletools.com/" rel="noopener nofollow" target="_blank"&gt;Simple Calculator&lt;/a&gt; - Just a Calculator app &lt;a href="https://f-droid.org/en/packages/com.simplemobiletools.calculator/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/SimpleMobileTools/Simple-Calculator"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simplemobiletools.com/contacts/" rel="noopener nofollow" target="_blank"&gt;Simple Contacts&lt;/a&gt; - Privacy-respecting contacts manager &lt;a href="https://f-droid.org/en/packages/com.simplemobiletools.contacts.pro/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/SimpleMobileTools/Simple-Contacts"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.simplemobiletools.com/" rel="noopener nofollow" target="_blank"&gt;Simple Dialer&lt;/a&gt; - Privacy-respecting cellular phone application &lt;a href="https://f-droid.org/en/packages/com.simplemobiletools.dialer/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/SimpleMobileTools/Simple-Dialer"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://tasks.org/" rel="noopener nofollow" target="_blank"&gt;Tasks&lt;/a&gt; - Secure Todo List App with CalDav Sync Capabilities &lt;a href="https://f-droid.org/en/packages/org.tasks/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/tasks/tasks"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=wangdaye.com.geometricweather" rel="noopener nofollow" target="_blank"&gt;Geometric Weather&lt;/a&gt; - Simple weather app, with clean UI, 15-day forecast and detailed outlook &lt;a href="https://play.google.com/store/apps/details?id=wangdaye.com.geometricweather"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/WangDaYeeeeee/GeometricWeather"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.thetileapp.com/en-us/how-it-works" rel="noopener nofollow" target="_blank"&gt;Tile&lt;/a&gt; - Companion app for Tile Bluetooth Finders (useful for finding keys, wallet, phone, TV remote etc) &lt;a href="https://play.google.com/store/apps/details?id=com.thetileapp.tile"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.realvnc.com/en/" rel="noopener nofollow" target="_blank"&gt;VNC Viewer&lt;/a&gt; - Virtual remote desktop app, to access and control PC, Server or other device &lt;a href="https://play.google.com/store/apps/details?id=com.realvnc.viewer.android"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youversion.com/" rel="noopener nofollow" target="_blank"&gt;Bible&lt;/a&gt; - An offline Bible app, with audio and daily plans &lt;a href="https://play.google.com/store/apps/details?id=com.sirma.mobile.bible.android"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/brarcher/loyalty-card-locker" rel="noopener nofollow" target="_blank"&gt;Loyalty Card Keychain&lt;/a&gt; - Securely stores and displays store loyalty cards, with good protocol support  &lt;a href="https://f-droid.org/en/packages/protect.card_locker/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/brarcher/loyalty-card-locker"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Utilities&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adaway.org/" rel="noopener nofollow" target="_blank"&gt;AdAway&lt;/a&gt; - Ad and tracker blocker that uses hosts file (requires root)  &lt;a href="https://f-droid.org/en/packages/org.adaway/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/AdAway/AdAway"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://f-droid.org/en/packages/superfreeze.tool.android" rel="noopener nofollow" target="_blank"&gt;SuperFreezZ&lt;/a&gt; -  Entirely freeze all background activities on a per-app basis &lt;a href="https://f-droid.org/en/packages/superfreeze.tool.android"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://gitlab.com/SuperFreezZ/SuperFreezZ"&gt;&lt;img src="https://i.ibb.co/1z1PPKK/Git.png" alt="Git"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://f-droid.org/en/packages/eu.faircode.xlua/" rel="noopener nofollow" target="_blank"&gt;XPrivacyLua&lt;/a&gt; -  Mocks app permissions fake data (solving the issues caused by revoking permissions) &lt;a href="https://f-droid.org/en/packages/eu.faircode.xlua/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/M66B/XPrivacyLua"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://muntashirakon.github.io/AppManager/" rel="noopener nofollow" target="_blank"&gt;App Manager&lt;/a&gt; - Package manager &amp;amp; viewer, with useful privacy &amp;amp; security features &lt;a href="https://f-droid.org/en/packages/io.github.muntashirakon.AppManager/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/MuntashirAkon/AppManager"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://muntashirakon.github.io/AppManager/" rel="noopener nofollow" target="_blank"&gt;OAndBackupX&lt;/a&gt; - Backup apps and data, without the need for Google &lt;a href="https://f-droid.org/en/packages/com.machiav3lli.backup/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/machiav3lli/oandbackupx"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Fr4gorSoftware/SecScanQR" rel="noopener nofollow" target="_blank"&gt;SecScanQR&lt;/a&gt; - Fully-featured, privacy-respecting QR code &amp;amp; barcode scanner &amp;amp; generator &lt;a href="https://f-droid.org/en/packages/de.t_dankworth.secscanqr/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/Fr4gorSoftware/SecScanQR"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://island.oasisfeng.com/" rel="noopener nofollow" target="_blank"&gt;Island&lt;/a&gt; - Isolate and compartmentalize apps for privacy &lt;a href="https://play.google.com/store/apps/details?id=com.oasisfeng.island&amp;amp;hl=en_US"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/oasisfeng/island"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.glgjing.marvel" rel="noopener nofollow" target="_blank"&gt;Powerful Monitor&lt;/a&gt; - Fully-featured system monitor and RAM cleaner, no trackers &lt;a href="https://play.google.com/store/apps/details?id=com.glgjing.marvel"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://reports.exodus-privacy.eu.org/en/reports/" rel="noopener nofollow" target="_blank"&gt;Exodus&lt;/a&gt; - Shows which trackers each app has within it's APK &lt;a href="https://f-droid.org/en/packages/org.eu.exodus_privacy.exodusprivacy/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/Exodus-Privacy/exodus-android-app"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Home Control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://f-droid.org/en/packages/sterrenburg.github.flutterhole/" rel="noopener nofollow" target="_blank"&gt;FlutterHole&lt;/a&gt; - Easy control over local Pi Hole instance &lt;a href="https://f-droid.org/en/packages/sterrenburg.github.flutterhole/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/sterrenburg/flutterhole"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.home-assistant.io/" rel="noopener nofollow" target="_blank"&gt;Home Assistant&lt;/a&gt; - Control all smart home and IoT devices, via self-hosted HASS.io server &lt;a href="https://f-droid.org/en/packages/io.homeassistant.companion.android.minimal/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/home-assistant/android"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fing.com/products/fing-app" rel="noopener nofollow" target="_blank"&gt;Fing&lt;/a&gt; - Home Network Security &lt;a href="https://play.google.com/store/apps/details?id=com.overlook.android.fing"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pingtools.org/" rel="noopener nofollow" target="_blank"&gt;Ping Tools&lt;/a&gt; - Basic uptime monitor for your servers &lt;a href="https://play.google.com/store/apps/details?id=ua.com.streamsoft.pingtools"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Media&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.plex.tv/" rel="noopener nofollow" target="_blank"&gt;Plex&lt;/a&gt; - Stream media from home Plex Server &lt;a href="https://play.google.com/store/apps/details?id=com.plexapp.android"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/plexinc/"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pocketcasts.com/" rel="noopener nofollow" target="_blank"&gt;PocketCasts&lt;/a&gt; - Podcast Player with Advanced Listening Tools and OPML Support &lt;a href="https://play.google.com/store/apps/details?id=au.com.shiftyjelly.pocketcasts"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spotify.com/us/download/other/" rel="noopener nofollow" target="_blank"&gt;Spotify&lt;/a&gt; - Music Streaming and Downloads (Premium) &lt;a href="https://play.google.com/store/apps/details?id=com.spotify.music"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/spotify"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.y20k.org/transistor/" rel="noopener nofollow" target="_blank"&gt;Transistor&lt;/a&gt; - Internet Radio &lt;a href="https://f-droid.org/en/packages/org.y20k.transistor/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/y20k/transistor"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://newpipe.schabi.org/" rel="noopener nofollow" target="_blank"&gt;NewPipe&lt;/a&gt; - YouTube Player &lt;a href="https://f-droid.org/en/packages/org.schabi.newpipe/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/TeamNewPipe/NewPipe"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Misc:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://appsisle.com/project/developer-assistant/" rel="noopener nofollow" target="_blank"&gt;Developer Assistance&lt;/a&gt; - Powerful debugging app for Android development &lt;a href="https://play.google.com/store/apps/details?id=com.appsisle.developerassistant&amp;amp;hl=en_US"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/jwisniewski/android-developer-assistant"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/TimeShining/Android-Dev-Tools" rel="noopener nofollow" target="_blank"&gt;Dev Tools&lt;/a&gt; - Essential toolkit for Android development, including decompiling &lt;a href="https://play.google.com/store/apps/details?id=cn.trinea.android.developertools&amp;amp;hl=en_US"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; &lt;a href="https://github.com/TimeShining/Android-Dev-Tools"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://cloudmare.jtsalva.dev/" rel="noopener nofollow" target="_blank"&gt;CloudMare&lt;/a&gt; - CloudFlare Application Management &lt;a href="https://f-droid.org/en/packages/dev.jtsalva.cloudmare/"&gt;&lt;img src="https://i.ibb.co/dGM2xfJ/F-droid.png" alt="F-Droid"&gt;&lt;/a&gt; &lt;a href="https://github.com/jtsalva/cloudmare"&gt;&lt;img src="https://i.ibb.co/hWcSmVN/Github-logo.png" alt="GitHub"&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Device Customization&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.ss.launcher2" rel="noopener nofollow" target="_blank"&gt;Total Launcher&lt;/a&gt; - Highly Customizable Android Launcher &lt;a href="https://play.google.com/store/apps/details?id=com.ss.launcher2"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://help.kustom.rocks/" rel="noopener nofollow" target="_blank"&gt;KWGT&lt;/a&gt; - Advanced Widget Creator &lt;a href="https://play.google.com/store/apps/details?id=org.kustom.widget"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt;  ‚ùå&lt;/li&gt;
&lt;li&gt;&lt;a href="https://llamalab.com/automate/" rel="noopener nofollow" target="_blank"&gt;Automate&lt;/a&gt; - Device Macros and Automation, with Home Assistant Compatibility &lt;a href="https://play.google.com/store/apps/details?id=com.llamalab.automate"&gt;&lt;img src="https://i.ibb.co/ySbmhkY/Google-play.png" alt="Google-Play"&gt;&lt;/a&gt; ‚ùå&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2&gt;Notes&lt;/h2&gt;

&lt;h4&gt;Exodus Privacy&lt;/h4&gt;

&lt;p&gt;&lt;a href="https://reports.exodus-privacy.eu.org/en/" rel="noopener nofollow" target="_blank"&gt;Œµxodus&lt;/a&gt; is an awesome service, I don't know how I managed before it came about. It's a privacy audit platform that scans Android APKs for links to known trackers, and generated up-to-date reports for most apps available through Google Play. You can either &lt;a href="https://reports.exodus-privacy.eu.org/en/reports/" rel="noopener nofollow" target="_blank"&gt;search an app though their website&lt;/a&gt;, or use the &lt;a href="https://f-droid.org/en/packages/org.eu.exodus_privacy.exodusprivacy/" rel="noopener nofollow" target="_blank"&gt;Exodus App&lt;/a&gt; that scans all installed apps, showing which trackers and permissions they include&lt;/p&gt;

&lt;h4&gt;NetGuard&lt;/h4&gt;

&lt;p&gt;I heavily rely on NetGuard, which I use to completely block internet access for all apps that don't absolutely require a network connection. For the remaining applications I control how and when they can connect, usually blocking any network access when the screen is off. An alternative to NetGuard, is &lt;a href="https://f-droid.org/en/packages/net.kollnig.missioncontrol.fdroid/" rel="noopener nofollow" target="_blank"&gt;TrackerControl&lt;/a&gt;, that allows the blocking of individual trackers on a per-app basis, however I use Pi Hole for blocking adds &amp;amp; trackers instead. &lt;/p&gt;

&lt;h4&gt;Faraday&lt;/h4&gt;

&lt;p&gt;Typically, when I'm not activity using my phone, I keep it in my Silent Pocket Faraday case, which has the added benefit of preserving battery life.&lt;/p&gt;

&lt;h4&gt;VPN&lt;/h4&gt;

&lt;p&gt;When I do connect, I VPN into my home network (I wish I could use WireGuard for this, but currently NetGuard only supports OpenVPN protocol). This provides some additional protection thanks to my firewall, and Pi-Hole is used to block ads and some trackers, it also allows secure access to my locally self-hosted services. All traffic on my home network is routed though Mullvad VPN. Even though this adds several extra hops to my phone's traffic, it doesn't seem to affect speed too much, and the above benefits make it worthwhile.&lt;/p&gt;

&lt;h4&gt;Orbot&lt;/h4&gt;

&lt;p&gt;Sometimes I use Orbot as backup service, but I do find this to be slower, and with a lot of extra CAPTCHAs. Another similar app, but with greater controls is &lt;a href="https://orwall.org/" rel="noopener nofollow" target="_blank"&gt;orWall&lt;/a&gt;, by &lt;a href="https://github.com/EthACKdotOrg" rel="noopener nofollow" target="_blank"&gt;@EthACKdotOrg&lt;/a&gt;, which is useful for forcing selected apps to use Tor.&lt;/p&gt;

&lt;h4&gt;Automate&lt;/h4&gt;

&lt;p&gt;Automate is a really handy app for running simple macros and device automation (however it is unfortunately not open source). One of the things I use it for, is turning off WiFi and other connectivity features when I'm not using them. I also have my phone enter airplane mode at nighttime, in order to not distract me (requires root). (&lt;a href="https://f-droid.org/en/packages/ryey.easer/" rel="noopener nofollow" target="_blank"&gt;Easer&lt;/a&gt; an &lt;a href="https://f-droid.org/en/packages/libretasks.app/" rel="noopener nofollow" target="_blank"&gt;LibreTasks&lt;/a&gt; are open source alternatives, but with less functionality)&lt;/p&gt;

&lt;h4&gt;Island&lt;/h4&gt;

&lt;p&gt;Island is a really useful sandbox environment, allowing you to clone selected apps and run them in an isolated box, preventing it from accessing your personal data, or device information, and it lets you freeze apps, preventing background tasks from running. It works by utilizing Androids Work Profile feature. It's certainly not fool-proof though, any security bugs in the Android system could lead to data leaks. It's currently not available on F-Droid, an alternative app is &lt;a href="https://f-droid.org/en/packages/net.typeblog.shelter/" rel="noopener nofollow" target="_blank"&gt;Shelter&lt;/a&gt;, built by &lt;a href="https://github.com/PeterCxy" rel="noopener nofollow" target="_blank"&gt;@PeterCxy&lt;/a&gt; although I have found it to be less stable.&lt;/p&gt;

&lt;h4&gt;Monitoring Apps&lt;/h4&gt;

&lt;p&gt;The more apps installed on a device, the larger the attack surface. 50 is probably too many. The average smart phone user has 100 apps installed on their device- that's defiantly too many. It's important to know what is running in the background, remove apps you no longer use often or that have invasive trackers. &lt;a href="https://muntashirakon.github.io/AppManager/" rel="noopener nofollow" target="_blank"&gt;App Manager&lt;/a&gt; is a really useful package manager, that makes uninstalling unneeded apps easy. &lt;a href="https://reports.exodus-privacy.eu.org/en/reports/" rel="noopener nofollow" target="_blank"&gt;Exodus&lt;/a&gt; is useful for finding out which trackers are included in each app.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;span class="quick-note"&gt;&lt;br&gt;
‚ùå&lt;strong&gt;The following apps are not fully open-source&lt;/strong&gt;, and depending on your threat model, you may wish to avoid them:&lt;br&gt;
Network Manager Pro, Hour Blocks, Tile, VNC Viewer, YouVision Bible, Fing, Ping Tools, PocketCasts, Spotify, Total Launcher, KWGT, Automate&lt;br&gt;
&lt;/span&gt;&lt;br&gt;
&lt;span class="quick-note"&gt;&lt;br&gt;
‚ö†Ô∏èThe following apps &lt;strong&gt;are&lt;/strong&gt; open source, but &lt;strong&gt;not available on F-Droid&lt;/strong&gt;, again, this may be a deal breaker for you:&lt;br&gt;
Island, ProtonMail, Signal, GitHub, Geometric Weather, Plex, Developer Assistant, Dev Tools&lt;br&gt;
&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[QUICK-TIP] Git Submodules</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 02 Sep 2020 12:35:37 +0000</pubDate>
      <link>https://notes.aliciasykes.com/17996/quick-tip-git-submodules</link>
      <guid>https://notes.aliciasykes.com/17996/quick-tip-git-submodules</guid>
      <description>&lt;p&gt;&lt;p&gt;In Git, a submodule is like a Git repository inside another Git repository. This can be useful for splitting work, or for including someone else's code within your project dynamically. &lt;/p&gt;

&lt;p&gt;As an example, see the &lt;a href="https://github.com/duckduckgo/Android/tree/develop/submodules" rel="noopener nofollow" target="_blank"&gt;DuckDuckGo Android App&lt;/a&gt; and the corresponding &lt;a href="https://github.com/duckduckgo/Android/blob/develop/.gitmodules" rel="noopener nofollow" target="_blank"&gt;.gitmodules&lt;/a&gt; file.&lt;/p&gt;

&lt;h3&gt;Quick Start&lt;/h3&gt;

&lt;p&gt;It's simple to add a submodule into your repository, with the following line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;git submodule add https://github.com/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt; &amp;lt;path/to/save/at&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will add a new file named &lt;code class="prettyprint"&gt;.gitmodules&lt;/code&gt; within your projects root, that included the path to the source repo, along with the destination of where within your project it should be mapped to.&lt;/p&gt;

&lt;p&gt;Note that to clone a repository along with it's sub modules, you must use the &lt;code class="prettyprint"&gt;--recursive&lt;/code&gt; option. Similarly, to update the code within the submodules, you will need to run &lt;code class="prettyprint"&gt;git submodule update --init --recursive&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, here (in my &lt;a href="https://github.com/Lissy93/dotfiles/blob/master/.gitmodules" rel="noopener nofollow" target="_blank"&gt;.gitmodules&lt;/a&gt;) I am adding the dotbot repo into the root of my dotfiles project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[submodule ".dotbot"]
    path = .dotbot
    url = https://github.com/anishathalye/dotbot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Problems with Submodules&lt;/h3&gt;

&lt;p&gt;It's worth nothing, that this may work well for simple use cases, but would not be practical at all for referencing multiple packages. Usually a dependency management system (such as Cargo, NPM, RubyGems, Go Modules etc.) is a better solution. &lt;/p&gt;

&lt;p&gt;Git doesn't automatically download submodules after clone (unless you use the &lt;code class="prettyprint"&gt;--recursive&lt;/code&gt; flag), so if this is required for the project to run, you'll need to either document this, or add something into your build script to grab the submodules. Same goes for updates- submodules will not be fetched with a git pull, so &lt;code class="prettyprint"&gt;git submodule update&lt;/code&gt; needs to be run. &lt;/p&gt;

&lt;p&gt;There are also the potential security and stability issues this could cause, if you do not manage the repo being included. All in all, submodules are awesome, but for only a very particular use case.&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Further Links&lt;/h3&gt;

&lt;p&gt;Example: &lt;a href="https://github.com/duckduckgo/Android/tree/develop/submodules" rel="noopener nofollow" target="_blank"&gt;https://github.com/duckduckgo/Android/tree/develop/submodules&lt;/a&gt;&lt;br&gt;
Git Documentation: &lt;a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" rel="noopener nofollow" target="_blank"&gt;https://git-scm.com/book/en/v2/Git-Tools-Submodules&lt;/a&gt;&lt;br&gt;
Git Module File Documentation: &lt;a href="https://www.git-scm.com/docs/gitmodules" rel="noopener nofollow" target="_blank"&gt;https://www.git-scm.com/docs/gitmodules&lt;/a&gt;&lt;br&gt;
Git Submodule Documentation: &lt;a href="http://www.git-scm.com/docs/git-submodule" rel="noopener nofollow" target="_blank"&gt;http://www.git-scm.com/docs/git-submodule&lt;/a&gt;&lt;br&gt;
GitModules File Documentation: &lt;a href="https://www.git-scm.com/docs/gitmodules" rel="noopener nofollow" target="_blank"&gt;https://www.git-scm.com/docs/gitmodules&lt;/a&gt;&lt;br&gt;
GitHub Modules: &lt;a href="https://github.blog/2016-02-01-working-with-submodules" rel="noopener nofollow" target="_blank"&gt;https://github.blog/2016-02-01-working-with-submodules&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to Digital Privacy &amp; Security üîê</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 13 Aug 2020 16:29:32 +0000</pubDate>
      <link>https://notes.aliciasykes.com/17371/introduction-to-digital-privacy-security</link>
      <guid>https://notes.aliciasykes.com/17371/introduction-to-digital-privacy-security</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;strong&gt;TLDR;&lt;/strong&gt; Privacy is a fundamental right, and essential to democracy, liberty, and freedom of speech. Our privacy is being abused by governments (with mass-surveillance), corporations (profiting from selling personal data), and cyber criminals (stealing our poorly-secured personal data and using it against us). Security is needed in order to keep your private data private, and good digital security is critical to stay protected from the growing risks associated with the war on data.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;What is Personal Data?&lt;/h2&gt;

&lt;p&gt;Personal data is any information that relates to an identified or identifiable living individual. Even data that has been de-identified or anonymized  can often still be used to re-identify a person, especially when combined with a secondary data set.&lt;/p&gt;

&lt;p&gt;This could be sensitive documents (such as medical records, bank statements, card numbers, etc), or user-generated content (messages, emails, photos, search history, home CCTV, etc) or apparently trivial metadata (such as mouse clicks, typing patterns, time spent on each web page, etc)&lt;/p&gt;

&lt;h2&gt;How is Data Collected?&lt;/h2&gt;

&lt;p&gt;One of the most common data collection methods is web tracking. This is when websites use cookies, device fingerprints, and other methods to identify you, and follow you around the web. It is often done for advertising, analytics, and personalization. When aggregated together, this data can paint a very detailed picture of who you are.&lt;/p&gt;

&lt;h2&gt;How is Data Stored?&lt;/h2&gt;

&lt;p&gt;Data that has been collected is typically stored in databases on a server. These servers are rarely owned by the companies managing them, &lt;a href="https://www.canalys.com/newsroom/global-cloud-market-Q3-2019" rel="noopener nofollow" target="_blank"&gt;56% of servers&lt;/a&gt; are owned by Amazon AWS, Google Cloud, and Microsoft Azure. If stored correctly the data will be encrypted, and authentication required to gain access. However that usually isn't the case, and large data leaks &lt;a href="https://selfkey.org/data-breaches-in-2019/" rel="noopener nofollow" target="_blank"&gt;occour almost dailey&lt;/a&gt;. As well as that data breaches occur, when an adversary compromises a database storing personal data. In fact, you've probably already been caught up in a data breach (check your email, at &lt;a href="https://haveibeenpwned.com" rel="noopener nofollow" target="_blank"&gt;have i been pwned&lt;/a&gt;)&lt;/p&gt;

&lt;h2&gt;What is Personal Data Used For?&lt;/h2&gt;

&lt;p&gt;Data is collected, stored and used by governments, law enforcement, corporations and sometimes criminals:&lt;/p&gt;

&lt;h3&gt;Government Mass Surveillance&lt;/h3&gt;

&lt;p&gt;Intelligence and law enforcement agencies need surveillance powers to tackle serious crime and terrorism. However, since the Snowden revelations, we now know that this surveillance is not targeted at those suspected of wrongdoing- but instead the entire population. All our digital interactions are being logged and tracked by our very own governments.&lt;/p&gt;

&lt;p&gt;Mass surveillance is a means of control and suppression, it takes away our inerrant freedoms and breeds conformity. When we know we are being watched, we subconsciously change your behavior. A society of surveillance is just 1 step away from a society of submission.&lt;/p&gt;

&lt;h3&gt;Corporations&lt;/h3&gt;

&lt;p&gt;On the internet the value of data is high. Companies all want to know exactly who you are and what you are doing. They collect data, store it, use it and sometimes sell it on.&lt;/p&gt;

&lt;p&gt;Everything that each of us does online leaves a trail of data. These traces make up a goldmine of information full of insights into people on a personal level as well as a valuable read on larger cultural, economic and political trends. Tech giants (such as Google, Facebook, Apple, Amazon, and Microsoft) are leveraging this, building billion-dollar businesses out of the data that are interactions with digital devices create. We, as users have no guarantees that what is being collected is being stored securely, we often have no way to know for sure that it is deleted when we request so, and we don't have access to what their AI systems have refered from our data.&lt;/p&gt;

&lt;p&gt;Our computers, phones, wearables, digital assistants and IoT have been turned into tracking bugs that are plugged into a vast corporate-owned surveillance network. Where we go, what we do, what we talk about, who we talk to, and who we see ‚Äì everything is recorded and, at some point, leveraged for value. They know us intimately, even the things that we hide from those closest to us. In our modern internet ecosystem, this kind of private surveillance is the norm.&lt;/p&gt;

&lt;h3&gt;Cybercriminals&lt;/h3&gt;

&lt;p&gt;Hackers and cybercriminals pose an ongoing and constantly evolving threat. With the ever-increasing amount of our personal data being collected and logged - we are more vulnerable to data breaches and identity fraud than ever before.&lt;/p&gt;

&lt;p&gt;In the same way, criminals will go to great lengths to use your data against you: either through holding it ransom, impersonating you, stealing money or just building up a profile on you and selling it on, to another criminal entity.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Why Data Privacy Matters&lt;/h2&gt;

&lt;h4&gt;Data Privacy and Freedom of Speech&lt;/h4&gt;

&lt;p&gt;Privacy is a fundamental right, and you shouldn't need to prove the necessity of fundamental right to anyone. As Edward Snowden said, "Arguing that you don't care about the right to privacy because you have nothing to hide is no different than saying you don't care about free speech because you have nothing to say". There are many scenarios in which privacy is crucial and desirable like intimate conversations, medical procedures, and voting. When we know we are being watched, our behavior changes, which in turn suppresses things like free speech.&lt;/p&gt;

&lt;h4&gt;Data Can Have Control Over You&lt;/h4&gt;

&lt;p&gt;Knowledge is power; Knowledge about you is power over you. Your information will be used to anticipate your actions and manipulate the way you shop, vote, and think. When you know you are being watched, you subconsciously change your behavior. Mass surveillance  is an effective, means of fostering compliance with social norms or with social orthodoxy. Without privacy, you might be afraid of being judged by others, even if you're not doing anything wrong. It can be a heavy burden constantly having to wonder how everything we do will be perceived by others.&lt;/p&gt;

&lt;h4&gt;Data Can Be Used Against You&lt;/h4&gt;

&lt;p&gt;Your personal information and private communications can be "cherry-picked" to paint a certain one-sided picture. It can make you look like a bad person, or criminal, even if you are not. Data often results in people not being judged fairly- standards differ between cultures, organisations, and generations. Since data records are permanent, behavior that is deemed acceptable today, may be held against you tomorrow. Further to this, even things we don't think are worth hiding today, may later be used against us in unexpected ways.&lt;/p&gt;

&lt;h4&gt;Data Collection Has No Respect For Boundaries&lt;/h4&gt;

&lt;p&gt;Data collection has no respect for social boundaries, you may wish to prevent some people (such as employers, family or former partners) from knowing certain things about you. Once you share personal data, even with a party you trust, it is then out of your control forever, and at risk of being hacked, leaked or sold. An attack on our privacy, also hurts the privacy of those we communicate with.&lt;/p&gt;

&lt;h4&gt;Data Discriminates&lt;/h4&gt;

&lt;p&gt;When different pieces of your data is aggregated together, it can create a very complete picture of who you are. This data profile, is being used to influence decisions made about you: from insurance premiums, job prospects, bank loan eligibility and license decisions. It can determine whether we are investigated by the government, searched at the airport, or blocked from certain services. Even what content you see on the internet is affected by our personal data. This typically has a bigger impact on minority groups, who are unfairly judged the most. Without having the ability to know or control what, how, why and when our data is being used, we loose a level of control. One of the hallmarks of freedom is having autonomy and control over our lives, and we can‚Äôt have that if so many important decisions about us are being made in the dark, without our awareness or participation.&lt;/p&gt;

&lt;h4&gt;The "I Have Nothing to Hide" Argument&lt;/h4&gt;

&lt;p&gt;Privacy isn‚Äôt about hiding information; privacy is about protecting information, and everyone has information that they‚Äôd like to protect. Even with nothing to hide, you still put blinds on your window, locks on your door, and passwords on your email account.- Nobody would want their search history, bank statements, photos, notes or messages to be publicly available to the world.&lt;/p&gt;

&lt;h4&gt;Data Privacy needs to be for Everyone&lt;/h4&gt;

&lt;p&gt;For online privacy to be effective, it needs to be adopted my the masses, and not just the few. By exercising your right to privacy, you make it easier for others, such as activists and journalists, to do so without sticking out.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;So What Should we Do?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Educate yourself about what's going on and why it matters&lt;/li&gt;
&lt;li&gt;Be aware of changes to policies, revelations, recent data breaches and related news&lt;/li&gt;
&lt;li&gt;Take steps to secure your online accounts and protect your devices&lt;/li&gt;
&lt;li&gt;Understand how to communicate privately, and how use the internet anonymously&lt;/li&gt;
&lt;li&gt;Use software and services that respect your privacy, and keep your data safe&lt;/li&gt;
&lt;li&gt;Support organisations that fight for your privacy and internet freedom&lt;/li&gt;
&lt;li&gt;Find a way to make your voice heard, and stand up for what you believe in&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Thanks for reading :)&lt;/p&gt;

&lt;p&gt;Recently I have been working on writing up a &lt;a href="https://github.com/Lissy93/personal-security-checklist/blob/master/README.md" rel="noopener nofollow" target="_blank"&gt;checklist of privacy and security tips&lt;/a&gt;, as well as a &lt;a href="https://github.com/Lissy93/personal-security-checklist/blob/master/5_Privacy_Respecting_Software.md" rel="noopener nofollow" target="_blank"&gt;list of privacy-respecting software&lt;/a&gt;. Both are hosted on GitHub, so that anyone can contribute to it: &lt;a href="https://github.com/Lissy93/personal-security-checklist" rel="noopener nofollow" target="_blank"&gt;https://github.com/Lissy93/personal-security-checklist&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[HOW-TO] Remove all node_modules folders üóëÔ∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 01 Aug 2020 20:27:57 +0000</pubDate>
      <link>https://notes.aliciasykes.com/16988/how-to-remove-all-node_modules-folders</link>
      <guid>https://notes.aliciasykes.com/16988/how-to-remove-all-node_modules-folders</guid>
      <description>&lt;p&gt;&lt;p&gt;Node Modules killing your hard drive space? Manually finding and removing is a pain, so here are some simple solutions&lt;/p&gt;

&lt;h3&gt;Option #1 - Natively&lt;/h3&gt;

&lt;p&gt;From your desired entry point, all you need to do, is run: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;find &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;-name&lt;/span&gt; &lt;span class="s1"&gt;'node_modules'&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; d &lt;span class="nt"&gt;-prune&lt;/span&gt; &lt;span class="nt"&gt;-print&lt;/span&gt; &lt;span class="nt"&gt;-exec&lt;/span&gt; &lt;span class="nb"&gt;rm&lt;/span&gt; &lt;span class="nt"&gt;-rf&lt;/span&gt; &lt;span class="s1"&gt;'{}'&lt;/span&gt; &lt;span class="se"&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;‚ö†Ô∏è &lt;em&gt;This will &lt;b&gt;delete&lt;/b&gt; all nested node_modules directories, and their contents&lt;/em&gt; ‚ö†Ô∏è&lt;/p&gt;

&lt;p&gt;If you'd first like to list of all &lt;code class="prettyprint"&gt;node_modules&lt;/code&gt; within your current directory, you can run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;find &lt;span class="nb"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;-name&lt;/span&gt; &lt;span class="s2"&gt;"node_modules"&lt;/span&gt; &lt;span class="nt"&gt;-type&lt;/span&gt; d &lt;span class="nt"&gt;-prune&lt;/span&gt; &lt;span class="nt"&gt;-print&lt;/span&gt; | xargs &lt;span class="nb"&gt;du&lt;/span&gt; &lt;span class="nt"&gt;-chs&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;This'll output the path, and total size of each occurrence of &lt;code class="prettyprint"&gt;node_modules&lt;/code&gt;, and finish of by showing to cumulative total size&lt;/em&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Option #2 - NPKill&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://npkill.js.org/" rel="noopener nofollow" target="_blank"&gt;NPKill&lt;/a&gt; is a simple, yet effective package that finds and removes all node_modules folders within your system.&lt;/p&gt;

&lt;p&gt;After installing (with &lt;code class="prettyprint"&gt;npm i -g npkill&lt;/code&gt;), just run &lt;code class="prettyprint"&gt;npkill&lt;/code&gt; to start the CLI. From there you will be able to see all node_modules directories, along with their size and other meta data. You can then choose to delete them one-by-one, or all instances within certain parameters.&lt;/p&gt;

&lt;div style="text-align: center;"&gt;
&lt;img src="https://npkill.js.org/img/start%20search.gif" alt="Gif: Searching for all node_modules" style="width: 47%; display: inline-block; border-radius: 10px; box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);"&gt;
&lt;img src="https://npkill.js.org/img/deleting.gif" alt="Gif: Deleting selected, or all node_modules" style="width: 47%; display: inline-block; border-radius: 10px; box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);"&gt;
&lt;/div&gt;

&lt;hr&gt;

&lt;h2&gt;Note for Windows users&lt;/h2&gt;

&lt;p&gt;The above options are for Unix systems (Linux/ MacOS), if you need to do this natively, try the following commands, (thanks to &lt;a href="https://winsmarts.com/delete-all-node-modules-folders-recursively-on-windows-edcc9a9c079e" rel="noopener nofollow" target="_blank"&gt;Sahil Malik&lt;/a&gt;). &lt;/p&gt;

&lt;p&gt;View which folders will be deleted:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FOR /d /r . %d in (node_modules) DO @IF EXIST "%d" echo %d"
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Initiate the Extermination:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;FOR /d /r . %d in (node_modules) DO @IF EXIST "%d" rm -rf "%d"
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;Done üòÄ&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>keep-mouse-movin.sh üñ±Ô∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 26 Jul 2020 15:41:12 +0000</pubDate>
      <link>https://notes.aliciasykes.com/16818/keep-mouse-movin-sh</link>
      <guid>https://notes.aliciasykes.com/16818/keep-mouse-movin-sh</guid>
      <description>&lt;p&gt;&lt;p&gt;Working remotley? Sick and tired of having to get out of bed every 20 minutes to move your mouse, to prevent Slack/ Skype/ Teams from showing your status as &lt;code class="prettyprint"&gt;Away&lt;/code&gt;? Well with a couple lines of bash, you can have your mouse pointer periodically move, ensureing your status will always remain &lt;code class="prettyprint"&gt;Active&lt;/code&gt;. Your boss will be none the wiser&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;# LENGTH is the amount of px the mouse will move&lt;/span&gt;
&lt;span class="c"&gt;# 0 = not moving at all, 1 = tiny movement, 100 = giant movement&lt;/span&gt;
&lt;span class="nv"&gt;LENGTH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;50

&lt;span class="c"&gt;# DELAY is the time period between movements, in seconds&lt;/span&gt;
&lt;span class="nv"&gt;DELAY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;5

&lt;span class="k"&gt;while &lt;/span&gt;&lt;span class="nb"&gt;true
  &lt;/span&gt;&lt;span class="k"&gt;do
    for &lt;/span&gt;ANGLE &lt;span class="k"&gt;in &lt;/span&gt;0 90 180 270
      &lt;span class="k"&gt;do
        &lt;/span&gt;xdotool mousemove_relative &lt;span class="nt"&gt;--polar&lt;/span&gt; &lt;span class="nv"&gt;$ANGLE&lt;/span&gt; &lt;span class="nv"&gt;$LENGTH&lt;/span&gt;
          &lt;span class="nb"&gt;sleep&lt;/span&gt; &lt;span class="nv"&gt;$DELAY&lt;/span&gt;
      &lt;span class="k"&gt;done
    done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The pointer will move around its current position on the screen (i.e where you last placed it). However, if you prefer it to move around the centre of the screen, just change &lt;code class="prettyprint"&gt;mousemove_relative&lt;/code&gt; to &lt;code class="prettyprint"&gt;mousemove&lt;/code&gt; in the &lt;code class="prettyprint"&gt;xdotool&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://media.giphy.com/media/Y0xzoLrs1bQAJWlhL7/giphy.gif" style="width: 180px; margin: 5px auto;"&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[HOW-TO] Compile &amp; Install Software on Arch üèóÔ∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sat, 25 Jul 2020 15:16:53 +0000</pubDate>
      <link>https://notes.aliciasykes.com/16801/how-to-compile-install-software-on-arch</link>
      <guid>https://notes.aliciasykes.com/16801/how-to-compile-install-software-on-arch</guid>
      <description>&lt;p&gt;&lt;p&gt;Quick reference of the common commands, to install packages on Arch Linux &lt;img src="https://emoji.gg/assets/emoji/4744_arch.png" style="display: inline; margin: 0; width: 22px;"&gt;&lt;/p&gt;

&lt;h3&gt;Option #1 - Pacman&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;If the app is availible through &lt;a href="https://aur.archlinux.org" rel="noopener nofollow" target="_blank"&gt;AUR&lt;/a&gt;, then you can simply use the &lt;a href="https://wiki.archlinux.org/index.php/pacman" rel="noopener nofollow" target="_blank"&gt;pacman&lt;/a&gt; package manager&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## Install&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;pacman &lt;span class="nt"&gt;-S&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)}&lt;/span&gt;

&lt;span class="c"&gt;## Get Details&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;pacman &lt;span class="nt"&gt;-Qi&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;## Remove&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;pacman &lt;span class="nt"&gt;-R&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Option #2 - Manually&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Using the &lt;a href="https://wiki.archlinux.org/index.php/Makepkg" rel="noopener nofollow" target="_blank"&gt;makepkg&lt;/a&gt; script to build the package from source&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## 1. Get the code (E.g. from AUR, GitHub)&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;wget https://aur.archlinux.org/packages/&lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;tar&lt;/span&gt; &lt;span class="nt"&gt;-xvzf&lt;/span&gt;  &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;.tar.gz
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;## 2. Compile the package&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;makepkg &lt;span class="nt"&gt;-s&lt;/span&gt;

&lt;span class="c"&gt;## 3. Install the app&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;sudo &lt;/span&gt;pacman &lt;span class="nt"&gt;-U&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;xz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Option #2 - from .deb&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;If only a .deb file is availible, you can convert it using &lt;a href="https://github.com/helixarch/debtap" rel="noopener nofollow" target="_blank"&gt;debtap&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;## 1. Get debtap (first time), and optionally create an alias&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone https://github.com/helixarch/debtap
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;alias &lt;/span&gt;&lt;span class="nv"&gt;debtap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'. .path/to/debtap'&lt;/span&gt;

&lt;span class="c"&gt;## 1. Download the .deb package you wish to install, e.g.&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;git clone &lt;span class="o"&gt;{&lt;/span&gt;url-to-package.git&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;package-name&lt;span class="o"&gt;}&lt;/span&gt;


&lt;span class="c"&gt;## 3. Convert .deb to Arch package&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;debtap packagetoconvert.deb

&lt;span class="c"&gt;## 4. Install the converted package to system&lt;/span&gt;
&lt;span class="nv"&gt;$ &lt;/span&gt;debtap &lt;span class="nt"&gt;-U&lt;/span&gt; &lt;span class="k"&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;h3&gt;Usefull Info:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;AUR Listings: &lt;a href="https://aur.archlinux.org/" rel="noopener nofollow" target="_blank"&gt;https://aur.archlinux.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Building Docs: &lt;a href="https://wiki.archlinux.org/index.php/Makepkg" rel="noopener nofollow" target="_blank"&gt;https://wiki.archlinux.org/index.php/Makepkg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;PacMan Docs: &lt;a href="https://wiki.archlinux.org/index.php/pacman" rel="noopener nofollow" target="_blank"&gt;https://wiki.archlinux.org/index.php/pacman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;For trouble shooting errors: &lt;a href="https://dev.to/nabbisen/troubleshooting-around-installing-aur-packages-neg" rel="noopener nofollow" target="_blank"&gt;https://dev.to/nabbisen/troubleshooting-around-installing-aur-packages-neg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Before installing check: licence, popularity, last updated, dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>key-mirror.ts ü™û</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Thu, 23 Jul 2020 17:31:03 +0000</pubDate>
      <link>https://notes.aliciasykes.com/16769/key-mirror-ts</link>
      <guid>https://notes.aliciasykes.com/16769/key-mirror-ts</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;strong&gt;A quick function to construct an enumeration which has keys the same as their value&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This used to be part of React, but since it's now been removed (See commit: &lt;a href="https://git.io/fjdWw" rel="noopener nofollow" target="_blank"&gt;#56f5115&lt;/a&gt;), and some older packages throw an error without it, I've updated it, and uploading in case anyone else needs it while working with older React packages. A copy of React's original, JavaScript version can be found &lt;a href="https://gist.github.com/Lissy93/acf635701bf5812431ec07d67d798095#file-react-key-mirror-js" rel="noopener nofollow" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/**
 * (C) Alicia Sykes &amp;lt;https://aliciasykes.com&amp;gt;
 * Licensed under MIT X11: https://git.io/Jew4i
 *
 * Constructs an enumeration with keys equal to their value.
 * @param {object} obj
 * @return {object}
 */&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;keyMirror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;originObj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;object&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;typeof&lt;/span&gt; &lt;span class="nx"&gt;originObj&lt;/span&gt; &lt;span class="o"&gt;!==&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;throw&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;keMirror(...): Argument must be an object&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;any&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{};&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;originObj&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;originObj&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hasOwnProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;obj&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>React Grid System ‚öõÔ∏è</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 15 Jul 2020 17:01:24 +0000</pubDate>
      <link>https://notes.aliciasykes.com/16564/react-grid-system</link>
      <guid>https://notes.aliciasykes.com/16564/react-grid-system</guid>
      <description>&lt;p&gt;&lt;p&gt;A simple React component for implementing responsive grid-based layouts, without any dependencies. It uses the native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout" rel="noopener nofollow" target="_blank"&gt;CSS Grid Layout&lt;/a&gt; properties to align elements into columns and rows. It is written in TypeScript as a Styled-Component for React or React Native projects.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="cm"&gt;/*
 * Entry point for React grid system
 * React implementation of CSS grid layout written in TypeScript as a styled-component
 * Licensed under MIT - (C) Alicia Sykes 2020 &amp;lt;https://aliciasykes.com&amp;gt;
 */&lt;/span&gt;

&lt;span class="c1"&gt;// FILE 1 - layout/index.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Grid&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;Cell&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;./Cell&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;Cell&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// FILE 2 - layout/cell.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;maxWidth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@styles/media-queries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;interface&lt;/span&gt; &lt;span class="nx"&gt;CellProps&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;left&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// The horizontal starting position&lt;/span&gt;
  &lt;span class="nl"&gt;width&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// How many cells to span, horizontally&lt;/span&gt;
  &lt;span class="nl"&gt;top&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// The vertical starting position&lt;/span&gt;
  &lt;span class="nl"&gt;height&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// How many cells to span, vertically&lt;/span&gt;
  &lt;span class="nl"&gt;className&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// So Cell can optionally be used as a styled container&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Cell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;CellProps&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;`
  &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;props&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;props&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`
    grid-column-start: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;left&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
    grid-column-end: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`span &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
    grid-row-start: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;top&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
    grid-row-end: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="s2"&gt;`span &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;`&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;unset&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
    overflow-x: hidden;
    overflow-wrap: break-word;
    word-wrap: break-word;
    &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tablet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`
      // For tablet and above
      grid-column-start: unset;
      grid-row-start: unset; 
    `&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;;
  `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="s2"&gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Cell&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// FILE 3 - layout/grid.ts&lt;/span&gt;

&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;react&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;styled-components&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;gridValues&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@styles/sizes&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;import&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;minWidth&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="s1"&gt;@styles/media-queries&lt;/span&gt;&lt;span class="dl"&gt;'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;GridWrapper&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;styled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;div&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;gutterOutside&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;`
  &lt;/span&gt;&lt;span class="p"&gt;${({&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gutterOutside&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;maxGridWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gutter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;minRowHeight&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;minColWidth&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;numCols&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gridValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;desktop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;gridValues&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;`
      max-width: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;maxGridWidth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
      margin: 0 auto;
      display: grid;
      grid-gap: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;gutter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
      padding: 0 &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;gutterOutside&lt;/span&gt; &lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="nx"&gt;gutter&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;
      grid-auto-rows: minmax(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minRowHeight&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, auto);
      grid-template-columns: repeat(auto-fit, minmax(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minColWidth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, 1fr));

      // For tablet and above
      &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;tablet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`
        grid-template-columns: repeat(&lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;numCols&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;, 1fr);
      `&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;;

      // For desktop and above
      &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;desktop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;`
        max-width: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;desktop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;maxGridWidth&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
        grid-gap: &lt;/span&gt;&lt;span class="p"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;desktop&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;gutter&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;;
      `&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;&lt;span class="s2"&gt;
    `&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}}&lt;/span&gt;&lt;span class="s2"&gt;
`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;React&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;FC&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;string&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="kr"&gt;number&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nl"&gt;gutterOutside&lt;/span&gt;&lt;span class="p"&gt;?:&lt;/span&gt; &lt;span class="nx"&gt;boolean&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="nx"&gt;gutterOutside&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nx"&gt;GridWrapper&lt;/span&gt; &lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;className&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;gutterOutside&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;gutterOutside&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;children&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sr"&gt;/GridWrapper&lt;/span&gt;&lt;span class="err"&gt;&amp;gt;
&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight typescript"&gt;&lt;code&gt;&lt;span class="c1"&gt;// FILE 4 - layout/grid-dimensions.ts&lt;/span&gt;

&lt;span class="nx"&gt;expoert&lt;/span&gt; &lt;span class="kd"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;gridValues&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;colWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;gutterWidth&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;maxGridWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sizeUnit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;colWidth&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="nx"&gt;gutterWidth&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;gutter&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sizeUnit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;gutterWidth&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;minRowHeight&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sizeUnit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;minColWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;sizeUnit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colWidth&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="na"&gt;numCols&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;style&gt;.highlight{width:100%;}&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Fave YouTube Chanels üìº</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Mon, 13 Jul 2020 14:31:25 +0000</pubDate>
      <link>https://notes.aliciasykes.com/16496/fave-youtube-chanels</link>
      <guid>https://notes.aliciasykes.com/16496/fave-youtube-chanels</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;img src="https://i.ibb.co/185MLZq/youtube-channels-banner.png" title="Random selection of my recently watch channels"&gt;&lt;/p&gt;

&lt;h3&gt;Contents&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;üî® Hardware/ Electronics/ DIY&lt;/li&gt;
&lt;li&gt;üîê Cyber Security/ Privacy/ Hacking&lt;/li&gt;
&lt;li&gt;üíø Linux / Servers / Sys Admin&lt;/li&gt;
&lt;li&gt;üë©‚Äçüíª Coding/ Algorithms/ Software Development&lt;/li&gt;
&lt;li&gt;üíª Computer Science/  AI/ Machine Learning&lt;/li&gt;
&lt;li&gt;üì± Technology/ PCs/ Consumer Electronics&lt;/li&gt;
&lt;li&gt;ü™ô Cryptocurrency / Blockchain / Fintech / Investment&lt;/li&gt;
&lt;li&gt;üëæ Retro Computing / Gaming&lt;/li&gt;
&lt;li&gt;üåê Internet Culture / Memes / Internet Mysteries/ Trolling Scammers&lt;/li&gt;
&lt;li&gt;ü™ê Astronomy / Space / Planetary Science&lt;/li&gt;
&lt;li&gt;üß™ Science/ Engineering/ Math&lt;/li&gt;
&lt;li&gt;‚úù Bible/ Jesus/ Religion&lt;/li&gt;
&lt;li&gt;üöÖ Trains / Maps / Travel&lt;/li&gt;
&lt;li&gt;üèÉ‚Äç‚ôÇÔ∏è Motivational/ Lifestyle&lt;/li&gt;
&lt;li&gt;‚õ∫ Sports / Outdoors/ Street Running&lt;/li&gt;
&lt;li&gt;üñ®Ô∏è 3D Printing&lt;/li&gt;
&lt;li&gt;üìö Tutorials / Courses&lt;/li&gt;
&lt;li&gt;üåà Fun/ Sometimes Educational&lt;/li&gt;
&lt;li&gt;ü¶ö Other Topics&lt;/li&gt;
&lt;li&gt;üöì True Crime&lt;/li&gt;
&lt;li&gt;üì∫ Animations/ Cartoons&lt;/li&gt;
&lt;li&gt;üìΩÔ∏è TV Shows&lt;/li&gt;
&lt;li&gt;üé∂ Music&lt;/li&gt;
&lt;li&gt;üó≥Ô∏è Misc&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üî® Hardware/ Electronics/ DIY&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCUQo7nzH1sXVpzL92VesANw" rel="noopener nofollow" target="_blank"&gt;DIYPerks&lt;/a&gt; - Design and building electronic &amp;amp; DIY projects, presented by Matthew Perks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC6mIxFTvXkWQVEHPsEdflzQ" rel="noopener nofollow" target="_blank"&gt;GreatScott&lt;/a&gt; - Awesome Electronics Tutorials, Projects and How To's&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCp_5PO66faM4dBFbFFBdPSQ" rel="noopener nofollow" target="_blank"&gt;Bitluni's Lab&lt;/a&gt; - Entertaining electronics and IoT hacks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCvrLvII5oxSWEMEkszrxXEA" rel="noopener nofollow" target="_blank"&gt;N-O-D-E&lt;/a&gt; - Awesome hardware security devices, and electronics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFmjA6dnjv-phqrFACyI8tw" rel="noopener nofollow" target="_blank"&gt;Spacehuhn&lt;/a&gt; - The legendary creator behind many hardware security products&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW6xlqxSY3gGur4PkGPEUeA" rel="noopener nofollow" target="_blank"&gt;Seytonic&lt;/a&gt; - Hacking-related tutorials, diy projects and raspberry pi/ Arduino mods&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ZackFreedman" rel="noopener nofollow" target="_blank"&gt;Zack Freedman&lt;/a&gt; - Humorous guy, very knowledgeable about electronics, 3D Printing and building stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC3jc4X-kEq-dEDYhQ8QoYnQ" rel="noopener nofollow" target="_blank"&gt;DIY Machines&lt;/a&gt; - Building easy to re-create machines with affordable components&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AndreasSpiess" rel="noopener nofollow" target="_blank"&gt;Andreas Spiess&lt;/a&gt; - Building small electronics IoT projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC1HROb1JCteiftaWwq7Hhhg" rel="noopener nofollow" target="_blank"&gt;Grensom&lt;/a&gt; - IoT and Raspberry Pi smart mirror projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtHaxi4GTYDpJgMSGy7AeSw" rel="noopener nofollow" target="_blank"&gt;Michael Reeves&lt;/a&gt;  - Building robots that do dumb but really smart stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/mitxela" rel="noopener nofollow" target="_blank"&gt;Mitxela&lt;/a&gt; - Small maker with some really awesome projects about electronics, synthesizers, and other neat things&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCafxR2HWJRmMfSdyZXvZMTw" rel="noopener nofollow" target="_blank"&gt;Look Mum no Computer&lt;/a&gt; - Electronic music creation with low level computers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFJibhZ9FOjbsZIr6AxR0AQ" rel="noopener nofollow" target="_blank"&gt;Learn Embedded Systems&lt;/a&gt; - Tutorials on programming basic electronics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtM5z2gkrGRuWd0JQMx76qA" rel="noopener nofollow" target="_blank"&gt;BigCliveDotCom&lt;/a&gt; - Reviews and experimentation with cheap Chinese components&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Also: &lt;a href="https://www.youtube.com/channel/UCe1Aj6VEO299Yq4WkXdoD3Q" rel="noopener nofollow" target="_blank"&gt;Alexandre Chappel&lt;/a&gt;, &lt;a href="https://www.youtube.com/c/simonegiertz" rel="noopener nofollow" target="_blank"&gt;Simone Giertz&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;üîê Cyber Security/ Privacy/ Hacking&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCW6MNdOsqv2E9AjQkv9we7A" rel="noopener nofollow" target="_blank"&gt;PwnFunction&lt;/a&gt; - Animated computer security issues&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgTNupxATBfWmfehv21ym-g" rel="noopener nofollow" target="_blank"&gt;Null Byte&lt;/a&gt; - Pentesting, Ethical hacking, Linux&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UClcE-kVhqyiHCcjYwcpfj9w" rel="noopener nofollow" target="_blank"&gt;LiveOverflow&lt;/a&gt; - CFT walkthroughs, security and hacking&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC3s0BtrBJpwNDaflRSoiieQ" rel="noopener nofollow" target="_blank"&gt;Hak5&lt;/a&gt; - The makers of the Rubber Ducky, Bash Bunny and other awesome gadgets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCjr2bPAyPV7t35MvcgT3W8Q" rel="noopener nofollow" target="_blank"&gt;The Hated One&lt;/a&gt; - Anti-censorship and privacy videos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/JohnHammond010" rel="noopener nofollow" target="_blank"&gt;John Hammond&lt;/a&gt; - CTF walk-throughs and pentesting tutorials&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Techlore" rel="noopener nofollow" target="_blank"&gt;Techlore&lt;/a&gt; - Privacy &amp;amp; Security Tutorials for the masses, and VPN Reviews&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HackerSploit/featured" rel="noopener nofollow" target="_blank"&gt;HackerSploit&lt;/a&gt; - Pen Testing, Hacking and Security Tutorials + Walk throughs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SunKnudsen" rel="noopener nofollow" target="_blank"&gt;Sun Knudsen&lt;/a&gt; - Short privacy-related tutorials, from a small security researcher&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MentalOutlaw" rel="noopener nofollow" target="_blank"&gt;Mental Outlaw&lt;/a&gt; - Online privacy, Linux, security, crypto and memes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCXJWKuGh0qedrYviGEJmlWw" rel="noopener nofollow" target="_blank"&gt;Tom Spark Reviews&lt;/a&gt; - A guy who reviews privacy products&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üíø Linux / Servers / Sys Admin&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCOk-gHyjcWZNj3Br4oxwh0A" rel="noopener nofollow" target="_blank"&gt;Techno Tim&lt;/a&gt; - Well explained basic home server applications&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCsnGwSIHyoYN0kiINAGUKxg" rel="noopener nofollow" target="_blank"&gt;Wolfgang's Channel&lt;/a&gt; - Self-hosting, Linux, Privacy, Security and keyboards&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/NetworkChuck" rel="noopener nofollow" target="_blank"&gt;Network Chuck&lt;/a&gt; - Networking, Security and Certifications&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/JtheLinuxguy" rel="noopener nofollow" target="_blank"&gt;LearnLinuxTV&lt;/a&gt; - Linux tutorials and distro reviews (sometimes a bit slow, and basic)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LukeSmithxyz" rel="noopener nofollow" target="_blank"&gt;Luke Smith&lt;/a&gt; - Terminal tricks, Linux apps, Arch Linux stuff and chat&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtube.com/c/JeffGeerling" rel="noopener nofollow" target="_blank"&gt;Jeff Geerling&lt;/a&gt; - Raspberry Pi, Sys Admin and other tech stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NovaspiritTech" rel="noopener nofollow" target="_blank"&gt;Novaspirit Tech&lt;/a&gt; -  Small Raspberry Pi home server projects, but quite basic&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DBTechYT" rel="noopener nofollow" target="_blank"&gt;DB Tech&lt;/a&gt; - Self-Hosted services and homelabs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCB2TRuFjwgWdbHEaGHP1kfw" rel="noopener nofollow" target="_blank"&gt;Byte my Bits&lt;/a&gt; - Videos about Plex, and occasionally other homelab stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCp3yVOm6A55nx65STpm3tXQ" rel="noopener nofollow" target="_blank"&gt;Craft Computing&lt;/a&gt; - Networking, gaming hardware, graphics, Raspberry Pi, PCs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Tinkernut" rel="noopener nofollow" target="_blank"&gt;Tinkernut&lt;/a&gt; - Raspberry Pis, networking, basic hacking and communications&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üë©‚Äçüíª Coding/ Algorithms/ Software Development&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA" rel="noopener nofollow" target="_blank"&gt;Computerphile&lt;/a&gt; - Detailed introductions to algorithms, data structures and architecture&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCnxrdFPXJMeHru_b4Q_vTPQ" rel="noopener nofollow" target="_blank"&gt;Simply Explained&lt;/a&gt; - Simply explaining many computer topics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/thenewboston" rel="noopener nofollow" target="_blank"&gt;The New Boston&lt;/a&gt; - An original internet legend, beginner-friendly tutorials in a laid-back style&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCZUyPT9DkJWmS_DzdOi7RIA" rel="noopener nofollow" target="_blank"&gt;Caleb Curry&lt;/a&gt; - Complete coding courses, simply explained, Python, Java, C++, Crypto + more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheNetNinja" rel="noopener nofollow" target="_blank"&gt;The Net Ninja&lt;/a&gt; - Easy to follow web development tutorials&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Fireship" rel="noopener nofollow" target="_blank"&gt;FireShip&lt;/a&gt; - Web Development Coding Snippets, Tutorials and Tricks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Freecodecamp/" rel="noopener nofollow" target="_blank"&gt;Free Code Camp&lt;/a&gt; - High quality programming tutorials&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DevTipsForDesigners" rel="noopener nofollow" target="_blank"&gt;DevTips&lt;/a&gt; - Show web development tips and some introductory tutorials &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC9x4yW2SIoX4-2eaDvqP0iA" rel="noopener nofollow" target="_blank"&gt;Mathew Rayfield&lt;/a&gt; - Builds short, pointless but funny web projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCLXAviTgz5MuJrR_rbLGNWg" rel="noopener nofollow" target="_blank"&gt;Federico Terzi&lt;/a&gt; - Short videos about Rust, coding and keyboard productivity (creator of Espanso)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCdngmbVKX1Tgre699-XLlUA" rel="noopener nofollow" target="_blank"&gt;TechWorld with Nana&lt;/a&gt; - DevOps Simply Explained&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üíª Computer Science/ Blockchain/ AI/ Machine Learning&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0e3QhIYukixgh5VVpKHH9Q" rel="noopener nofollow" target="_blank"&gt;Code Bullet&lt;/a&gt; - Building epic AI projects, and training AI to play games&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/jordanharrod" rel="noopener nofollow" target="_blank"&gt;Jordan Harrod&lt;/a&gt; - Interesting videos about how we interact with AI, from a Harvard MIT PhD Student&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üì± Technology/ PCs/ Consumer Electronics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/marquesbrownlee" rel="noopener nofollow" target="_blank"&gt;Marques Brownlee&lt;/a&gt; - Quality, Trustworthy reviews and analysis of the latest tech&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UChIZGfcnjHI0DG4nweWEduw" rel="noopener nofollow" target="_blank"&gt;TechSource&lt;/a&gt; - Setup Wars &amp;amp; Cool PC Builds&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/LinusTechTips" rel="noopener nofollow" target="_blank"&gt;Linus Tech Tips&lt;/a&gt; - No description needed&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Dave2D" rel="noopener nofollow" target="_blank"&gt;Dave Lee&lt;/a&gt; - Videos about smart phones, laptops and tech gadgets&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4Z8mPYjn6Dhr6n531YDh0Q" rel="noopener nofollow" target="_blank"&gt;UFD Tech&lt;/a&gt; - News and Reviews of PC Components&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCwOBG77Tm8cE24FPxHb_abw" rel="noopener nofollow" target="_blank"&gt;Smart Home Solver&lt;/a&gt; - Home Automation Ideas, How-To's and Reviews&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Mrwhosetheboss" rel="noopener nofollow" target="_blank"&gt;Mrwhosetheboss&lt;/a&gt; - Smart phone reviews and discussions&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DankPods/" rel="noopener nofollow" target="_blank"&gt;DankPods&lt;/a&gt; - Audiophile reviews and mods&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ByteReview/" rel="noopener nofollow" target="_blank"&gt;Byte Review&lt;/a&gt; - Reviews of mainstream tech, from a small creator&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SquashyBoy/" rel="noopener nofollow" target="_blank"&gt;SquashyBoy&lt;/a&gt; - Mechanical keyboards and stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ThrillSeekerVR/" rel="noopener nofollow" target="_blank"&gt;ThrillSeekerVR&lt;/a&gt; - Virtual reality stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HipyoTech" rel="noopener nofollow" target="_blank"&gt;Hipyo Tech&lt;/a&gt; - Cool mechanical keyboard stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ü™ô Cryptocurrency / Blockchain / Fintech / Investment&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CoinBureau" rel="noopener nofollow" target="_blank"&gt;Coin Bureau&lt;/a&gt; - Information about crypto and earning through staking&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Finematics/" rel="noopener nofollow" target="_blank"&gt;Finematics&lt;/a&gt; - Videos about the math behind DeFi, very informative. Slightly annoying accent, but great content&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCRvqjQPSeaWn-uEx-w0XOIg" rel="noopener nofollow" target="_blank"&gt;Benjamin Cowen&lt;/a&gt; - Great, unbiased technical analysis over long timelines&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCJgHxpqfhWEEjYH9cLXqhIQ" rel="noopener nofollow" target="_blank"&gt;Digital Asset News&lt;/a&gt; - Daily news on crypto markets and trends&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4fg8o6oUkkZDLaC6eAZKwQ" rel="noopener nofollow" target="_blank"&gt;Heresy Financial&lt;/a&gt; - Explaining traditional finance, in order to understand modern finance&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFIioyI1rBmv7A4Nn6xhu-A" rel="noopener nofollow" target="_blank"&gt;Legal Briefs&lt;/a&gt; - Everything you need to know about the legal side of crypto, and regulations&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/aantonop" rel="noopener nofollow" target="_blank"&gt;Aantonop&lt;/a&gt; - Long-form videos all about BitCoin and technical stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCjpkwsuHgYx9fBE0ojsJ_-w" rel="noopener nofollow" target="_blank"&gt;Thinking Crypto&lt;/a&gt; - Interviews with big players in the crypto space, and some crypto news&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC0zGwzu0zzCImC1BwPuWyXQ" rel="noopener nofollow" target="_blank"&gt;Bob Loukas&lt;/a&gt; - Long-form technical analysis videos (play on 2x speed)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheCryptoBubble/" rel="noopener nofollow" target="_blank"&gt;Lil Bubble&lt;/a&gt; - Crypto memes and parody songs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/EdsFinanceCorner" rel="noopener nofollow" target="_blank"&gt;Eds Finance Corner&lt;/a&gt; - British finance, investing and cryptocurrency channel&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFCEuCsyWP0YkP3CZ3Mr01Q" rel="noopener nofollow" target="_blank"&gt;Plain Bagel&lt;/a&gt; - Finance and investing analysis&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCL0J4MLEdLP0-UyLu0hCktg" rel="noopener nofollow" target="_blank"&gt;The Defiant&lt;/a&gt; - Variety of content, from interviews, educational content and podcasts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DividendBull" rel="noopener nofollow" target="_blank"&gt;Dividend Bull&lt;/a&gt; - Channel dedicated to high yielding dividend investments&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üëæ Retro Computing / Gaming&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/adric22" rel="noopener nofollow" target="_blank"&gt;The 8-Bit Guy&lt;/a&gt; - Exploring the inner workings of tech from the 80's, 90's and 2000's&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCjFaPUcJU1vwk193mnW_w1w" rel="noopener nofollow" target="_blank"&gt;Modern Vintage Gamer&lt;/a&gt; - Retro gaming and the homebrew community&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ETAPRIME" rel="noopener nofollow" target="_blank"&gt;ETA Prime&lt;/a&gt; - Handheld, console and Raspberry Pi emulation and other tech stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/XboxAhoy" rel="noopener nofollow" target="_blank"&gt;Ahoy&lt;/a&gt; - Nicely produced videos about modern gaming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCIabPXjvT5BVTxRDPCBBOOQ" rel="noopener nofollow" target="_blank"&gt;Dani&lt;/a&gt; - Game developer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/RobertThomsonDev" rel="noopener nofollow" target="_blank"&gt;Robert Thomson Dev&lt;/a&gt; - Game dev&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üåê Internet Culture / Memes / Historical Internet Mysteries/ Fighting Internet Scammers&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/BarelySociable" rel="noopener nofollow" target="_blank"&gt;Barely Sociable&lt;/a&gt; - Analysis of internet mysteries&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCR1D15p_vdP3HkrH8wgjQRw" rel="noopener nofollow" target="_blank"&gt;Internet Historian&lt;/a&gt; - Memes and the history of various internet memes&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCg4vDcovXPJTcTcYxQ9iCrw" rel="noopener nofollow" target="_blank"&gt;WavyWebSurf&lt;/a&gt; - Covering past and present internet stories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PleasantGreen" rel="noopener nofollow" target="_blank"&gt;Pleasant Green&lt;/a&gt; - Guy who likes talking to Nigerian scammers &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCBNG0osIBAprVcZZ3ic84vw" rel="noopener nofollow" target="_blank"&gt;Jim Browning&lt;/a&gt; -  The ultimate bad-ass scam baiter&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCgmI-uiLLAg--vDe7FFdekA" rel="noopener nofollow" target="_blank"&gt;Slightly Sociable&lt;/a&gt; - Mysteries and analysis of scams and stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCf5POn4NNKIIGmXOu6qhbsQ" rel="noopener nofollow" target="_blank"&gt;Inside a Mind&lt;/a&gt; - Mysteries from around the Internet&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Nexpo" rel="noopener nofollow" target="_blank"&gt;Nexpo&lt;/a&gt; - Videos focused on dark stories from around the internet&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCaGOgwGKnDVOKY0DrFsBAiA" rel="noopener nofollow" target="_blank"&gt;Scare Theater&lt;/a&gt; - The discussion of slightly scary things&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCchWU8ta6L-Dy3rGIxPINzw" rel="noopener nofollow" target="_blank"&gt;ReignBot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/tamago2474" rel="noopener nofollow" target="_blank"&gt;tamago2474&lt;/a&gt; - Games, internet stuff and things&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ü™ê Astronomy / Space / Planetary Science&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCYNbYGl89UUowy8oXkipC-Q" rel="noopener nofollow" target="_blank"&gt;Dr. Becky&lt;/a&gt; - Space news and concepts explained by a friendly astrophysicist&lt;br&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/DeepSkyVideos" rel="noopener nofollow" target="_blank"&gt;DeepSkyVideos&lt;/a&gt; - Videos exporing deep space objects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/sixtysymbols" rel="noopener nofollow" target="_blank"&gt;Sixty Symbols&lt;/a&gt; - Physics and Astronomy videos, with a focus on Symbols&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NASA" rel="noopener nofollow" target="_blank"&gt;NASA&lt;/a&gt; - The official NASA Channel and Live Stream&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/VideoFromSpace" rel="noopener nofollow" target="_blank"&gt;Space.com&lt;/a&gt; - The latest space exploration news and info&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/vintagespace" rel="noopener nofollow" target="_blank"&gt;The Vintage Space&lt;/a&gt; - All about the history of spaceflight&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üß™ Science/ Engineering/ Math&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/onemeeeliondollars" rel="noopener nofollow" target="_blank"&gt;Mark Robber&lt;/a&gt; - Awesome science videos, from an ex-NASA engineer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PracticalEngineeringChannel" rel="noopener nofollow" target="_blank"&gt;Practical Engineering&lt;/a&gt; - Engineering concepts explained visually with mini experiments&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCSju5G2aFaWMqn-_0YBtq5A" rel="noopener nofollow" target="_blank"&gt;Stand-Up Maths&lt;/a&gt; - Maths-related topics, by Matt Parker, sometimes funny too&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/1veritasium" rel="noopener nofollow" target="_blank"&gt;Veritasium&lt;/a&gt; - Really interesting science videos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCtwKon9qMt5YLVgQt1tvJKg" rel="noopener nofollow" target="_blank"&gt;Objectivity&lt;/a&gt; - Videos about ancient science treasures&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/steventhebrave" rel="noopener nofollow" target="_blank"&gt;Steve Mould&lt;/a&gt; - Science videos (he's also one of the presenters on a Podcast of Unnecessary Detail)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheBackyardScientist" rel="noopener nofollow" target="_blank"&gt;The Backyard Scientist&lt;/a&gt; - Cool science experiments, done in his backyard&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/minutephysics/" rel="noopener nofollow" target="_blank"&gt;Minute Physics&lt;/a&gt; - Animated, interesting physics principles&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DomainofScience" rel="noopener nofollow" target="_blank"&gt;Domain of Science&lt;/a&gt; - Maths and Physics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCYO_jab_esuFRV4b17AJtAw" rel="noopener nofollow" target="_blank"&gt;3Blue1Brown&lt;/a&gt; - Lots of maths concepts, beautifully detailed&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC_1lGqsvho7SLdxsN7dRwaw" rel="noopener nofollow" target="_blank"&gt;Better Explained&lt;/a&gt; - Clear and well explained math concepts&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/numberphile" rel="noopener nofollow" target="_blank"&gt;NumberPhile&lt;/a&gt; - Videos about Numbers&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/standupmaths" rel="noopener nofollow" target="_blank"&gt;Stand-up Maths&lt;/a&gt; - Maths from real-world scenarios and the news&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCV5vCi3jPJdURZwAOO_FNfQ" rel="noopener nofollow" target="_blank"&gt;The Thought Emporium&lt;/a&gt; - From biohacking and biology, to nuclear physics and nanotech&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TechnologyConnections" rel="noopener nofollow" target="_blank"&gt;Technology Connections&lt;/a&gt; - The science behind how everyday things actually work&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;‚úù Bible/ Jesus/ Religion&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCVfwlh9XpX2Y_tQfjeln9QA" rel="noopener nofollow" target="_blank"&gt;Bible Project&lt;/a&gt; - Overview of how an entire chapter fits together&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/bibledex" rel="noopener nofollow" target="_blank"&gt;BibleDex&lt;/a&gt; - Short videos about verses from the Bible&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üöÖ Trains&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/geofftech2" rel="noopener nofollow" target="_blank"&gt;Geoff Marshall&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcHuNKYzVMc06FXqsBEAV3A" rel="noopener nofollow" target="_blank"&gt;Jago Hazzard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üèÉ‚Äç‚ôÇÔ∏è Motivational/ Lifestyle&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/BetterIdeas" rel="noopener nofollow" target="_blank"&gt;Better Ideas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MattDAvella" rel="noopener nofollow" target="_blank"&gt;Matt D'Avella&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/aliabdaal" rel="noopener nofollow" target="_blank"&gt;Ali Abdaal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/nathanieldrewofficial" rel="noopener nofollow" target="_blank"&gt;Nathaniel Drew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;‚õ∫ Sports / Outdoors/ Street Running&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/shiey" rel="noopener nofollow" target="_blank"&gt;Shiey&lt;/a&gt; Illegal Freedom - Train surfing, urban exploring and climbing&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC88oKpyXNid09t1m_PZlvfQ" rel="noopener nofollow" target="_blank"&gt;DyingLlama&lt;/a&gt; - Some epic street climbs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/harrymain/" rel="noopener nofollow" target="_blank"&gt;Harry Main&lt;/a&gt; - Mountain Biking Stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/AlfieAesthetics/" rel="noopener nofollow" target="_blank"&gt;AlfieAesthetics&lt;/a&gt; - Outdoor survival tips, comedic guy&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/thebodycoach1" rel="noopener nofollow" target="_blank"&gt;The Body Coach TV&lt;/a&gt; - Joe Wicks, home workout videos from a British icon&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MrDeified" rel="noopener nofollow" target="_blank"&gt;MrDeified&lt;/a&gt; - Scary true stories about divers, cavers, etc&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MrDeified/" rel="noopener nofollow" target="_blank"&gt;MrDeified&lt;/a&gt; - Parkour and climbing tall things&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üñ®Ô∏è 3D Printing&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/ThomasSanladerer" rel="noopener nofollow" target="_blank"&gt;Thomas Sanladerer&lt;/a&gt; - All kinds of 3D printing content&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCqfMW0tMZEciSXQym8x0EoQ" rel="noopener nofollow" target="_blank"&gt;Proper Printing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üìö Tutorials&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCEQXp_fcqwPcqrzNtWJ1w9w" rel="noopener nofollow" target="_blank"&gt;Logos By Nick&lt;/a&gt; - Inkscape and GIMP Tutorials&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/ThomasSanladerer" rel="noopener nofollow" target="_blank"&gt;Thomas Sanladerer&lt;/a&gt; - 3D Printing Tutorials, from beginner to advanced&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Brackeys/" rel="noopener nofollow" target="_blank"&gt;Brackeys&lt;/a&gt; - Game Dev Tutorials in Unity and C#&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCNYL0ZF2j8-OSGZ4iHBLNPA" rel="noopener nofollow" target="_blank"&gt;d3Vienno&lt;/a&gt; - A bit dated now, but still one of the best beginner D3.js tutorials out there &lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;ü¶ö Other Topics&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/ProfessorShoelace" rel="noopener nofollow" target="_blank"&gt;Professor Shoelace&lt;/a&gt; - Ian off of the legendary &lt;a href="https://www.fieggen.com/shoelace/index.htm" rel="noopener nofollow" target="_blank"&gt;Ian's Shoelaces&lt;/a&gt;, explaining cool ways to tie your laces&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCm9K6rby98W8JigLoZOh6FQ" rel="noopener nofollow" target="_blank"&gt;Lock Picking Lawyer&lt;/a&gt; - Short videos where he just picks lots of locks&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCd0ZD4iCXRXf18p3cA7EQfg" rel="noopener nofollow" target="_blank"&gt;Taran Van Hemert&lt;/a&gt; - King of macros, creator a the ultimate video editing course&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC88tlMjiS7kf8uhPWyBTn_A" rel="noopener nofollow" target="_blank"&gt;Captain Joe&lt;/a&gt; - Everything you've ever wanted to ask a Pilot of a Boeing 787&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HamRadioCrashCourse" rel="noopener nofollow" target="_blank"&gt;Ham Radio Crash Course&lt;/a&gt; - Videos about various SDRs and other transmitting things&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NileRed" rel="noopener nofollow" target="_blank"&gt;NileRed&lt;/a&gt; - Interesting Chemistry experiments&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üåà Fun/ Sometimes Educational&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC4QZ_LsYcvcq7qOsOhpAX4A" rel="noopener nofollow" target="_blank"&gt;ColdFusion&lt;/a&gt; - High quality documentaries about science, technology, business and more&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/CGPGrey" rel="noopener nofollow" target="_blank"&gt;CGP Grey&lt;/a&gt; - Engaging and unique videos covering history, politics, science, people and the world&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbbQalJ4OaC0oQ0AqRaOJ9g" rel="noopener nofollow" target="_blank"&gt;Jay Foreman&lt;/a&gt; - The comedian and creator of Map Men, Unfinished London and Politics Unboringed&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/OrdinaryThings" rel="noopener nofollow" target="_blank"&gt;Ordinary Things&lt;/a&gt; - Ironic explanations of everyday stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCHsRtomD4twRf5WVHHk-cMw" rel="noopener nofollow" target="_blank"&gt;TierZoo&lt;/a&gt; - The World explained as if it were a video game&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCRcgy6GzDeccI7dkbbBna3Q" rel="noopener nofollow" target="_blank"&gt;Lemmino&lt;/a&gt; - Top 10 facts, internet mysteries and interesting things&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Tapakapa" rel="noopener nofollow" target="_blank"&gt;Tapakapa&lt;/a&gt; - Friendly stick man giving you interesting facts about the world &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC1DTYW241WD64ah5BFWn4JA" rel="noopener nofollow" target="_blank"&gt;Sam O'Nella Academy&lt;/a&gt; - Slightly educational, funny videos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/colinfurze" rel="noopener nofollow" target="_blank"&gt;Collin Furze&lt;/a&gt; - Crazy back yard inventions and often fire &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCajXeitgFL-rb5-gXI-aG8Q" rel="noopener nofollow" target="_blank"&gt;Great Big Story&lt;/a&gt; -  Amazing People, doing Improbable Things &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCIRiWCPZoUyZDbydIqitHtQ" rel="noopener nofollow" target="_blank"&gt;Mike Boyd&lt;/a&gt; -  A guy who learns a new skill every week or so&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/willunicycleforfood" rel="noopener nofollow" target="_blank"&gt;exurba&lt;/a&gt; - Videos that make you think, from the meaning of life to physics mysteries &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/austinmcconnell" rel="noopener nofollow" target="_blank"&gt;Austin McConnell&lt;/a&gt; -  Random, slightly funny videos from a film maker &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/enyay" rel="noopener nofollow" target="_blank"&gt;Tom Scott&lt;/a&gt; - An arrogant British guy telling you things he thinks you may not know&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/inanutshell/" rel="noopener nofollow" target="_blank"&gt;Kurzgesagt&lt;/a&gt; -  Uniquely animated science videos &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCuCkxoKLYO_EQ2GeFtbM_bw" rel="noopener nofollow" target="_blank"&gt;Half as Interesting&lt;/a&gt; - Stuff that is quite literally only half interesting &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Wendoverproductions" rel="noopener nofollow" target="_blank"&gt;Wendover Productions&lt;/a&gt; - Videos that explain how stuff in the world works &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/xplrd" rel="noopener nofollow" target="_blank"&gt;xplrd&lt;/a&gt; - General videos loosely related to democracy around the world&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PolyMatter" rel="noopener nofollow" target="_blank"&gt;Poly Matter&lt;/a&gt; - More videos about random things that aren't actually as interesting as they look&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/SolarSands" rel="noopener nofollow" target="_blank"&gt;SolarSands&lt;/a&gt; - videos about art and society&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/neoyoutube" rel="noopener nofollow" target="_blank"&gt;Neo&lt;/a&gt; -  Clear and understandable analysis of geopolitical conflicts, politics and business &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/itsokaytobesmart" rel="noopener nofollow" target="_blank"&gt;Its Okay to be Smart&lt;/a&gt; - Exploring the science behind everything with Joe Hanson PhD&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/bigthink" rel="noopener nofollow" target="_blank"&gt;Think Big&lt;/a&gt; -  Ideas about humans, science, history and the future &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/TEDxTalks" rel="noopener nofollow" target="_blank"&gt;Tedx Talks&lt;/a&gt; - Talks that didn't quite make the bar to be actual Ted talks &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCAiEWppTvoNSHU939xhMb2g" rel="noopener nofollow" target="_blank"&gt;h0ser&lt;/a&gt; - Geography videos, animated, mostly middle-East&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCbCq5Y0WPGimG2jNXhoQxGw" rel="noopener nofollow" target="_blank"&gt;Atomic Frontier&lt;/a&gt; - Short BBC-style science and engineering documentaries from a small creator&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCTvRcHO5jJ_JKcekLacLMuQ" rel="noopener nofollow" target="_blank"&gt;Leon Hendrix&lt;/a&gt; - Videos about startups that made loads, or failed&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC22BdTgxefuvUivrjesETjg" rel="noopener nofollow" target="_blank"&gt;History Matters&lt;/a&gt; - Short animated history videos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/HalfAsleepChris/" rel="noopener nofollow" target="_blank"&gt;Half-Asleep Chris&lt;/a&gt; - Interesting coins &amp;amp; banknotes, travel, stop-motion. Nice guy, very calming voice&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/KentoBento" rel="noopener nofollow" target="_blank"&gt;Kento Bento&lt;/a&gt; - Animated documentaries about Asian historical events and lifestyle&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCSC6F-cM6_Xm3aJnHs6ZDVA" rel="noopener nofollow" target="_blank"&gt;Joeseppi&lt;/a&gt; - Funny "In a Nutshell" theme videos&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/NameExplain" rel="noopener nofollow" target="_blank"&gt;Name Explain&lt;/a&gt; - All about the origins of names&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Robslondon" rel="noopener nofollow" target="_blank"&gt;Robslondon&lt;/a&gt; - All about historic London&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üöì True Crime and Horror&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcUf33cEPky2GiWBgOP-jQA" rel="noopener nofollow" target="_blank"&gt;Coffeehouse Crime&lt;/a&gt; - Analysis of solved and unsolved events&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCoOjH8D2XAgjzQlneM2W0EQ" rel="noopener nofollow" target="_blank"&gt;Jake Tran&lt;/a&gt; - Documentaries on money, power, war, &amp;amp; crime&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/Coffeezilla" rel="noopener nofollow" target="_blank"&gt;Coffeezilla&lt;/a&gt; - Uncovering scams, fraudsters and fake gurus&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/ShroudedHand" rel="noopener nofollow" target="_blank"&gt;Shrouded Hand&lt;/a&gt; - True horror stories about different topics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/CodeBlueCam" rel="noopener nofollow" target="_blank"&gt;Code Blue Cam&lt;/a&gt; - Live footage from American cops, sometimes interesting&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üì∫ Animations/ Cartoons&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCo8bcnLyZH8tBIH9V1mLgqQ" rel="noopener nofollow" target="_blank"&gt;TheOdd1sOut&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCGwu0nbY2wSkW8N-cghnLpA" rel="noopener nofollow" target="_blank"&gt;Jaiden Animations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCOsATJw-IZgqGT8MFrHjKGg" rel="noopener nofollow" target="_blank"&gt;Ice Cream Sandwich&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/MattPilh" rel="noopener nofollow" target="_blank"&gt;Mattias Pilhede&lt;/a&gt; - Kinda random, short sketched stories&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCWXCrItCF6ZgXrdozUS-Idw" rel="noopener nofollow" target="_blank"&gt;ExplosmEntertainment&lt;/a&gt; - Cyanide &amp;amp; Happiness Shorts and other classic comics&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UChddokv0fxIN3BS-KZpxFfA" rel="noopener nofollow" target="_blank"&gt;Veggit Tales&lt;/a&gt; - Animated vegetables, because why not&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üìΩÔ∏è TV Shows&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCRAAdF42hZcTHAorbbDuivw" rel="noopener nofollow" target="_blank"&gt;ITV Wonder&lt;/a&gt; - Some incredible survival stories (&lt;a href="https://www.youtube.com/watch?v=xym5KUJrvsY" rel="noopener nofollow" target="_blank"&gt;this one&lt;/a&gt; blew my mind!)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCDAzmE9V4Xw5CdLkn3pvO3A" rel="noopener nofollow" target="_blank"&gt;The Dragons Den&lt;/a&gt; - Start-up entrepreneurs getting roasted&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCkjiTk_CqZLmIqjuc-dlTiw" rel="noopener nofollow" target="_blank"&gt;Ninja Warrior UK&lt;/a&gt; - Just impressive Ninja climbing skills&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TheRealHustleOfficial" rel="noopener nofollow" target="_blank"&gt;The Real Hustle&lt;/a&gt; - Three fraudsters demonstrating how common scams work&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCLQCdIAgnxUsWlOdacFgscg" rel="noopener nofollow" target="_blank"&gt;Funny TV UK&lt;/a&gt; -  I shouldn't laugh at this crap, but I do&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcjoLhqu3nyOFmdqF17LeBQ" rel="noopener nofollow" target="_blank"&gt;BBC Three&lt;/a&gt; - Trashy TV shorts from the BBC&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/TED" rel="noopener nofollow" target="_blank"&gt;TED Talks&lt;/a&gt; - Short talks from 5 - 15 minutes about intellectual sounding stuff&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üé∂ Music&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/MrSuicideSheep" rel="noopener nofollow" target="_blank"&gt;Mr Suicide Sheep&lt;/a&gt; -  A compilation of electronic music &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/EddyKenzo" rel="noopener nofollow" target="_blank"&gt;EddyKenzo&lt;/a&gt; -  African (Ugandan) Music Artist and Exec &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UC194cPvPaGJjhJBEGwG6vxg" rel="noopener nofollow" target="_blank"&gt;OK Go&lt;/a&gt; -  Awful music, but amazing videos &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/PomplamooseMusic" rel="noopener nofollow" target="_blank"&gt;Pomplamoose&lt;/a&gt; - American duo, indie pop and funk pop rock&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/LEMMiNOMusic" rel="noopener nofollow" target="_blank"&gt;LENNiNO Music&lt;/a&gt; - Small music producer&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCYEK6xds6eo-3tr4xRdflmQ" rel="noopener nofollow" target="_blank"&gt;deadmau5 &lt;/a&gt; - Epic electronic music&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üó≥Ô∏è Misc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/DrewGooden1" rel="noopener nofollow" target="_blank"&gt;Drew Gooden&lt;/a&gt; - Comedic commentary on TV shows and stuff&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcjx6m03fZwtRBFn1Cf7kKQ" rel="noopener nofollow" target="_blank"&gt;The Zac and Jay Show&lt;/a&gt; - 2 British lads getting up to all sorts in London&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/excessorizeme" rel="noopener nofollow" target="_blank"&gt;EXCESSORIZE ME&lt;/a&gt; -  Over-priced EDC and gadgets that you don't need &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCggHsHce2n3vvbJf_8YKrMA" rel="noopener nofollow" target="_blank"&gt;Nerd Forge&lt;/a&gt; -  Fantast, Crafts and Sci-Fi Painting &lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/c/LaurisBeinerts/" rel="noopener nofollow" target="_blank"&gt;Lauris Beinerts&lt;/a&gt; - Short comedy sketches about corporate life&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;üåü Personal Favorite Favorites&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://www.youtube.com/user/CGPGrey" rel="noopener nofollow" target="_blank"&gt;CGP Grey&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UC4QZ_LsYcvcq7qOsOhpAX4A" rel="noopener nofollow" target="_blank"&gt;ColdFusion&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCUQo7nzH1sXVpzL92VesANw" rel="noopener nofollow" target="_blank"&gt;DIYPerks&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UC6mIxFTvXkWQVEHPsEdflzQ" rel="noopener nofollow" target="_blank"&gt;GreatScott&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCbbQalJ4OaC0oQ0AqRaOJ9g" rel="noopener nofollow" target="_blank"&gt;Jay Foreman&lt;/a&gt;, &lt;a href="https://www.youtube.com/user/onemeeeliondollars" rel="noopener nofollow" target="_blank"&gt;Mark Robber&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCvrLvII5oxSWEMEkszrxXEA" rel="noopener nofollow" target="_blank"&gt;N-O-D-E&lt;/a&gt;, &lt;a href="https://www.youtube.com/user/ZackFreedman" rel="noopener nofollow" target="_blank"&gt;Zach Freedman&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCW6xlqxSY3gGur4PkGPEUeA" rel="noopener nofollow" target="_blank"&gt;Seytonic&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCjr2bPAyPV7t35MvcgT3W8Q" rel="noopener nofollow" target="_blank"&gt;The Hated One&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Notes&lt;/h2&gt;

&lt;p&gt;These are my personal favorite YouTube channels, the talent and hard work behind each of these creators is very inspirational. Since I can't feasibly financially support all of them, I am instead sharing links to their content here.&lt;/p&gt;

&lt;p&gt;I try to avoid using the official YouTube app and website (due to ads, terrible suggestions and Google having a total disregard for basic privacy), so I instead use &lt;a href="https://invidio.us/" rel="noopener nofollow" target="_blank"&gt;Invidious&lt;/a&gt; (web) / &lt;a href="https://freetubeapp.io/" rel="noopener nofollow" target="_blank"&gt;FreeTube&lt;/a&gt; (desktop) / &lt;a href="https://newpipe.schabi.org/" rel="noopener nofollow" target="_blank"&gt;NewPipe&lt;/a&gt; (mobile). Therefore I need to manage my subscriptions externally, and that in part, is why I maintain this list.&lt;/p&gt;

&lt;p&gt;Useful Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://channelcrawler.com/" rel="noopener nofollow" target="_blank"&gt;Channel Crawler&lt;/a&gt; - Useful tool to find and discover new YouTube Channels, based on specific parameters&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ytdl-org/youtube-dl" rel="noopener nofollow" target="_blank"&gt;YouTube-dl&lt;/a&gt; - A Python script to download videos from YouTube and some other platforms from a given URL. Can be used from the command-line, or incorporated into your project. It provides many optional parameters to specify video options. There's also &lt;a href="https://github.com/MrS0m30n3/youtube-dl-gui" rel="noopener nofollow" target="_blank"&gt;YouTube-dl-GUI&lt;/a&gt; if you prefer a user interface&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.turnoffthelights.com/" rel="noopener nofollow" target="_blank"&gt;Turn off the Lights&lt;/a&gt; - Open source browser extension that dims the webpage around a video while it is playing&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[HOW-TO] Use SSH for Server Authentication üîì</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Tue, 16 Jun 2020 20:41:29 +0000</pubDate>
      <link>https://notes.aliciasykes.com/15742/how-to-use-ssh-for-server-authentication</link>
      <guid>https://notes.aliciasykes.com/15742/how-to-use-ssh-for-server-authentication</guid>
      <description>&lt;p&gt;&lt;h3&gt;Generating a new SSH Key Pair&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Run &lt;code class="prettyprint"&gt;ssh-keygen -t rsa -b 4096&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;When prompted, enter a passphrase&lt;/li&gt;
&lt;li&gt;SSH keys should be stored in &lt;code class="prettyprint"&gt;~/.ssh/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h3&gt;Importing Public Key to Remote Machine&lt;/h3&gt;

&lt;h4&gt;Option #1 - Manual Configuration&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;SSH into remote server, with username + password&lt;/li&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;cd&lt;/code&gt; into your &lt;code class="prettyprint"&gt;/home&lt;/code&gt; directory, and &lt;code class="prettyprint"&gt;mkdir .ssh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Copy public key from local to remote machine
&lt;code class="prettyprint"&gt;scp ~/.ssh/my_key.pub user@0.0.0.0:/home/username/.ssh/my_key.pub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Append SSH public key to authorized hosts file
&lt;code class="prettyprint"&gt;cat ~/.ssh/my_key.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set permissions for

&lt;ul&gt;
&lt;li&gt;the .ssh directory (read, write, execute): &lt;code class="prettyprint"&gt;chmod 700 ~/.ssh/&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;and the SSH keys (read, write): &lt;code class="prettyprint"&gt;chmod 600 ~/.ssh/*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Option #2 - SSH Copy ID Command&lt;/h4&gt;

&lt;p&gt;Alternatively, the SSH Copy ID command will upload your public key to the remote server and update &lt;code class="prettyprint"&gt;.ssh/authorized_keys&lt;/code&gt;&lt;br&gt;
After generating an SSH key pair, simply run &lt;code class="prettyprint"&gt;ssh-copy-id user@0.0.0.0&lt;/code&gt; (with your username, IP and any other SSH flags)&lt;/p&gt;

&lt;hr&gt;

&lt;h3&gt;Disable Password Authentication&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Make a backup of the sshd&lt;em&gt;config file, before modifying it
`sudo cp /etc/ssh/sshd&lt;/em&gt;config.backup`&lt;/li&gt;
&lt;li&gt;Turn off password authentication

&lt;ul&gt;
&lt;li&gt;&lt;code class="prettyprint"&gt;sudo vim /etc/ssh/sshd_config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find &lt;code class="prettyprint"&gt;#PasswordAuthentication yes&lt;/code&gt; and replace with &lt;code class="prettyprint"&gt;PasswordAuthentication no&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Save and exit&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Restart SSH service
&lt;code class="prettyprint"&gt;sudo service ssh restart&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr&gt;

&lt;h3&gt;Further Links&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The OpenSSH Project: &lt;a href="https://www.openssh.com" rel="noopener nofollow" target="_blank"&gt;https://www.openssh.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SSH-KeyGen Documentation: &lt;a href="https://linux.die.net/man/1/ssh-keygen" rel="noopener nofollow" target="_blank"&gt;https://linux.die.net/man/1/ssh-keygen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Detailed tutorial for SSH-KeyGen: &lt;a href="https://www.ssh.com/ssh/keygen" rel="noopener nofollow" target="_blank"&gt;https://www.ssh.com/ssh/keygen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Short Video Guide, by Corey Schafer: &lt;a href="https://youtu.be/vpk_1gldOAE" rel="noopener nofollow" target="_blank"&gt;https://youtu.be/vpk_1gldOAE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[HOW-TO] Operate the SharkJack ü¶à</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 20 May 2020 17:40:55 +0000</pubDate>
      <link>https://notes.aliciasykes.com/14972/how-to-operate-the-sharkjack</link>
      <guid>https://notes.aliciasykes.com/14972/how-to-operate-the-sharkjack</guid>
      <description>&lt;p&gt;&lt;p&gt;&lt;em&gt;A Quick-Start Guide for the Hak5 &lt;a href="https://shop.hak5.org/products/shark-jack" rel="noopener nofollow" target="_blank"&gt;SharkJack&lt;/a&gt;, a portable network attack tool&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Access the SharkJack&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Switch to Arming Mode (center), and connect to PC via Ethernet&lt;/li&gt;
&lt;li&gt;Find the IP: Default is &lt;code class="prettyprint"&gt;172.16.24.1&lt;/code&gt;, run &lt;code class="prettyprint"&gt;ifconfig&lt;/code&gt; to check&lt;/li&gt;
&lt;li&gt;Login: &lt;code class="prettyprint"&gt;ssh root@172.16.24.1&lt;/code&gt;, using password &lt;code class="prettyprint"&gt;hak5shark&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;On first setup, change the default password, run &lt;code class="prettyprint"&gt;passwd&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Navigating the SharkJack&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;The active payload is located at: &lt;code class="prettyprint"&gt;~/payload/payload.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Captured loot is stored with the &lt;code class="prettyprint"&gt;~/loot/...&lt;/code&gt; directory &lt;/li&gt;
&lt;li&gt;To save all loot locally, run: &lt;code class="prettyprint"&gt;scp -r root@172.16.24.1:/root/loot/* .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To upload a new payload, run &lt;code class="prettyprint"&gt;scp payload.sh root@172.16.24.1:/root/payload/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conducting an Attack&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Flip into Attack Mode (fully forward), and wait for LED to go magenta&lt;/li&gt;
&lt;li&gt;Plug device into victim Ethernet port, watch LED's blink&lt;/li&gt;
&lt;li&gt;Once LED turns off, unplug device and switch to off&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Out-of-the box, the ShakJack comes with an nmap payload, useful for initial network reconnaissance &lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Additional Tools&lt;/h2&gt;

&lt;h4&gt;CLI Helper Tool&lt;/h4&gt;

&lt;p&gt;The SharkJack Helper a CLI tool for carrying out common tasks: &lt;br&gt;
Get a shell, push a payload, grab saved loot and upgrade the firmware etc&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download from: &lt;a href="https://downloads.hak5.org/shark" rel="noopener nofollow" target="_blank"&gt;https://downloads.hak5.org/shark&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make executable: &lt;code class="prettyprint"&gt;chmod +x sharkjack.sh&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code class="prettyprint"&gt;./sharkjack.sh&lt;/code&gt;, and follow on-screen prompts&lt;/li&gt;
&lt;/ol&gt;

&lt;h4&gt;Web Interface&lt;/h4&gt;

&lt;p&gt;Once the firmware has been updated (V1.01 and newer), you can access the SharkJack's web interface by visiting 172.16.24.1 in your browser. From here you can view and modify the current payload, download your loot and view device status&lt;/p&gt;

&lt;h4&gt;Cloud C2&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Download and run Cloud C2 for your system, from &lt;a href="https://shop.hak5.org/products/c2" rel="noopener nofollow" target="_blank"&gt;https://shop.hak5.org/products/c2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go to Add Device --&amp;gt; SharkJack. Then select the listing --&amp;gt; Setup, and config file will download&lt;/li&gt;
&lt;li&gt;The &lt;code class="prettyprint"&gt;device.config&lt;/code&gt; needs to be uploaded to &lt;code class="prettyprint"&gt;/etc&lt;/code&gt;. Run &lt;code class="prettyprint"&gt;scp device.config root@172.16.24.1:/ete/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;To connect, run &lt;code class="prettyprint"&gt;CTCONNECT&lt;/code&gt;. Back on the web interface, your now able to open a shell, for remote access!&lt;/li&gt;
&lt;li&gt;To get the loot, run &lt;code class="prettyprint"&gt;C2EFIL STRING /root/loot/nmap/nmap-scan_1.txt nmap&lt;/code&gt;, data now will show up in Loot tab!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that it the SharkJack does not connect to CloudC2 automatically, but by using the &lt;code class="prettyprint"&gt;CTCONNECT&lt;/code&gt; and &lt;code class="prettyprint"&gt;C2EFIL ..&lt;/code&gt; commands to your payload, you'll be able to exfiltrate the loot immediately, and access it remotely.&lt;/p&gt;

&lt;hr&gt;

&lt;h2&gt;Reference Info&lt;/h2&gt;

&lt;h4&gt;Switch Positions&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Back:     Off/ Charging&lt;/li&gt;
&lt;li&gt;Middle:   Arming Mode&lt;/li&gt;
&lt;li&gt;Front:    Attack Mode&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;LET Lights&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Green (blinking):     Booting up&lt;/li&gt;
&lt;li&gt;Blue (blinking):      Charging&lt;/li&gt;
&lt;li&gt;Blue (solid):             Fully Charged&lt;/li&gt;
&lt;li&gt;Yellow (blinking):    Arming Mode&lt;/li&gt;
&lt;li&gt;Red (blinking):       Error / No Payload&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Individual Payloads have their own LED routines, but usually:&lt;br&gt;
Red: Setup, Amber: Scanning, Green: Finished&lt;/p&gt;

&lt;h4&gt;Specifications&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;OS: OpenWRT 19.07-based GNU/Linux&lt;/li&gt;
&lt;li&gt;SoC: 580MHz MediaTek MT7628DAN mips CPU&lt;/li&gt;
&lt;li&gt;MEMORY:  64 MB DDR2 RAM, 64 MB SPI Flash&lt;/li&gt;
&lt;li&gt;IO: RJ45 IEEE 802.3 Ethernet + USB-C charge port&lt;/li&gt;
&lt;li&gt;DIMENSIONS: 62 x 21 x 12 mm&lt;/li&gt;
&lt;li&gt;POWER: 2.5W (USB 5V 0.5A)&lt;/li&gt;
&lt;li&gt;BATTERY: 1S 401020 3.7V 50mAh 0.2W LiPo&lt;/li&gt;
&lt;li&gt;BATTERY TIMES: ~15 mins  run, ~7 mins charge&lt;/li&gt;
&lt;li&gt;TEMP: Operating- 35¬∫C ~ 45¬∫C, Storage -20¬∫C ~ 50¬∫C&lt;/li&gt;
&lt;li&gt;RELATIVE HUMIDITY: 0% to 90% (noncondensing)&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>My worry about the future of Keybase üòü</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Sun, 17 May 2020 15:44:20 +0000</pubDate>
      <link>https://notes.aliciasykes.com/14871/my-worry-about-the-future-of-keybase</link>
      <guid>https://notes.aliciasykes.com/14871/my-worry-about-the-future-of-keybase</guid>
      <description>&lt;p&gt;&lt;p&gt;When I heard that Zoom had acquired Keybase last week, my &lt;a href="https://twitter.com/Lissy_Sykes/status/1258393347770789896" rel="noopener nofollow" target="_blank"&gt;initial reaction&lt;/a&gt; was that it was a prank.&lt;/p&gt;

&lt;h3&gt;A bit of background&lt;/h3&gt;

&lt;p&gt;Keybase is a cryptography-based platform, where you control your private keys and use them to encrypt files, messages and more. It's mostly used by techy people and the privacy-conscious. Personally, I've been a big fan, and user of keybase for the past 4 years.&lt;br&gt;
And Zoom, it seemed to come from nowhere when lockdown started, suddenly it was super popular: it has allowed us to stay in touch with our friends and family, for free and with excellent video quality. But it seems that nearly everyday recently, there's been another &lt;a href="https://www.tomsguide.com/news/zoom-security-privacy-woes" rel="noopener nofollow" target="_blank"&gt;critical security issue&lt;/a&gt; with Zoom, they don't come across as a company that values the privacy of their users.&lt;/p&gt;

&lt;h3&gt;My Worries about the future of Keybase&lt;/h3&gt;

&lt;p&gt;This is an extract from the acquisition &lt;a href="https://keybase.io/blog/keybase-joins-zoom" rel="noopener nofollow" target="_blank"&gt;article&lt;/a&gt; posted on Keybase:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"Initially, our single top priority is helping to make Zoom even more secure. There are no specific plans for the Keybase app yet. Ultimately Keybase's future is in Zoom's hands, and we'll see where that takes us. Of course, if anything changes about Keybase‚Äôs availability, our users will get plenty of notice."&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is what worries me about the above quote:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"ùòñùò∂ùò≥ ùò¥ùò™ùòØùò®ùò≠ùò¶ ùòµùò∞ùò± ùò±ùò≥ùò™ùò∞ùò≥ùò™ùòµùò∫ ùò™ùò¥ ùò©ùò¶ùò≠ùò±ùò™ùòØùò® ùòµùò∞ ùòÆùò¢ùò¨ùò¶ ùò°ùò∞ùò∞ùòÆ ùò¶ùò∑ùò¶ùòØ ùòÆùò∞ùò≥ùò¶ ùò¥ùò¶ùò§ùò∂ùò≥ùò¶" - Implies, that the KeyBase team will now be working on the Zoom platform, and not Keybase.&lt;/li&gt;
&lt;li&gt;"ùòåùò∑ùò¶ùòØ ùòÆùò∞ùò≥ùò¶ ùò¥ùò¶ùò§ùò∂ùò≥ùò¶" - HA! They are pretending Zoom is secure&lt;/li&gt;
&lt;li&gt;"ùòõùò©ùò¶ùò≥ùò¶ ùò¢ùò≥ùò¶ ùòØùò∞ ùò¥ùò±ùò¶ùò§ùò™ùòßùò™ùò§ ùò±ùò≠ùò¢ùòØùò¥ ùòßùò∞ùò≥ ùòµùò©ùò¶ ùòíùò¶ùò∫ùò£ùò¢ùò¥ùò¶ ùò¢ùò±ùò± ùò∫ùò¶ùòµ" - this doesn't sound good&lt;/li&gt;
&lt;li&gt;"ùòúùò≠ùòµùò™ùòÆùò¢ùòµùò¶ùò≠ùò∫ ùòíùò¶ùò∫ùò£ùò¢ùò¥ùò¶'ùò¥ ùòßùò∂ùòµùò∂ùò≥ùò¶ ùò™ùò¥ ùò™ùòØ ùò°ùò∞ùò∞ùòÆ'ùò¥ ùò©ùò¢ùòØùò•ùò¥" - FUCK&lt;/li&gt;
&lt;li&gt;"ùò™ùòß ùò¢ùòØùò∫ùòµùò©ùò™ùòØùò® ùò§ùò©ùò¢ùòØùò®ùò¶ùò¥ ùò¢ùò£ùò∞ùò∂ùòµ ùòíùò¶ùò∫ùò£ùò¢ùò¥ùò¶‚Äôùò¥ ùò¢ùò∑ùò¢ùò™ùò≠ùò¢ùò£ùò™ùò≠ùò™ùòµùò∫" - Makes it sound like Keybase could one day be discontinued &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And from the Zoom &lt;a href="https://blog.zoom.us/wordpress/2020/05/07/zoom-acquires-keybase-and-announces-goal-of-developing-the-most-broadly-used-enterprise-end-to-end-encryption-offering/" rel="noopener nofollow" target="_blank"&gt;blog post&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;"ùòûùò¶ ùò¢ùò≥ùò¶ ùò¶ùòπùò§ùò™ùòµùò¶ùò• ùòµùò∞ ùò™ùòØùòµùò¶ùò®ùò≥ùò¢ùòµùò¶ ùòíùò¶ùò∫ùò£ùò¢ùò¥ùò¶‚Äôùò¥ ùòµùò¶ùò¢ùòÆ ùò™ùòØùòµùò∞ ùòµùò©ùò¶ ùò°ùò∞ùò∞ùòÆ ùòßùò¢ùòÆùò™ùò≠ùò∫" - Yup, they bought Keybase just to use their engineers&lt;/li&gt;
&lt;li&gt;"ùòõùò©ùò™ùò¥ ùò¢ùò§ùò≤ùò∂ùò™ùò¥ùò™ùòµùò™ùò∞ùòØ ùòÆùò¢ùò≥ùò¨ùò¥ ùò¢ ùò¨ùò¶ùò∫ ùò¥ùòµùò¶ùò± ùòßùò∞ùò≥ ùò°ùò∞ùò∞ùòÆ ùò¢ùò¥ ùò∏ùò¶ ùò¢ùòµùòµùò¶ùòÆùò±ùòµ ùòµùò∞ ùò¢ùò§ùò§ùò∞ùòÆùò±ùò≠ùò™ùò¥ùò© ùòµùò©ùò¶ ùò§ùò≥ùò¶ùò¢ùòµùò™ùò∞ùòØ ùò∞ùòß ùò¢ ùòµùò≥ùò∂ùò≠ùò∫ ùò±ùò≥ùò™ùò∑ùò¢ùòµùò¶ ùò∑ùò™ùò•ùò¶ùò∞ ùò§ùò∞ùòÆùòÆùò∂ùòØùò™ùò§ùò¢ùòµùò™ùò∞ùòØùò¥ ùò±ùò≠ùò¢ùòµùòßùò∞ùò≥ùòÆ" - 
I don't think they have any intention of creating a &lt;em&gt;"truly private"&lt;/em&gt; platform. And the word &lt;em&gt;"attempt"&lt;/em&gt; doesn't exactly instill confidence in me&lt;/li&gt;
&lt;li&gt;"ùòñùò∂ùò≥ ùò®ùò∞ùò¢ùò≠ ùò™ùò¥ ùòµùò∞ ùò±ùò≥ùò∞ùò∑ùò™ùò•ùò¶ ùòµùò©ùò¶ ùòÆùò∞ùò¥ùòµ ùò±ùò≥ùò™ùò∑ùò¢ùò§ùò∫ ùò±ùò∞ùò¥ùò¥ùò™ùò£ùò≠ùò¶ ùòßùò∞ùò≥ ùò¶ùò∑ùò¶ùò≥ùò∫ ùò∂ùò¥ùò¶ ùò§ùò¢ùò¥ùò¶, ùò∏ùò©ùò™ùò≠ùò¶ ùò¢ùò≠ùò¥ùò∞ ùò£ùò¢ùò≠ùò¢ùòØùò§ùò™ùòØùò® ùòµùò©ùò¶ ùòØùò¶ùò¶ùò•ùò¥ ùò∞ùòß ùò∞ùò∂ùò≥ ùò∂ùò¥ùò¶ùò≥ùò¥ ùò¢ùòØùò• ùò∞ùò∂ùò≥ ùò§ùò∞ùòÆùòÆùò™ùòµùòÆùò¶ùòØùòµ ùòµùò∞ ùò±ùò≥ùò¶ùò∑ùò¶ùòØùòµùò™ùòØùò® ùò©ùò¢ùò≥ùòÆùòßùò∂ùò≠ ùò£ùò¶ùò©ùò¢ùò∑ùò™ùò∞ùò≥ ùò∞ùòØ ùò∞ùò∂ùò≥ ùò±ùò≠ùò¢ùòµùòßùò∞ùò≥ùòÆ" - When they talk about &lt;em&gt;"balancing"&lt;/em&gt; the needs of customers, this implies that they will not be aiming for true end-to-end encryption and anonymity, it could be possible but I doubt Zoom will peruse that path&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I know all this is just legal speak, and they have to word it in this way to cover themselves, but too me this is worrying. I'd come to love Keybase over the years, the team behind it are very talented, and have done an amazing job. It's going to be sad to say goodbye, but for now I'm going to enjoy it while I can :)&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Expressing my Gratitude to the Universe üåå</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 15 Apr 2020 22:05:05 +0000</pubDate>
      <link>https://notes.aliciasykes.com/18762/expressing-my-gratitude-to-the-universe</link>
      <guid>https://notes.aliciasykes.com/18762/expressing-my-gratitude-to-the-universe</guid>
      <description>&lt;p&gt;&lt;p&gt;Dear Universe,&lt;br&gt;
Thanks!&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;img title="NGC 4907 a barred-spiral galaxy, 270 million light-years away" src="https://www.nasa.gov/sites/default/files/thumbnails/image/potw2031a.jpg" style="margin: 0.5rem auto;width:100%;max-width:400px;border-radius:12px;"&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>AHT GPG Public Key üîë</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Tue, 31 Mar 2020 20:35:37 +0000</pubDate>
      <link>https://notes.aliciasykes.com/13403/aht-gpg-public-key</link>
      <guid>https://notes.aliciasykes.com/13403/aht-gpg-public-key</guid>
      <description>&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;-----BEGIN PGP PUBLIC KEY BLOCK-----

mQENBF48O4ABCAC9IEjW7+Q2uF7efrxguXeRVr0NgHPIbTdAioVp2TkPlAi+h+yW
gbyeluutVlg2Mo5uWccPBaPHLm9Pr0CKTKiF8Y1RrYiDZ8RmyJSNux40FBGFPsNs
mfj3v7pjdTinI4v+EW8Lqd704fGCkgEpUpamefI2O8Hc7pHAtH1PUz99dcO1ThDY
Bn5grO8CPmM6XfRIHvBf7oJ0DwBH/yoS5Gjs2P4ijk/GMplApaVroCo8dAjyS7QJ
xreko5yVr2hhzrIznJYc63UBe6lAoM7wpArLCHxJ2fw1zHMuWg431EnpZa5nwrml
iSXizo1MuVUXm1Mt52wb3s26koLUoCXhNcqfABEBAAG0KEFsaWNpYSBIYWlnLVRo
b21hcyA8YWxpY2lhLmh0QGFsaWNpYS5odD6JAU4EEwEIADgWIQSEJgDk7beVIXMv
TmyOI+xzzok6aQUCXjw7gAIbAwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRCO
I+xzzok6aTL7B/4knCMhDX5MOTiAd0NKKE89EqApayJuxWovnvYmYEN2fje+rMH2
gf1J6+XET7jJ8jNujYIpvQmJcnumfzk9/dXNfT+MWn93ZOn+8Y2FmFD4jCdG20dS
Bx9mPAH00QoG7qZXk8EUvqo0EHtVPHW0PREyB3B/qd+tx1RcBva4vp8eYQezl16w
gjxGM4rjtcwgDGmlHM1PoeplJ6dr9kmB1fJ/HnuQnPKFMcU2bBj6Mbv2uensd4Js
zDgKWAaT5X+LA7xLs65bSgPFnos6gUFg+dS2tYf/zoIGiCGaeiv93RnWdvTYPcba
fHPmwsLX97HFk4KXnNvdAEaJlykbTvujHP14uQENBF48O4ABCAC5YOL+GBpmoTKB
nniRlRdt2Y+oWN0eyongTwLb3oPyc6+BfcMJS+8mV9hp96qYvXLDoNwkZZWUuHAP
SFhS4YjNW7mufOqKejUlkOgNvFpQ6eiU6QxmLu7RB4dWsPXMWxKAayaDsIJ75amf
EPyEcy+8/jkpAs62copxdJcJNkD3GGda2W6EC1GjhZGZjK4UnDAMg/iVpbygJFiH
EYHEL4JvS0HrW+30eikvXi9R8MxW/pNQIuJyjp8rJTwbV3fPeCwfuasPECuLK9qN
FmpL7NEAyreYET+uZxW16r7tDo3pIAZcz6+y4sBvf3+hR6T5IGL8nvezu71l0YhO
r4b38CIBABEBAAGJATYEGAEIACAWIQSEJgDk7beVIXMvTmyOI+xzzok6aQUCXjw7
gAIbDAAKCRCOI+xzzok6aWmdB/9yyai3QfSNhXnljLN7bLDyukFWnioqNZZWRKsp
1Coi2b7/yIYm1i4nd7W9YMXSZ2Lojl5471A4/u74M8c3Ua7RLxS5SJGDTYm1TX8L
xM4MY+iaYcbSMt+8ll0Y2av4cQAx/S69DIONSAqsIuKtNptKxedyKmB9IX3QLtpK
J2SFOTHVXWg4EVovhCvr7DlI9nkQtFJ+fgVk4GW8UeY5b+uR3Emcpcfo7h/FVwav
Pc0jCYP8i2YZQ3IdN6+Py2PXnhS6+OZukVy3GSib6dmdk1XhaUCcE8xbht92GiK0
2TVqWk8NQtfrMH6TvJmsgfNUAuOz3dOGgUwK1DqvhYQRWMh1
=4Lz6
-----END PGP PUBLIC KEY BLOCK-----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Fingerprint: &lt;code class="prettyprint"&gt;8426 00E4 EDB7 9521 732F  4E6C 8E23 EC73 CE89 3A69&lt;/code&gt;&lt;/p&gt;

&lt;style&gt;
.post-content .post-body pre { width: fit-content; } .highlight { background: none; }

&lt;/style&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>[HOW-TO] Enable/ Disable Pi-Hole from CLI ü•ß</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Tue, 31 Mar 2020 19:58:32 +0000</pubDate>
      <link>https://notes.aliciasykes.com/13402/how-to-enable-disable-pi-hole-from-cli</link>
      <guid>https://notes.aliciasykes.com/13402/how-to-enable-disable-pi-hole-from-cli</guid>
      <description>&lt;p&gt;&lt;p&gt;Pi Hole has an API that can be hit from browser, PostMan or CLI&lt;br&gt;
This is useful for creating a physical button, voice command or automation script&lt;/p&gt;

&lt;p&gt;To enable or diable Pi Hole, just hit the following end points&lt;br&gt;
Disable URL : &lt;a href="http://pi.hole/admin/api.php?disable&amp;amp;auth=%5BWEB_PASSWORD%5D" rel="noopener nofollow" target="_blank"&gt;http://pi.hole/admin/api.php?disable&amp;amp;auth=[WEB_PASSWORD]&lt;/a&gt;&lt;br&gt;
Enable URL  : &lt;a href="http://pi.hole/admin/api.php?enable&amp;amp;auth=%5BWEB_PASSWORD%5D" rel="noopener nofollow" target="_blank"&gt;http://pi.hole/admin/api.php?enable&amp;amp;auth=[WEB_PASSWORD]&lt;/a&gt;&lt;br&gt;
Disable for [X] Seconds: &lt;a href="http://pi.hole/admin/api.php?disable=%5BX%5D&amp;amp;auth=%5BWEB_PASSWORD%5D" rel="noopener nofollow" target="_blank"&gt;http://pi.hole/admin/api.php?disable=[X]&amp;amp;auth=[WEB_PASSWORD]&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[WEB_PASSWORD] can be found in &lt;code class="prettyprint"&gt;/etc/pihole/setupVars.conf&lt;/code&gt;&lt;br&gt;
It is a 64-character string with the identifier&lt;code class="prettyprint"&gt;WEBPASSWORD&lt;/code&gt;&lt;br&gt;
It is NOT your pi-hole interface or server password&lt;/p&gt;

&lt;p&gt;API Docs: &lt;a href="https://discourse.pi-hole.net/t/pi-hole-api/1863" rel="noopener nofollow" target="_blank"&gt;https://discourse.pi-hole.net/t/pi-hole-api/1863&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Or, if logged into pi server, run: &lt;code class="prettyprint"&gt;pihole enable&lt;/code&gt;&lt;br&gt;
Docs: &lt;a href="https://docs.pi-hole.net/core/pihole-command" rel="noopener nofollow" target="_blank"&gt;https://docs.pi-hole.net/core/pihole-command&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hello World üëã</title>
      <author>Alicia's Notes üöÄ</author>
      <pubDate>Wed, 18 Mar 2020 18:41:16 +0000</pubDate>
      <link>https://notes.aliciasykes.com/13001/hello-world</link>
      <guid>https://notes.aliciasykes.com/13001/hello-world</guid>
      <description>&lt;p&gt;&lt;p&gt;This is my blog. It has a bunch of random notes. The stuff here is mostly pointless, some of it's cool- but most of it pointless. Kind of like the rest of what I do with my life.&lt;/p&gt;

&lt;p&gt;I keep the posts and information up-to-date.&lt;/p&gt;
&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
